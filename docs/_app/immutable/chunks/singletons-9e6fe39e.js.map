{"version":3,"file":"singletons-9e6fe39e.js","sources":["../../../../../../node_modules/svelte/store/index.mjs","../../../../../../node_modules/@sveltejs/kit/src/runtime/paths.js","../../../../../../node_modules/@sveltejs/kit/src/runtime/client/utils.js","../../../../../../node_modules/@sveltejs/kit/src/runtime/client/singletons.js"],"sourcesContent":["import { noop, safe_not_equal, subscribe, run_all, is_function } from '../internal/index.mjs';\nexport { get_store_value as get } from '../internal/index.mjs';\n\nconst subscriber_queue = [];\n/**\n * Creates a `Readable` store that allows reading by subscription.\n * @param value initial value\n * @param {StartStopNotifier}start start and stop notifications for subscriptions\n */\nfunction readable(value, start) {\n    return {\n        subscribe: writable(value, start).subscribe\n    };\n}\n/**\n * Create a `Writable` store that allows both updating and reading by subscription.\n * @param {*=}value initial value\n * @param {StartStopNotifier=}start start and stop notifications for subscriptions\n */\nfunction writable(value, start = noop) {\n    let stop;\n    const subscribers = new Set();\n    function set(new_value) {\n        if (safe_not_equal(value, new_value)) {\n            value = new_value;\n            if (stop) { // store is ready\n                const run_queue = !subscriber_queue.length;\n                for (const subscriber of subscribers) {\n                    subscriber[1]();\n                    subscriber_queue.push(subscriber, value);\n                }\n                if (run_queue) {\n                    for (let i = 0; i < subscriber_queue.length; i += 2) {\n                        subscriber_queue[i][0](subscriber_queue[i + 1]);\n                    }\n                    subscriber_queue.length = 0;\n                }\n            }\n        }\n    }\n    function update(fn) {\n        set(fn(value));\n    }\n    function subscribe(run, invalidate = noop) {\n        const subscriber = [run, invalidate];\n        subscribers.add(subscriber);\n        if (subscribers.size === 1) {\n            stop = start(set) || noop;\n        }\n        run(value);\n        return () => {\n            subscribers.delete(subscriber);\n            if (subscribers.size === 0) {\n                stop();\n                stop = null;\n            }\n        };\n    }\n    return { set, update, subscribe };\n}\nfunction derived(stores, fn, initial_value) {\n    const single = !Array.isArray(stores);\n    const stores_array = single\n        ? [stores]\n        : stores;\n    const auto = fn.length < 2;\n    return readable(initial_value, (set) => {\n        let inited = false;\n        const values = [];\n        let pending = 0;\n        let cleanup = noop;\n        const sync = () => {\n            if (pending) {\n                return;\n            }\n            cleanup();\n            const result = fn(single ? values[0] : values, set);\n            if (auto) {\n                set(result);\n            }\n            else {\n                cleanup = is_function(result) ? result : noop;\n            }\n        };\n        const unsubscribers = stores_array.map((store, i) => subscribe(store, (value) => {\n            values[i] = value;\n            pending &= ~(1 << i);\n            if (inited) {\n                sync();\n            }\n        }, () => {\n            pending |= (1 << i);\n        }));\n        inited = true;\n        sync();\n        return function stop() {\n            run_all(unsubscribers);\n            cleanup();\n        };\n    });\n}\n\nexport { derived, readable, writable };\n","/** @type {string} */\nexport let base = '';\n\n/** @type {string} */\nexport let assets = '';\n\n/** @param {{ base: string, assets: string }} paths */\nexport function set_paths(paths) {\n\tbase = paths.base;\n\tassets = paths.assets || base;\n}\n","import { writable } from 'svelte/store';\nimport { assets } from '../paths.js';\n\n/* global __SVELTEKIT_APP_VERSION__, __SVELTEKIT_APP_VERSION_FILE__, __SVELTEKIT_APP_VERSION_POLL_INTERVAL__ */\n\n/** @param {HTMLDocument} doc */\nexport function get_base_uri(doc) {\n\tlet baseURI = doc.baseURI;\n\n\tif (!baseURI) {\n\t\tconst baseTags = doc.getElementsByTagName('base');\n\t\tbaseURI = baseTags.length ? baseTags[0].href : doc.URL;\n\t}\n\n\treturn baseURI;\n}\n\nexport function scroll_state() {\n\treturn {\n\t\tx: pageXOffset,\n\t\ty: pageYOffset\n\t};\n}\n\n/** @param {Event} event */\nexport function find_anchor(event) {\n\t/** @type {HTMLAnchorElement | SVGAElement | undefined} */\n\tlet a;\n\n\t/** @type {boolean | null} */\n\tlet noscroll = null;\n\n\t/** @type {boolean | null} */\n\tlet prefetch = null;\n\n\t/** @type {boolean | null} */\n\tlet reload = null;\n\n\tfor (const element of event.composedPath()) {\n\t\tif (!(element instanceof Element)) continue;\n\n\t\tif (!a && element.nodeName.toUpperCase() === 'A') {\n\t\t\t// SVG <a> elements have a lowercase name\n\t\t\ta = /** @type {HTMLAnchorElement | SVGAElement} */ (element);\n\t\t}\n\n\t\tif (noscroll === null) noscroll = get_link_option(element, 'data-sveltekit-noscroll');\n\t\tif (prefetch === null) prefetch = get_link_option(element, 'data-sveltekit-prefetch');\n\t\tif (reload === null) reload = get_link_option(element, 'data-sveltekit-reload');\n\t}\n\n\tconst url = a && new URL(a instanceof SVGAElement ? a.href.baseVal : a.href, document.baseURI);\n\n\treturn {\n\t\ta,\n\t\turl,\n\t\toptions: {\n\t\t\tnoscroll,\n\t\t\tprefetch,\n\t\t\treload\n\t\t}\n\t};\n}\n\nconst warned = new WeakSet();\n\n/**\n * @param {Element} element\n * @param {string} attribute\n */\nfunction get_link_option(element, attribute) {\n\tconst value = element.getAttribute(attribute);\n\tif (value === null) return value;\n\n\tif (value === '') return true;\n\tif (value === 'off') return false;\n\n\tif (__SVELTEKIT_DEV__ && !warned.has(element)) {\n\t\tconsole.error(`Unexpected value for ${attribute} â€” should be \"\" or \"off\"`, element);\n\t\twarned.add(element);\n\t}\n\n\treturn false;\n}\n\n/** @param {any} value */\nexport function notifiable_store(value) {\n\tconst store = writable(value);\n\tlet ready = true;\n\n\tfunction notify() {\n\t\tready = true;\n\t\tstore.update((val) => val);\n\t}\n\n\t/** @param {any} new_value */\n\tfunction set(new_value) {\n\t\tready = false;\n\t\tstore.set(new_value);\n\t}\n\n\t/** @param {(value: any) => void} run */\n\tfunction subscribe(run) {\n\t\t/** @type {any} */\n\t\tlet old_value;\n\t\treturn store.subscribe((new_value) => {\n\t\t\tif (old_value === undefined || (ready && new_value !== old_value)) {\n\t\t\t\trun((old_value = new_value));\n\t\t\t}\n\t\t});\n\t}\n\n\treturn { notify, set, subscribe };\n}\n\nexport function create_updated_store() {\n\tconst { set, subscribe } = writable(false);\n\n\tconst interval = __SVELTEKIT_APP_VERSION_POLL_INTERVAL__;\n\n\t/** @type {NodeJS.Timeout} */\n\tlet timeout;\n\n\tasync function check() {\n\t\tif (import.meta.env.DEV || import.meta.env.SSR) return false;\n\n\t\tclearTimeout(timeout);\n\n\t\tif (interval) timeout = setTimeout(check, interval);\n\n\t\tconst res = await fetch(`${assets}/${__SVELTEKIT_APP_VERSION_FILE__}`, {\n\t\t\theaders: {\n\t\t\t\tpragma: 'no-cache',\n\t\t\t\t'cache-control': 'no-cache'\n\t\t\t}\n\t\t});\n\n\t\tif (res.ok) {\n\t\t\tconst { version } = await res.json();\n\t\t\tconst updated = version !== __SVELTEKIT_APP_VERSION__;\n\n\t\t\tif (updated) {\n\t\t\t\tset(true);\n\t\t\t\tclearTimeout(timeout);\n\t\t\t}\n\n\t\t\treturn updated;\n\t\t} else {\n\t\t\tthrow new Error(`Version check failed: ${res.status}`);\n\t\t}\n\t}\n\n\tif (interval) timeout = setTimeout(check, interval);\n\n\treturn {\n\t\tsubscribe,\n\t\tcheck\n\t};\n}\n","import { writable } from 'svelte/store';\nimport { create_updated_store, notifiable_store } from './utils.js';\n\n/** @type {import('./types').Client} */\nexport let client;\n\n/**\n * @param {{\n *   client: import('./types').Client;\n * }} opts\n */\nexport function init(opts) {\n\tclient = opts.client;\n}\n\nexport const stores = {\n\turl: notifiable_store({}),\n\tpage: notifiable_store({}),\n\tnavigating: writable(/** @type {import('types').Navigation | null} */ (null)),\n\tupdated: create_updated_store()\n};\n"],"names":[],"mappings":"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"}