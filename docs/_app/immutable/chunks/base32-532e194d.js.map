{"version":3,"file":"base32-532e194d.js","sources":["../../../../../../node_modules/uint8arrays/esm/src/compare.js","../../../../../../node_modules/ms/index.js","../../../../../../node_modules/debug/src/common.js","../../../../../../node_modules/debug/src/browser.js","../../../../../../node_modules/err-code/index.js","../../../../../../node_modules/varint/encode.js","../../../../../../node_modules/varint/decode.js","../../../../../../node_modules/varint/length.js","../../../../../../node_modules/varint/index.js","../../../../../../node_modules/cborg/esm/lib/length.js","../../../../../../node_modules/@ipld/car/esm/lib/buffer-writer.js","../../../../../../node_modules/@ipld/car/node_modules/multiformats/esm/vendor/varint.js","../../../../../../node_modules/@ipld/car/node_modules/multiformats/esm/src/varint.js","../../../../../../node_modules/@ipld/car/node_modules/multiformats/esm/src/bytes.js","../../../../../../node_modules/@ipld/car/node_modules/multiformats/esm/src/hashes/digest.js","../../../../../../node_modules/@ipld/car/node_modules/multiformats/esm/vendor/base-x.js","../../../../../../node_modules/@ipld/car/node_modules/multiformats/esm/src/bases/base.js","../../../../../../node_modules/@ipld/car/node_modules/multiformats/esm/src/bases/base58.js","../../../../../../node_modules/@ipld/car/node_modules/multiformats/esm/src/bases/base32.js","../../../../../../node_modules/@ipld/car/node_modules/multiformats/esm/src/cid.js","../../../../../../node_modules/@ipld/car/esm/lib/header-validator.js","../../../../../../node_modules/@ipld/car/esm/lib/decoder.js","../../../../../../node_modules/@ipld/car/esm/lib/reader-browser.js","../../../../../../node_modules/mitt/dist/mitt.mjs","../../../../../../node_modules/just-safe-get/index.mjs","../../../../../../node_modules/ipfs-repo-migrations/node_modules/multiformats/esm/vendor/varint.js","../../../../../../node_modules/ipfs-repo-migrations/node_modules/multiformats/esm/src/varint.js","../../../../../../node_modules/ipfs-repo-migrations/node_modules/multiformats/esm/src/bytes.js","../../../../../../node_modules/ipfs-repo-migrations/node_modules/multiformats/esm/src/hashes/digest.js","../../../../../../node_modules/ipfs-repo-migrations/node_modules/multiformats/esm/vendor/base-x.js","../../../../../../node_modules/ipfs-repo-migrations/node_modules/multiformats/esm/src/bases/base.js","../../../../../../node_modules/ipfs-repo-migrations/node_modules/multiformats/esm/src/bases/base58.js","../../../../../../node_modules/ipfs-repo-migrations/node_modules/multiformats/esm/src/bases/base32.js","../../../../../../node_modules/ipfs-repo-migrations/node_modules/multiformats/esm/src/cid.js","../../../../../../node_modules/nanoid/index.browser.js","../../../../../../node_modules/interface-datastore/node_modules/multiformats/vendor/base-x.js","../../../../../../node_modules/interface-datastore/node_modules/multiformats/src/bytes.js","../../../../../../node_modules/interface-datastore/node_modules/multiformats/src/bases/base.js","../../../../../../node_modules/interface-datastore/node_modules/multiformats/src/bases/identity.js","../../../../../../node_modules/interface-datastore/node_modules/multiformats/src/bases/base2.js","../../../../../../node_modules/interface-datastore/node_modules/multiformats/src/bases/base8.js","../../../../../../node_modules/interface-datastore/node_modules/multiformats/src/bases/base10.js","../../../../../../node_modules/interface-datastore/node_modules/multiformats/src/bases/base16.js","../../../../../../node_modules/interface-datastore/node_modules/multiformats/src/bases/base32.js","../../../../../../node_modules/interface-datastore/node_modules/multiformats/src/bases/base36.js","../../../../../../node_modules/interface-datastore/node_modules/multiformats/src/bases/base58.js","../../../../../../node_modules/interface-datastore/node_modules/multiformats/src/bases/base64.js","../../../../../../node_modules/interface-datastore/node_modules/multiformats/src/bases/base256emoji.js","../../../../../../node_modules/interface-datastore/node_modules/multiformats/src/codecs/json.js","../../../../../../node_modules/interface-datastore/node_modules/multiformats/src/basics.js","../../../../../../node_modules/interface-datastore/node_modules/uint8arrays/dist/src/util/as-uint8array.js","../../../../../../node_modules/interface-datastore/node_modules/uint8arrays/dist/src/alloc.js","../../../../../../node_modules/interface-datastore/node_modules/uint8arrays/dist/src/util/bases.js","../../../../../../node_modules/interface-datastore/node_modules/uint8arrays/dist/src/to-string.js","../../../../../../node_modules/interface-datastore/node_modules/uint8arrays/dist/src/from-string.js","../../../../../../node_modules/interface-datastore/dist/src/key.js","../../../../../../node_modules/it-length/index.js","../../../../../../node_modules/ipfs-repo-migrations/node_modules/multiformats/esm/src/codecs/raw.js","../../../../../../node_modules/ipfs-repo-migrations/migrations/migration-8/index.js","../../../../../../node_modules/@ipld/dag-pb/node_modules/multiformats/esm/vendor/varint.js","../../../../../../node_modules/@ipld/dag-pb/node_modules/multiformats/esm/src/varint.js","../../../../../../node_modules/@ipld/dag-pb/node_modules/multiformats/esm/src/bytes.js","../../../../../../node_modules/@ipld/dag-pb/node_modules/multiformats/esm/src/hashes/digest.js","../../../../../../node_modules/@ipld/dag-pb/node_modules/multiformats/esm/vendor/base-x.js","../../../../../../node_modules/@ipld/dag-pb/node_modules/multiformats/esm/src/bases/base.js","../../../../../../node_modules/@ipld/dag-pb/node_modules/multiformats/esm/src/bases/base58.js","../../../../../../node_modules/@ipld/dag-pb/node_modules/multiformats/esm/src/bases/base32.js","../../../../../../node_modules/@ipld/dag-pb/node_modules/multiformats/esm/src/cid.js","../../../../../../node_modules/@ipld/dag-pb/esm/src/pb-decode.js","../../../../../../node_modules/@ipld/dag-pb/esm/src/pb-encode.js","../../../../../../node_modules/@ipld/dag-pb/esm/src/util.js","../../../../../../node_modules/@ipld/dag-pb/esm/src/index.js","../../../../../../node_modules/@protobufjs/aspromise/index.js","../../../../../../node_modules/@protobufjs/base64/index.js","../../../../../../node_modules/@protobufjs/eventemitter/index.js","../../../../../../node_modules/@protobufjs/float/index.js","../../../../../../node_modules/@protobufjs/inquire/index.js","../../../../../../node_modules/@protobufjs/utf8/index.js","../../../../../../node_modules/@protobufjs/pool/index.js","../../../../../../node_modules/protobufjs/src/util/longbits.js","../../../../../../node_modules/protobufjs/src/util/minimal.js","../../../../../../node_modules/protobufjs/src/writer.js","../../../../../../node_modules/protobufjs/src/writer_buffer.js","../../../../../../node_modules/protobufjs/src/reader.js","../../../../../../node_modules/protobufjs/src/reader_buffer.js","../../../../../../node_modules/protobufjs/src/rpc/service.js","../../../../../../node_modules/protobufjs/src/rpc.js","../../../../../../node_modules/protobufjs/src/roots.js","../../../../../../node_modules/protobufjs/src/index-minimal.js","../../../../../../node_modules/protobufjs/minimal.js","../../../../../../node_modules/ipfs-repo-migrations/migrations/migration-9/pin.js","../../../../../../node_modules/fnv1a/index.js","../../../../../../node_modules/ipfs-repo-migrations/migrations/migration-9/utils.js","../../../../../../node_modules/ipfs-repo-migrations/node_modules/multiformats/esm/src/hashes/hasher.js","../../../../../../node_modules/ipfs-repo-migrations/node_modules/multiformats/esm/src/hashes/sha2-browser.js","../../../../../../node_modules/ipfs-repo-migrations/migrations/migration-9/pin-set.js","../../../../../../node_modules/ipfs-repo-migrations/migrations/migration-9/index.js","../../../../../../node_modules/datastore-core/src/errors.js","../../../../../../node_modules/ipfs-repo-migrations/src/utils.js","../../../../../../node_modules/ipfs-repo-migrations/migrations/migration-10/index.js","../../../../../../node_modules/ipfs-repo-migrations/migrations/migration-11/index.js","../../../../../../node_modules/ipfs-repo-migrations/migrations/migration-12/pb/proto-book.js","../../../../../../node_modules/ipfs-repo-migrations/migrations/migration-12/pb/address-book.js","../../../../../../node_modules/ipfs-repo-migrations/migrations/migration-12/pb/peer.js","../../../../../../node_modules/ipfs-repo-migrations/migrations/migration-12/pb/envelope.js","../../../../../../node_modules/ipfs-repo-migrations/migrations/migration-12/pb/peer-record.js","../../../../../../node_modules/@chainsafe/is-ip/lib/parser.js","../../../../../../node_modules/@chainsafe/is-ip/lib/parse.js","../../../../../../node_modules/@chainsafe/is-ip/lib/is-ip.js","../../../../../../node_modules/@multiformats/multiaddr/node_modules/multiformats/vendor/base-x.js","../../../../../../node_modules/@multiformats/multiaddr/node_modules/multiformats/src/bytes.js","../../../../../../node_modules/@multiformats/multiaddr/node_modules/multiformats/src/bases/base.js","../../../../../../node_modules/@multiformats/multiaddr/node_modules/multiformats/src/bases/identity.js","../../../../../../node_modules/@multiformats/multiaddr/node_modules/multiformats/src/bases/base2.js","../../../../../../node_modules/@multiformats/multiaddr/node_modules/multiformats/src/bases/base8.js","../../../../../../node_modules/@multiformats/multiaddr/node_modules/multiformats/src/bases/base10.js","../../../../../../node_modules/@multiformats/multiaddr/node_modules/multiformats/src/bases/base16.js","../../../../../../node_modules/@multiformats/multiaddr/node_modules/multiformats/src/bases/base32.js","../../../../../../node_modules/@multiformats/multiaddr/node_modules/multiformats/src/bases/base36.js","../../../../../../node_modules/@multiformats/multiaddr/node_modules/multiformats/src/bases/base58.js","../../../../../../node_modules/@multiformats/multiaddr/node_modules/multiformats/src/bases/base64.js","../../../../../../node_modules/@multiformats/multiaddr/node_modules/multiformats/src/bases/base256emoji.js","../../../../../../node_modules/@multiformats/multiaddr/node_modules/multiformats/vendor/varint.js","../../../../../../node_modules/@multiformats/multiaddr/node_modules/multiformats/src/varint.js","../../../../../../node_modules/@multiformats/multiaddr/node_modules/multiformats/src/hashes/digest.js","../../../../../../node_modules/@multiformats/multiaddr/node_modules/multiformats/src/codecs/json.js","../../../../../../node_modules/@multiformats/multiaddr/node_modules/multiformats/src/cid.js","../../../../../../node_modules/@multiformats/multiaddr/node_modules/multiformats/src/basics.js","../../../../../../node_modules/@multiformats/multiaddr/node_modules/uint8arrays/dist/src/util/as-uint8array.js","../../../../../../node_modules/@multiformats/multiaddr/node_modules/uint8arrays/dist/src/alloc.js","../../../../../../node_modules/@multiformats/multiaddr/node_modules/uint8arrays/dist/src/util/bases.js","../../../../../../node_modules/@multiformats/multiaddr/node_modules/uint8arrays/dist/src/to-string.js","../../../../../../node_modules/@multiformats/multiaddr/dist/src/ip.js","../../../../../../node_modules/@multiformats/multiaddr/dist/src/protocols-table.js","../../../../../../node_modules/@multiformats/multiaddr/node_modules/uint8arrays/dist/src/from-string.js","../../../../../../node_modules/@multiformats/multiaddr/node_modules/uint8arrays/dist/src/concat.js","../../../../../../node_modules/@multiformats/multiaddr/dist/src/convert.js","../../../../../../node_modules/@multiformats/multiaddr/dist/src/codec.js","../../../../../../node_modules/@multiformats/multiaddr/node_modules/uint8arrays/dist/src/equals.js","../../../../../../node_modules/@multiformats/multiaddr/dist/src/index.js","../../../../../../node_modules/ipfs-repo-migrations/migrations/migration-12/index.js","../../../../../../node_modules/ipfs-repo-migrations/migrations/index.js","../../../../../../node_modules/ipfs-repo-migrations/src/errors.js","../../../../../../node_modules/ipfs-repo-migrations/src/repo/init.js","../../../../../../node_modules/ipfs-repo-migrations/src/repo/version.js","../../../../../../node_modules/ipfs-repo-migrations/src/index.js","../../../../../../node_modules/bytes/index.js","../../../../../../node_modules/is-plain-obj/index.js","../../../../../../node_modules/merge-options/index.js","../../../../../../node_modules/ipfs-repo/src/constants.js","../../../../../../node_modules/ipfs-repo/src/errors.js","../../../../../../node_modules/ipfs-repo/src/utils/level.js","../../../../../../node_modules/ipfs-repo/src/version.js","../../../../../../node_modules/eventemitter3/index.js","../../../../../../node_modules/p-queue/node_modules/p-timeout/index.js","../../../../../../node_modules/p-queue/dist/lower-bound.js","../../../../../../node_modules/p-queue/dist/priority-queue.js","../../../../../../node_modules/p-queue/dist/index.js","../../../../../../node_modules/just-safe-set/index.mjs","../../../../../../node_modules/ipfs-repo/src/config.js","../../../../../../node_modules/sort-keys/node_modules/is-plain-obj/index.js","../../../../../../node_modules/sort-keys/index.js","../../../../../../node_modules/ipfs-repo/src/spec.js","../../../../../../node_modules/ipfs-repo/src/api-addr.js","../../../../../../node_modules/it-filter/index.js","../../../../../../node_modules/it-pushable/dist/src/fifo.js","../../../../../../node_modules/it-pushable/dist/src/index.js","../../../../../../node_modules/it-drain/index.js","../../../../../../node_modules/ipfs-repo/node_modules/multiformats/esm/vendor/varint.js","../../../../../../node_modules/ipfs-repo/node_modules/multiformats/esm/src/varint.js","../../../../../../node_modules/ipfs-repo/node_modules/multiformats/esm/src/bytes.js","../../../../../../node_modules/ipfs-repo/node_modules/multiformats/esm/src/hashes/digest.js","../../../../../../node_modules/ipfs-repo/node_modules/multiformats/esm/vendor/base-x.js","../../../../../../node_modules/ipfs-repo/node_modules/multiformats/esm/src/bases/base.js","../../../../../../node_modules/ipfs-repo/node_modules/multiformats/esm/src/bases/base58.js","../../../../../../node_modules/ipfs-repo/node_modules/multiformats/esm/src/bases/base32.js","../../../../../../node_modules/ipfs-repo/node_modules/multiformats/esm/src/cid.js","../../../../../../node_modules/ipfs-repo/node_modules/multiformats/esm/src/hashes/identity.js","../../../../../../node_modules/ipfs-repo/src/idstore.js","../../../../../../node_modules/ipfs-repo/src/locks/memory.js","../../../../../../node_modules/ipfs-repo/src/default-options.js","../../../../../../node_modules/ipfs-repo/src/default-datastore.js","../../../../../../node_modules/it-first/index.js","../../../../../../node_modules/ipfs-repo/node_modules/multiformats/esm/src/block.js","../../../../../../node_modules/ipfs-repo/src/utils/blockstore.js","../../../../../../node_modules/ipfs-repo/src/utils/walk-dag.js","../../../../../../node_modules/ipfs-repo/src/pin-types.js","../../../../../../node_modules/quick-lru/index.js","../../../../../../node_modules/ipfs-repo/src/pin-manager.js","../../../../../../node_modules/ipfs-repo/node_modules/it-map/index.js","../../../../../../node_modules/ipfs-repo/src/pinned-blockstore.js","../../../../../../node_modules/p-timeout/index.js","../../../../../../node_modules/mortice/dist/src/constants.js","../../../../../../node_modules/observable-webworkers/dist/src/index.js","../../../../../../node_modules/mortice/dist/src/browser.js","../../../../../../node_modules/mortice/dist/src/index.js","../../../../../../node_modules/it-batch/index.js","../../../../../../node_modules/it-parallel-batch/index.js","../../../../../../node_modules/it-merge/dist/src/index.js","../../../../../../node_modules/it-pipe/dist/src/index.js","../../../../../../node_modules/fast-fifo/fixed-size.js","../../../../../../node_modules/fast-fifo/index.js","../../../../../../node_modules/ipfs-repo/node_modules/it-merge/node_modules/it-pushable/index.js","../../../../../../node_modules/ipfs-repo/node_modules/it-merge/index.js","../../../../../../node_modules/ipfs-repo/src/gc.js","../../../../../../node_modules/ipfs-repo/src/index.js","../../../../../../node_modules/datastore-core/src/shard.js","../../../../../../node_modules/datastore-core/src/sharding.js","../../../../../../node_modules/@libp2p/logger/node_modules/multiformats/vendor/base-x.js","../../../../../../node_modules/@libp2p/logger/node_modules/multiformats/src/bytes.js","../../../../../../node_modules/@libp2p/logger/node_modules/multiformats/src/bases/base.js","../../../../../../node_modules/@libp2p/logger/node_modules/multiformats/src/bases/base58.js","../../../../../../node_modules/@libp2p/logger/node_modules/multiformats/src/bases/base32.js","../../../../../../node_modules/@libp2p/logger/node_modules/multiformats/src/bases/base64.js","../../../../../../node_modules/@libp2p/logger/dist/src/index.js","../../../../../../node_modules/datastore-core/src/tiered.js","../../../../../../node_modules/blockstore-datastore-adapter/node_modules/multiformats/esm/src/bytes.js","../../../../../../node_modules/blockstore-datastore-adapter/node_modules/multiformats/esm/vendor/base-x.js","../../../../../../node_modules/blockstore-datastore-adapter/node_modules/multiformats/esm/src/bases/base.js","../../../../../../node_modules/blockstore-datastore-adapter/node_modules/multiformats/esm/src/bases/base58.js","../../../../../../node_modules/blockstore-datastore-adapter/node_modules/multiformats/esm/src/bases/base32.js","../../../../../../node_modules/it-all/index.js","../../../../../../node_modules/@ipld/dag-json/node_modules/multiformats/esm/vendor/varint.js","../../../../../../node_modules/@ipld/dag-json/node_modules/multiformats/esm/src/varint.js","../../../../../../node_modules/@ipld/dag-json/node_modules/multiformats/esm/src/bytes.js","../../../../../../node_modules/@ipld/dag-json/node_modules/multiformats/esm/src/hashes/digest.js","../../../../../../node_modules/@ipld/dag-json/node_modules/multiformats/esm/vendor/base-x.js","../../../../../../node_modules/@ipld/dag-json/node_modules/multiformats/esm/src/bases/base.js","../../../../../../node_modules/@ipld/dag-json/node_modules/multiformats/esm/src/bases/base58.js","../../../../../../node_modules/@ipld/dag-json/node_modules/multiformats/esm/src/bases/base32.js","../../../../../../node_modules/@ipld/dag-json/node_modules/multiformats/esm/src/cid.js","../../../../../../node_modules/@ipld/dag-json/node_modules/multiformats/esm/src/bases/base64.js","../../../../../../node_modules/cborg/esm/lib/json/encode.js","../../../../../../node_modules/cborg/esm/lib/json/decode.js","../../../../../../node_modules/@ipld/dag-json/esm/index.js","../../../../../../node_modules/dag-jose/node_modules/multiformats/esm/vendor/base-x.js","../../../../../../node_modules/dag-jose/node_modules/multiformats/esm/src/bytes.js","../../../../../../node_modules/dag-jose/node_modules/multiformats/esm/src/bases/base.js","../../../../../../node_modules/dag-jose/node_modules/multiformats/esm/src/bases/base64.js","../../../../../../node_modules/dag-jose/node_modules/multiformats/esm/src/bases/base58.js","../../../../../../node_modules/dag-jose/node_modules/multiformats/esm/src/bases/base32.js"],"sourcesContent":["export function compare(a, b) {\n  for (let i = 0; i < a.byteLength; i++) {\n    if (a[i] < b[i]) {\n      return -1;\n    }\n    if (a[i] > b[i]) {\n      return 1;\n    }\n  }\n  if (a.byteLength > b.byteLength) {\n    return 1;\n  }\n  if (a.byteLength < b.byteLength) {\n    return -1;\n  }\n  return 0;\n}","/**\n * Helpers.\n */\n\nvar s = 1000;\nvar m = s * 60;\nvar h = m * 60;\nvar d = h * 24;\nvar w = d * 7;\nvar y = d * 365.25;\n\n/**\n * Parse or format the given `val`.\n *\n * Options:\n *\n *  - `long` verbose formatting [false]\n *\n * @param {String|Number} val\n * @param {Object} [options]\n * @throws {Error} throw an error if val is not a non-empty string or a number\n * @return {String|Number}\n * @api public\n */\n\nmodule.exports = function(val, options) {\n  options = options || {};\n  var type = typeof val;\n  if (type === 'string' && val.length > 0) {\n    return parse(val);\n  } else if (type === 'number' && isFinite(val)) {\n    return options.long ? fmtLong(val) : fmtShort(val);\n  }\n  throw new Error(\n    'val is not a non-empty string or a valid number. val=' +\n      JSON.stringify(val)\n  );\n};\n\n/**\n * Parse the given `str` and return milliseconds.\n *\n * @param {String} str\n * @return {Number}\n * @api private\n */\n\nfunction parse(str) {\n  str = String(str);\n  if (str.length > 100) {\n    return;\n  }\n  var match = /^(-?(?:\\d+)?\\.?\\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)?$/i.exec(\n    str\n  );\n  if (!match) {\n    return;\n  }\n  var n = parseFloat(match[1]);\n  var type = (match[2] || 'ms').toLowerCase();\n  switch (type) {\n    case 'years':\n    case 'year':\n    case 'yrs':\n    case 'yr':\n    case 'y':\n      return n * y;\n    case 'weeks':\n    case 'week':\n    case 'w':\n      return n * w;\n    case 'days':\n    case 'day':\n    case 'd':\n      return n * d;\n    case 'hours':\n    case 'hour':\n    case 'hrs':\n    case 'hr':\n    case 'h':\n      return n * h;\n    case 'minutes':\n    case 'minute':\n    case 'mins':\n    case 'min':\n    case 'm':\n      return n * m;\n    case 'seconds':\n    case 'second':\n    case 'secs':\n    case 'sec':\n    case 's':\n      return n * s;\n    case 'milliseconds':\n    case 'millisecond':\n    case 'msecs':\n    case 'msec':\n    case 'ms':\n      return n;\n    default:\n      return undefined;\n  }\n}\n\n/**\n * Short format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtShort(ms) {\n  var msAbs = Math.abs(ms);\n  if (msAbs >= d) {\n    return Math.round(ms / d) + 'd';\n  }\n  if (msAbs >= h) {\n    return Math.round(ms / h) + 'h';\n  }\n  if (msAbs >= m) {\n    return Math.round(ms / m) + 'm';\n  }\n  if (msAbs >= s) {\n    return Math.round(ms / s) + 's';\n  }\n  return ms + 'ms';\n}\n\n/**\n * Long format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtLong(ms) {\n  var msAbs = Math.abs(ms);\n  if (msAbs >= d) {\n    return plural(ms, msAbs, d, 'day');\n  }\n  if (msAbs >= h) {\n    return plural(ms, msAbs, h, 'hour');\n  }\n  if (msAbs >= m) {\n    return plural(ms, msAbs, m, 'minute');\n  }\n  if (msAbs >= s) {\n    return plural(ms, msAbs, s, 'second');\n  }\n  return ms + ' ms';\n}\n\n/**\n * Pluralization helper.\n */\n\nfunction plural(ms, msAbs, n, name) {\n  var isPlural = msAbs >= n * 1.5;\n  return Math.round(ms / n) + ' ' + name + (isPlural ? 's' : '');\n}\n","\n/**\n * This is the common logic for both the Node.js and web browser\n * implementations of `debug()`.\n */\n\nfunction setup(env) {\n\tcreateDebug.debug = createDebug;\n\tcreateDebug.default = createDebug;\n\tcreateDebug.coerce = coerce;\n\tcreateDebug.disable = disable;\n\tcreateDebug.enable = enable;\n\tcreateDebug.enabled = enabled;\n\tcreateDebug.humanize = require('ms');\n\tcreateDebug.destroy = destroy;\n\n\tObject.keys(env).forEach(key => {\n\t\tcreateDebug[key] = env[key];\n\t});\n\n\t/**\n\t* The currently active debug mode names, and names to skip.\n\t*/\n\n\tcreateDebug.names = [];\n\tcreateDebug.skips = [];\n\n\t/**\n\t* Map of special \"%n\" handling functions, for the debug \"format\" argument.\n\t*\n\t* Valid key names are a single, lower or upper-case letter, i.e. \"n\" and \"N\".\n\t*/\n\tcreateDebug.formatters = {};\n\n\t/**\n\t* Selects a color for a debug namespace\n\t* @param {String} namespace The namespace string for the debug instance to be colored\n\t* @return {Number|String} An ANSI color code for the given namespace\n\t* @api private\n\t*/\n\tfunction selectColor(namespace) {\n\t\tlet hash = 0;\n\n\t\tfor (let i = 0; i < namespace.length; i++) {\n\t\t\thash = ((hash << 5) - hash) + namespace.charCodeAt(i);\n\t\t\thash |= 0; // Convert to 32bit integer\n\t\t}\n\n\t\treturn createDebug.colors[Math.abs(hash) % createDebug.colors.length];\n\t}\n\tcreateDebug.selectColor = selectColor;\n\n\t/**\n\t* Create a debugger with the given `namespace`.\n\t*\n\t* @param {String} namespace\n\t* @return {Function}\n\t* @api public\n\t*/\n\tfunction createDebug(namespace) {\n\t\tlet prevTime;\n\t\tlet enableOverride = null;\n\t\tlet namespacesCache;\n\t\tlet enabledCache;\n\n\t\tfunction debug(...args) {\n\t\t\t// Disabled?\n\t\t\tif (!debug.enabled) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst self = debug;\n\n\t\t\t// Set `diff` timestamp\n\t\t\tconst curr = Number(new Date());\n\t\t\tconst ms = curr - (prevTime || curr);\n\t\t\tself.diff = ms;\n\t\t\tself.prev = prevTime;\n\t\t\tself.curr = curr;\n\t\t\tprevTime = curr;\n\n\t\t\targs[0] = createDebug.coerce(args[0]);\n\n\t\t\tif (typeof args[0] !== 'string') {\n\t\t\t\t// Anything else let's inspect with %O\n\t\t\t\targs.unshift('%O');\n\t\t\t}\n\n\t\t\t// Apply any `formatters` transformations\n\t\t\tlet index = 0;\n\t\t\targs[0] = args[0].replace(/%([a-zA-Z%])/g, (match, format) => {\n\t\t\t\t// If we encounter an escaped % then don't increase the array index\n\t\t\t\tif (match === '%%') {\n\t\t\t\t\treturn '%';\n\t\t\t\t}\n\t\t\t\tindex++;\n\t\t\t\tconst formatter = createDebug.formatters[format];\n\t\t\t\tif (typeof formatter === 'function') {\n\t\t\t\t\tconst val = args[index];\n\t\t\t\t\tmatch = formatter.call(self, val);\n\n\t\t\t\t\t// Now we need to remove `args[index]` since it's inlined in the `format`\n\t\t\t\t\targs.splice(index, 1);\n\t\t\t\t\tindex--;\n\t\t\t\t}\n\t\t\t\treturn match;\n\t\t\t});\n\n\t\t\t// Apply env-specific formatting (colors, etc.)\n\t\t\tcreateDebug.formatArgs.call(self, args);\n\n\t\t\tconst logFn = self.log || createDebug.log;\n\t\t\tlogFn.apply(self, args);\n\t\t}\n\n\t\tdebug.namespace = namespace;\n\t\tdebug.useColors = createDebug.useColors();\n\t\tdebug.color = createDebug.selectColor(namespace);\n\t\tdebug.extend = extend;\n\t\tdebug.destroy = createDebug.destroy; // XXX Temporary. Will be removed in the next major release.\n\n\t\tObject.defineProperty(debug, 'enabled', {\n\t\t\tenumerable: true,\n\t\t\tconfigurable: false,\n\t\t\tget: () => {\n\t\t\t\tif (enableOverride !== null) {\n\t\t\t\t\treturn enableOverride;\n\t\t\t\t}\n\t\t\t\tif (namespacesCache !== createDebug.namespaces) {\n\t\t\t\t\tnamespacesCache = createDebug.namespaces;\n\t\t\t\t\tenabledCache = createDebug.enabled(namespace);\n\t\t\t\t}\n\n\t\t\t\treturn enabledCache;\n\t\t\t},\n\t\t\tset: v => {\n\t\t\t\tenableOverride = v;\n\t\t\t}\n\t\t});\n\n\t\t// Env-specific initialization logic for debug instances\n\t\tif (typeof createDebug.init === 'function') {\n\t\t\tcreateDebug.init(debug);\n\t\t}\n\n\t\treturn debug;\n\t}\n\n\tfunction extend(namespace, delimiter) {\n\t\tconst newDebug = createDebug(this.namespace + (typeof delimiter === 'undefined' ? ':' : delimiter) + namespace);\n\t\tnewDebug.log = this.log;\n\t\treturn newDebug;\n\t}\n\n\t/**\n\t* Enables a debug mode by namespaces. This can include modes\n\t* separated by a colon and wildcards.\n\t*\n\t* @param {String} namespaces\n\t* @api public\n\t*/\n\tfunction enable(namespaces) {\n\t\tcreateDebug.save(namespaces);\n\t\tcreateDebug.namespaces = namespaces;\n\n\t\tcreateDebug.names = [];\n\t\tcreateDebug.skips = [];\n\n\t\tlet i;\n\t\tconst split = (typeof namespaces === 'string' ? namespaces : '').split(/[\\s,]+/);\n\t\tconst len = split.length;\n\n\t\tfor (i = 0; i < len; i++) {\n\t\t\tif (!split[i]) {\n\t\t\t\t// ignore empty strings\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tnamespaces = split[i].replace(/\\*/g, '.*?');\n\n\t\t\tif (namespaces[0] === '-') {\n\t\t\t\tcreateDebug.skips.push(new RegExp('^' + namespaces.slice(1) + '$'));\n\t\t\t} else {\n\t\t\t\tcreateDebug.names.push(new RegExp('^' + namespaces + '$'));\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t* Disable debug output.\n\t*\n\t* @return {String} namespaces\n\t* @api public\n\t*/\n\tfunction disable() {\n\t\tconst namespaces = [\n\t\t\t...createDebug.names.map(toNamespace),\n\t\t\t...createDebug.skips.map(toNamespace).map(namespace => '-' + namespace)\n\t\t].join(',');\n\t\tcreateDebug.enable('');\n\t\treturn namespaces;\n\t}\n\n\t/**\n\t* Returns true if the given mode name is enabled, false otherwise.\n\t*\n\t* @param {String} name\n\t* @return {Boolean}\n\t* @api public\n\t*/\n\tfunction enabled(name) {\n\t\tif (name[name.length - 1] === '*') {\n\t\t\treturn true;\n\t\t}\n\n\t\tlet i;\n\t\tlet len;\n\n\t\tfor (i = 0, len = createDebug.skips.length; i < len; i++) {\n\t\t\tif (createDebug.skips[i].test(name)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\tfor (i = 0, len = createDebug.names.length; i < len; i++) {\n\t\t\tif (createDebug.names[i].test(name)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t/**\n\t* Convert regexp to namespace\n\t*\n\t* @param {RegExp} regxep\n\t* @return {String} namespace\n\t* @api private\n\t*/\n\tfunction toNamespace(regexp) {\n\t\treturn regexp.toString()\n\t\t\t.substring(2, regexp.toString().length - 2)\n\t\t\t.replace(/\\.\\*\\?$/, '*');\n\t}\n\n\t/**\n\t* Coerce `val`.\n\t*\n\t* @param {Mixed} val\n\t* @return {Mixed}\n\t* @api private\n\t*/\n\tfunction coerce(val) {\n\t\tif (val instanceof Error) {\n\t\t\treturn val.stack || val.message;\n\t\t}\n\t\treturn val;\n\t}\n\n\t/**\n\t* XXX DO NOT USE. This is a temporary stub function.\n\t* XXX It WILL be removed in the next major release.\n\t*/\n\tfunction destroy() {\n\t\tconsole.warn('Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.');\n\t}\n\n\tcreateDebug.enable(createDebug.load());\n\n\treturn createDebug;\n}\n\nmodule.exports = setup;\n","/* eslint-env browser */\n\n/**\n * This is the web browser implementation of `debug()`.\n */\n\nexports.formatArgs = formatArgs;\nexports.save = save;\nexports.load = load;\nexports.useColors = useColors;\nexports.storage = localstorage();\nexports.destroy = (() => {\n\tlet warned = false;\n\n\treturn () => {\n\t\tif (!warned) {\n\t\t\twarned = true;\n\t\t\tconsole.warn('Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.');\n\t\t}\n\t};\n})();\n\n/**\n * Colors.\n */\n\nexports.colors = [\n\t'#0000CC',\n\t'#0000FF',\n\t'#0033CC',\n\t'#0033FF',\n\t'#0066CC',\n\t'#0066FF',\n\t'#0099CC',\n\t'#0099FF',\n\t'#00CC00',\n\t'#00CC33',\n\t'#00CC66',\n\t'#00CC99',\n\t'#00CCCC',\n\t'#00CCFF',\n\t'#3300CC',\n\t'#3300FF',\n\t'#3333CC',\n\t'#3333FF',\n\t'#3366CC',\n\t'#3366FF',\n\t'#3399CC',\n\t'#3399FF',\n\t'#33CC00',\n\t'#33CC33',\n\t'#33CC66',\n\t'#33CC99',\n\t'#33CCCC',\n\t'#33CCFF',\n\t'#6600CC',\n\t'#6600FF',\n\t'#6633CC',\n\t'#6633FF',\n\t'#66CC00',\n\t'#66CC33',\n\t'#9900CC',\n\t'#9900FF',\n\t'#9933CC',\n\t'#9933FF',\n\t'#99CC00',\n\t'#99CC33',\n\t'#CC0000',\n\t'#CC0033',\n\t'#CC0066',\n\t'#CC0099',\n\t'#CC00CC',\n\t'#CC00FF',\n\t'#CC3300',\n\t'#CC3333',\n\t'#CC3366',\n\t'#CC3399',\n\t'#CC33CC',\n\t'#CC33FF',\n\t'#CC6600',\n\t'#CC6633',\n\t'#CC9900',\n\t'#CC9933',\n\t'#CCCC00',\n\t'#CCCC33',\n\t'#FF0000',\n\t'#FF0033',\n\t'#FF0066',\n\t'#FF0099',\n\t'#FF00CC',\n\t'#FF00FF',\n\t'#FF3300',\n\t'#FF3333',\n\t'#FF3366',\n\t'#FF3399',\n\t'#FF33CC',\n\t'#FF33FF',\n\t'#FF6600',\n\t'#FF6633',\n\t'#FF9900',\n\t'#FF9933',\n\t'#FFCC00',\n\t'#FFCC33'\n];\n\n/**\n * Currently only WebKit-based Web Inspectors, Firefox >= v31,\n * and the Firebug extension (any Firefox version) are known\n * to support \"%c\" CSS customizations.\n *\n * TODO: add a `localStorage` variable to explicitly enable/disable colors\n */\n\n// eslint-disable-next-line complexity\nfunction useColors() {\n\t// NB: In an Electron preload script, document will be defined but not fully\n\t// initialized. Since we know we're in Chrome, we'll just detect this case\n\t// explicitly\n\tif (typeof window !== 'undefined' && window.process && (window.process.type === 'renderer' || window.process.__nwjs)) {\n\t\treturn true;\n\t}\n\n\t// Internet Explorer and Edge do not support colors.\n\tif (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/(edge|trident)\\/(\\d+)/)) {\n\t\treturn false;\n\t}\n\n\t// Is webkit? http://stackoverflow.com/a/16459606/376773\n\t// document is undefined in react-native: https://github.com/facebook/react-native/pull/1632\n\treturn (typeof document !== 'undefined' && document.documentElement && document.documentElement.style && document.documentElement.style.WebkitAppearance) ||\n\t\t// Is firebug? http://stackoverflow.com/a/398120/376773\n\t\t(typeof window !== 'undefined' && window.console && (window.console.firebug || (window.console.exception && window.console.table))) ||\n\t\t// Is firefox >= v31?\n\t\t// https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages\n\t\t(typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/firefox\\/(\\d+)/) && parseInt(RegExp.$1, 10) >= 31) ||\n\t\t// Double check webkit in userAgent just in case we are in a worker\n\t\t(typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\\/(\\d+)/));\n}\n\n/**\n * Colorize log arguments if enabled.\n *\n * @api public\n */\n\nfunction formatArgs(args) {\n\targs[0] = (this.useColors ? '%c' : '') +\n\t\tthis.namespace +\n\t\t(this.useColors ? ' %c' : ' ') +\n\t\targs[0] +\n\t\t(this.useColors ? '%c ' : ' ') +\n\t\t'+' + module.exports.humanize(this.diff);\n\n\tif (!this.useColors) {\n\t\treturn;\n\t}\n\n\tconst c = 'color: ' + this.color;\n\targs.splice(1, 0, c, 'color: inherit');\n\n\t// The final \"%c\" is somewhat tricky, because there could be other\n\t// arguments passed either before or after the %c, so we need to\n\t// figure out the correct index to insert the CSS into\n\tlet index = 0;\n\tlet lastC = 0;\n\targs[0].replace(/%[a-zA-Z%]/g, match => {\n\t\tif (match === '%%') {\n\t\t\treturn;\n\t\t}\n\t\tindex++;\n\t\tif (match === '%c') {\n\t\t\t// We only are interested in the *last* %c\n\t\t\t// (the user may have provided their own)\n\t\t\tlastC = index;\n\t\t}\n\t});\n\n\targs.splice(lastC, 0, c);\n}\n\n/**\n * Invokes `console.debug()` when available.\n * No-op when `console.debug` is not a \"function\".\n * If `console.debug` is not available, falls back\n * to `console.log`.\n *\n * @api public\n */\nexports.log = console.debug || console.log || (() => {});\n\n/**\n * Save `namespaces`.\n *\n * @param {String} namespaces\n * @api private\n */\nfunction save(namespaces) {\n\ttry {\n\t\tif (namespaces) {\n\t\t\texports.storage.setItem('debug', namespaces);\n\t\t} else {\n\t\t\texports.storage.removeItem('debug');\n\t\t}\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n}\n\n/**\n * Load `namespaces`.\n *\n * @return {String} returns the previously persisted debug modes\n * @api private\n */\nfunction load() {\n\tlet r;\n\ttry {\n\t\tr = exports.storage.getItem('debug');\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n\n\t// If debug isn't set in LS, and we're in Electron, try to load $DEBUG\n\tif (!r && typeof process !== 'undefined' && 'env' in process) {\n\t\tr = process.env.DEBUG;\n\t}\n\n\treturn r;\n}\n\n/**\n * Localstorage attempts to return the localstorage.\n *\n * This is necessary because safari throws\n * when a user disables cookies/localstorage\n * and you attempt to access it.\n *\n * @return {LocalStorage}\n * @api private\n */\n\nfunction localstorage() {\n\ttry {\n\t\t// TVMLKit (Apple TV JS Runtime) does not have a window object, just localStorage in the global context\n\t\t// The Browser also has localStorage in the global context.\n\t\treturn localStorage;\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n}\n\nmodule.exports = require('./common')(exports);\n\nconst {formatters} = module.exports;\n\n/**\n * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.\n */\n\nformatters.j = function (v) {\n\ttry {\n\t\treturn JSON.stringify(v);\n\t} catch (error) {\n\t\treturn '[UnexpectedJSONParseError]: ' + error.message;\n\t}\n};\n","'use strict';\n\n/**\n * @typedef {{ [key: string]: any }} Extensions\n * @typedef {Error} Err\n * @property {string} message\n */\n\n/**\n *\n * @param {Error} obj\n * @param {Extensions} props\n * @returns {Error & Extensions}\n */\nfunction assign(obj, props) {\n    for (const key in props) {\n        Object.defineProperty(obj, key, {\n            value: props[key],\n            enumerable: true,\n            configurable: true,\n        });\n    }\n\n    return obj;\n}\n\n/**\n *\n * @param {any} err - An Error\n * @param {string|Extensions} code - A string code or props to set on the error\n * @param {Extensions} [props] - Props to set on the error\n * @returns {Error & Extensions}\n */\nfunction createError(err, code, props) {\n    if (!err || typeof err === 'string') {\n        throw new TypeError('Please pass an Error to err-code');\n    }\n\n    if (!props) {\n        props = {};\n    }\n\n    if (typeof code === 'object') {\n        props = code;\n        code = '';\n    }\n\n    if (code) {\n        props.code = code;\n    }\n\n    try {\n        return assign(err, props);\n    } catch (_) {\n        props.message = err.message;\n        props.stack = err.stack;\n\n        const ErrClass = function () {};\n\n        ErrClass.prototype = Object.create(Object.getPrototypeOf(err));\n\n        // @ts-ignore\n        const output = assign(new ErrClass(), props);\n\n        return output;\n    }\n}\n\nmodule.exports = createError;\n","module.exports = encode\n\nvar MSB = 0x80\n  , REST = 0x7F\n  , MSBALL = ~REST\n  , INT = Math.pow(2, 31)\n\nfunction encode(num, out, offset) {\n  if (Number.MAX_SAFE_INTEGER && num > Number.MAX_SAFE_INTEGER) {\n    encode.bytes = 0\n    throw new RangeError('Could not encode varint')\n  }\n  out = out || []\n  offset = offset || 0\n  var oldOffset = offset\n\n  while(num >= INT) {\n    out[offset++] = (num & 0xFF) | MSB\n    num /= 128\n  }\n  while(num & MSBALL) {\n    out[offset++] = (num & 0xFF) | MSB\n    num >>>= 7\n  }\n  out[offset] = num | 0\n  \n  encode.bytes = offset - oldOffset + 1\n  \n  return out\n}\n","module.exports = read\n\nvar MSB = 0x80\n  , REST = 0x7F\n\nfunction read(buf, offset) {\n  var res    = 0\n    , offset = offset || 0\n    , shift  = 0\n    , counter = offset\n    , b\n    , l = buf.length\n\n  do {\n    if (counter >= l || shift > 49) {\n      read.bytes = 0\n      throw new RangeError('Could not decode varint')\n    }\n    b = buf[counter++]\n    res += shift < 28\n      ? (b & REST) << shift\n      : (b & REST) * Math.pow(2, shift)\n    shift += 7\n  } while (b >= MSB)\n\n  read.bytes = counter - offset\n\n  return res\n}\n","\nvar N1 = Math.pow(2,  7)\nvar N2 = Math.pow(2, 14)\nvar N3 = Math.pow(2, 21)\nvar N4 = Math.pow(2, 28)\nvar N5 = Math.pow(2, 35)\nvar N6 = Math.pow(2, 42)\nvar N7 = Math.pow(2, 49)\nvar N8 = Math.pow(2, 56)\nvar N9 = Math.pow(2, 63)\n\nmodule.exports = function (value) {\n  return (\n    value < N1 ? 1\n  : value < N2 ? 2\n  : value < N3 ? 3\n  : value < N4 ? 4\n  : value < N5 ? 5\n  : value < N6 ? 6\n  : value < N7 ? 7\n  : value < N8 ? 8\n  : value < N9 ? 9\n  :              10\n  )\n}\n","module.exports = {\n    encode: require('./encode.js')\n  , decode: require('./decode.js')\n  , encodingLength: require('./length.js')\n}\n","import {\n  makeCborEncoders,\n  objectToTokens\n} from './encode.js';\nimport { quickEncodeToken } from './jump.js';\nconst cborEncoders = makeCborEncoders();\nconst defaultEncodeOptions = {\n  float64: false,\n  quickEncodeToken\n};\nexport function encodedLength(data, options) {\n  options = Object.assign({}, defaultEncodeOptions, options);\n  options.mapSorter = undefined;\n  const tokens = objectToTokens(data, options);\n  return tokensToLength(tokens, cborEncoders, options);\n}\nexport function tokensToLength(tokens, encoders = cborEncoders, options = defaultEncodeOptions) {\n  if (Array.isArray(tokens)) {\n    let len = 0;\n    for (const token of tokens) {\n      len += tokensToLength(token, encoders, options);\n    }\n    return len;\n  } else {\n    const encoder = encoders[tokens.type.major];\n    if (encoder.encodedSize === undefined || typeof encoder.encodedSize !== 'function') {\n      throw new Error(`Encoder for ${ tokens.type.name } does not have an encodedSize()`);\n    }\n    return encoder.encodedSize(tokens, options);\n  }\n}","import varint from 'varint';\nimport {\n  Token,\n  Type\n} from 'cborg';\nimport { tokensToLength } from 'cborg/length';\nimport * as CBOR from '@ipld/dag-cbor';\nclass CarBufferWriter {\n  constructor(bytes, headerSize) {\n    this.bytes = bytes;\n    this.byteOffset = headerSize;\n    this.roots = [];\n    this.headerSize = headerSize;\n  }\n  addRoot(root, options) {\n    addRoot(this, root, options);\n    return this;\n  }\n  write(block) {\n    addBlock(this, block);\n    return this;\n  }\n  close(options) {\n    return close(this, options);\n  }\n}\nexport const addRoot = (writer, root, options = {}) => {\n  const {\n    resize = false\n  } = options;\n  const {bytes, headerSize, byteOffset, roots} = writer;\n  writer.roots.push(root);\n  const size = headerLength(writer);\n  if (size > headerSize) {\n    if (size - headerSize + byteOffset < bytes.byteLength) {\n      if (resize) {\n        resizeHeader(writer, size);\n      } else {\n        roots.pop();\n        throw new RangeError(`Header of size ${ headerSize } has no capacity for new root ${ root }.\n  However there is a space in the buffer and you could call addRoot(root, { resize: root }) to resize header to make a space for this root.`);\n      }\n    } else {\n      roots.pop();\n      throw new RangeError(`Buffer has no capacity for a new root ${ root }`);\n    }\n  }\n};\nexport const blockLength = ({cid, bytes}) => {\n  const size = cid.bytes.byteLength + bytes.byteLength;\n  return varint.encodingLength(size) + size;\n};\nexport const addBlock = (writer, {cid, bytes}) => {\n  const byteLength = cid.bytes.byteLength + bytes.byteLength;\n  const size = varint.encode(byteLength);\n  if (writer.byteOffset + size.length + byteLength > writer.bytes.byteLength) {\n    throw new RangeError('Buffer has no capacity for this block');\n  } else {\n    writeBytes(writer, size);\n    writeBytes(writer, cid.bytes);\n    writeBytes(writer, bytes);\n  }\n};\nexport const close = (writer, options = {}) => {\n  const {\n    resize = false\n  } = options;\n  const {roots, bytes, byteOffset, headerSize} = writer;\n  const headerBytes = CBOR.encode({\n    version: 1,\n    roots\n  });\n  const varintBytes = varint.encode(headerBytes.length);\n  const size = varintBytes.length + headerBytes.byteLength;\n  const offset = headerSize - size;\n  if (offset === 0) {\n    writeHeader(writer, varintBytes, headerBytes);\n    return bytes.subarray(0, byteOffset);\n  } else if (resize) {\n    resizeHeader(writer, size);\n    writeHeader(writer, varintBytes, headerBytes);\n    return bytes.subarray(0, writer.byteOffset);\n  } else {\n    throw new RangeError(`Header size was overestimated.\nYou can use close({ resize: true }) to resize header`);\n  }\n};\nexport const resizeHeader = (writer, byteLength) => {\n  const {bytes, headerSize} = writer;\n  bytes.set(bytes.subarray(headerSize, writer.byteOffset), byteLength);\n  writer.byteOffset += byteLength - headerSize;\n  writer.headerSize = byteLength;\n};\nconst writeBytes = (writer, bytes) => {\n  writer.bytes.set(bytes, writer.byteOffset);\n  writer.byteOffset += bytes.length;\n};\nconst writeHeader = ({bytes}, varint, header) => {\n  bytes.set(varint);\n  bytes.set(header, varint.length);\n};\nconst headerPreludeTokens = [\n  new Token(Type.map, 2),\n  new Token(Type.string, 'version'),\n  new Token(Type.uint, 1),\n  new Token(Type.string, 'roots')\n];\nconst CID_TAG = new Token(Type.tag, 42);\nexport const calculateHeaderLength = rootLengths => {\n  const tokens = [...headerPreludeTokens];\n  tokens.push(new Token(Type.array, rootLengths.length));\n  for (const rootLength of rootLengths) {\n    tokens.push(CID_TAG);\n    tokens.push(new Token(Type.bytes, { length: rootLength + 1 }));\n  }\n  const length = tokensToLength(tokens);\n  return varint.encodingLength(length) + length;\n};\nexport const headerLength = ({roots}) => calculateHeaderLength(roots.map(cid => cid.bytes.byteLength));\nexport const estimateHeaderLength = (rootCount, rootByteLength = 36) => calculateHeaderLength(new Array(rootCount).fill(rootByteLength));\nexport const createWriter = (buffer, options = {}) => {\n  const {roots = [], byteOffset = 0, byteLength = buffer.byteLength, headerSize = headerLength({ roots })} = options;\n  const bytes = new Uint8Array(buffer, byteOffset, byteLength);\n  const writer = new CarBufferWriter(bytes, headerSize);\n  for (const root of roots) {\n    writer.addRoot(root);\n  }\n  return writer;\n};","var encode_1 = encode;\nvar MSB = 128, REST = 127, MSBALL = ~REST, INT = Math.pow(2, 31);\nfunction encode(num, out, offset) {\n  out = out || [];\n  offset = offset || 0;\n  var oldOffset = offset;\n  while (num >= INT) {\n    out[offset++] = num & 255 | MSB;\n    num /= 128;\n  }\n  while (num & MSBALL) {\n    out[offset++] = num & 255 | MSB;\n    num >>>= 7;\n  }\n  out[offset] = num | 0;\n  encode.bytes = offset - oldOffset + 1;\n  return out;\n}\nvar decode = read;\nvar MSB$1 = 128, REST$1 = 127;\nfunction read(buf, offset) {\n  var res = 0, offset = offset || 0, shift = 0, counter = offset, b, l = buf.length;\n  do {\n    if (counter >= l) {\n      read.bytes = 0;\n      throw new RangeError('Could not decode varint');\n    }\n    b = buf[counter++];\n    res += shift < 28 ? (b & REST$1) << shift : (b & REST$1) * Math.pow(2, shift);\n    shift += 7;\n  } while (b >= MSB$1);\n  read.bytes = counter - offset;\n  return res;\n}\nvar N1 = Math.pow(2, 7);\nvar N2 = Math.pow(2, 14);\nvar N3 = Math.pow(2, 21);\nvar N4 = Math.pow(2, 28);\nvar N5 = Math.pow(2, 35);\nvar N6 = Math.pow(2, 42);\nvar N7 = Math.pow(2, 49);\nvar N8 = Math.pow(2, 56);\nvar N9 = Math.pow(2, 63);\nvar length = function (value) {\n  return value < N1 ? 1 : value < N2 ? 2 : value < N3 ? 3 : value < N4 ? 4 : value < N5 ? 5 : value < N6 ? 6 : value < N7 ? 7 : value < N8 ? 8 : value < N9 ? 9 : 10;\n};\nvar varint = {\n  encode: encode_1,\n  decode: decode,\n  encodingLength: length\n};\nvar _brrp_varint = varint;\nexport default _brrp_varint;","import varint from '../vendor/varint.js';\nexport const decode = (data, offset = 0) => {\n  const code = varint.decode(data, offset);\n  return [\n    code,\n    varint.decode.bytes\n  ];\n};\nexport const encodeTo = (int, target, offset = 0) => {\n  varint.encode(int, target, offset);\n  return target;\n};\nexport const encodingLength = int => {\n  return varint.encodingLength(int);\n};","const empty = new Uint8Array(0);\nconst toHex = d => d.reduce((hex, byte) => hex + byte.toString(16).padStart(2, '0'), '');\nconst fromHex = hex => {\n  const hexes = hex.match(/../g);\n  return hexes ? new Uint8Array(hexes.map(b => parseInt(b, 16))) : empty;\n};\nconst equals = (aa, bb) => {\n  if (aa === bb)\n    return true;\n  if (aa.byteLength !== bb.byteLength) {\n    return false;\n  }\n  for (let ii = 0; ii < aa.byteLength; ii++) {\n    if (aa[ii] !== bb[ii]) {\n      return false;\n    }\n  }\n  return true;\n};\nconst coerce = o => {\n  if (o instanceof Uint8Array && o.constructor.name === 'Uint8Array')\n    return o;\n  if (o instanceof ArrayBuffer)\n    return new Uint8Array(o);\n  if (ArrayBuffer.isView(o)) {\n    return new Uint8Array(o.buffer, o.byteOffset, o.byteLength);\n  }\n  throw new Error('Unknown type, must be binary type');\n};\nconst isBinary = o => o instanceof ArrayBuffer || ArrayBuffer.isView(o);\nconst fromString = str => new TextEncoder().encode(str);\nconst toString = b => new TextDecoder().decode(b);\nexport {\n  equals,\n  coerce,\n  isBinary,\n  fromHex,\n  toHex,\n  fromString,\n  toString,\n  empty\n};","import {\n  coerce,\n  equals as equalBytes\n} from '../bytes.js';\nimport * as varint from '../varint.js';\nexport const create = (code, digest) => {\n  const size = digest.byteLength;\n  const sizeOffset = varint.encodingLength(code);\n  const digestOffset = sizeOffset + varint.encodingLength(size);\n  const bytes = new Uint8Array(digestOffset + size);\n  varint.encodeTo(code, bytes, 0);\n  varint.encodeTo(size, bytes, sizeOffset);\n  bytes.set(digest, digestOffset);\n  return new Digest(code, size, digest, bytes);\n};\nexport const decode = multihash => {\n  const bytes = coerce(multihash);\n  const [code, sizeOffset] = varint.decode(bytes);\n  const [size, digestOffset] = varint.decode(bytes.subarray(sizeOffset));\n  const digest = bytes.subarray(sizeOffset + digestOffset);\n  if (digest.byteLength !== size) {\n    throw new Error('Incorrect length');\n  }\n  return new Digest(code, size, digest, bytes);\n};\nexport const equals = (a, b) => {\n  if (a === b) {\n    return true;\n  } else {\n    return a.code === b.code && a.size === b.size && equalBytes(a.bytes, b.bytes);\n  }\n};\nexport class Digest {\n  constructor(code, size, digest, bytes) {\n    this.code = code;\n    this.size = size;\n    this.digest = digest;\n    this.bytes = bytes;\n  }\n}","function base(ALPHABET, name) {\n  if (ALPHABET.length >= 255) {\n    throw new TypeError('Alphabet too long');\n  }\n  var BASE_MAP = new Uint8Array(256);\n  for (var j = 0; j < BASE_MAP.length; j++) {\n    BASE_MAP[j] = 255;\n  }\n  for (var i = 0; i < ALPHABET.length; i++) {\n    var x = ALPHABET.charAt(i);\n    var xc = x.charCodeAt(0);\n    if (BASE_MAP[xc] !== 255) {\n      throw new TypeError(x + ' is ambiguous');\n    }\n    BASE_MAP[xc] = i;\n  }\n  var BASE = ALPHABET.length;\n  var LEADER = ALPHABET.charAt(0);\n  var FACTOR = Math.log(BASE) / Math.log(256);\n  var iFACTOR = Math.log(256) / Math.log(BASE);\n  function encode(source) {\n    if (source instanceof Uint8Array);\n    else if (ArrayBuffer.isView(source)) {\n      source = new Uint8Array(source.buffer, source.byteOffset, source.byteLength);\n    } else if (Array.isArray(source)) {\n      source = Uint8Array.from(source);\n    }\n    if (!(source instanceof Uint8Array)) {\n      throw new TypeError('Expected Uint8Array');\n    }\n    if (source.length === 0) {\n      return '';\n    }\n    var zeroes = 0;\n    var length = 0;\n    var pbegin = 0;\n    var pend = source.length;\n    while (pbegin !== pend && source[pbegin] === 0) {\n      pbegin++;\n      zeroes++;\n    }\n    var size = (pend - pbegin) * iFACTOR + 1 >>> 0;\n    var b58 = new Uint8Array(size);\n    while (pbegin !== pend) {\n      var carry = source[pbegin];\n      var i = 0;\n      for (var it1 = size - 1; (carry !== 0 || i < length) && it1 !== -1; it1--, i++) {\n        carry += 256 * b58[it1] >>> 0;\n        b58[it1] = carry % BASE >>> 0;\n        carry = carry / BASE >>> 0;\n      }\n      if (carry !== 0) {\n        throw new Error('Non-zero carry');\n      }\n      length = i;\n      pbegin++;\n    }\n    var it2 = size - length;\n    while (it2 !== size && b58[it2] === 0) {\n      it2++;\n    }\n    var str = LEADER.repeat(zeroes);\n    for (; it2 < size; ++it2) {\n      str += ALPHABET.charAt(b58[it2]);\n    }\n    return str;\n  }\n  function decodeUnsafe(source) {\n    if (typeof source !== 'string') {\n      throw new TypeError('Expected String');\n    }\n    if (source.length === 0) {\n      return new Uint8Array();\n    }\n    var psz = 0;\n    if (source[psz] === ' ') {\n      return;\n    }\n    var zeroes = 0;\n    var length = 0;\n    while (source[psz] === LEADER) {\n      zeroes++;\n      psz++;\n    }\n    var size = (source.length - psz) * FACTOR + 1 >>> 0;\n    var b256 = new Uint8Array(size);\n    while (source[psz]) {\n      var carry = BASE_MAP[source.charCodeAt(psz)];\n      if (carry === 255) {\n        return;\n      }\n      var i = 0;\n      for (var it3 = size - 1; (carry !== 0 || i < length) && it3 !== -1; it3--, i++) {\n        carry += BASE * b256[it3] >>> 0;\n        b256[it3] = carry % 256 >>> 0;\n        carry = carry / 256 >>> 0;\n      }\n      if (carry !== 0) {\n        throw new Error('Non-zero carry');\n      }\n      length = i;\n      psz++;\n    }\n    if (source[psz] === ' ') {\n      return;\n    }\n    var it4 = size - length;\n    while (it4 !== size && b256[it4] === 0) {\n      it4++;\n    }\n    var vch = new Uint8Array(zeroes + (size - it4));\n    var j = zeroes;\n    while (it4 !== size) {\n      vch[j++] = b256[it4++];\n    }\n    return vch;\n  }\n  function decode(string) {\n    var buffer = decodeUnsafe(string);\n    if (buffer) {\n      return buffer;\n    }\n    throw new Error(`Non-${ name } character`);\n  }\n  return {\n    encode: encode,\n    decodeUnsafe: decodeUnsafe,\n    decode: decode\n  };\n}\nvar src = base;\nvar _brrp__multiformats_scope_baseX = src;\nexport default _brrp__multiformats_scope_baseX;","import basex from '../../vendor/base-x.js';\nimport { coerce } from '../bytes.js';\nclass Encoder {\n  constructor(name, prefix, baseEncode) {\n    this.name = name;\n    this.prefix = prefix;\n    this.baseEncode = baseEncode;\n  }\n  encode(bytes) {\n    if (bytes instanceof Uint8Array) {\n      return `${ this.prefix }${ this.baseEncode(bytes) }`;\n    } else {\n      throw Error('Unknown type, must be binary type');\n    }\n  }\n}\nclass Decoder {\n  constructor(name, prefix, baseDecode) {\n    this.name = name;\n    this.prefix = prefix;\n    if (prefix.codePointAt(0) === undefined) {\n      throw new Error('Invalid prefix character');\n    }\n    this.prefixCodePoint = prefix.codePointAt(0);\n    this.baseDecode = baseDecode;\n  }\n  decode(text) {\n    if (typeof text === 'string') {\n      if (text.codePointAt(0) !== this.prefixCodePoint) {\n        throw Error(`Unable to decode multibase string ${ JSON.stringify(text) }, ${ this.name } decoder only supports inputs prefixed with ${ this.prefix }`);\n      }\n      return this.baseDecode(text.slice(this.prefix.length));\n    } else {\n      throw Error('Can only multibase decode strings');\n    }\n  }\n  or(decoder) {\n    return or(this, decoder);\n  }\n}\nclass ComposedDecoder {\n  constructor(decoders) {\n    this.decoders = decoders;\n  }\n  or(decoder) {\n    return or(this, decoder);\n  }\n  decode(input) {\n    const prefix = input[0];\n    const decoder = this.decoders[prefix];\n    if (decoder) {\n      return decoder.decode(input);\n    } else {\n      throw RangeError(`Unable to decode multibase string ${ JSON.stringify(input) }, only inputs prefixed with ${ Object.keys(this.decoders) } are supported`);\n    }\n  }\n}\nexport const or = (left, right) => new ComposedDecoder({\n  ...left.decoders || { [left.prefix]: left },\n  ...right.decoders || { [right.prefix]: right }\n});\nexport class Codec {\n  constructor(name, prefix, baseEncode, baseDecode) {\n    this.name = name;\n    this.prefix = prefix;\n    this.baseEncode = baseEncode;\n    this.baseDecode = baseDecode;\n    this.encoder = new Encoder(name, prefix, baseEncode);\n    this.decoder = new Decoder(name, prefix, baseDecode);\n  }\n  encode(input) {\n    return this.encoder.encode(input);\n  }\n  decode(input) {\n    return this.decoder.decode(input);\n  }\n}\nexport const from = ({name, prefix, encode, decode}) => new Codec(name, prefix, encode, decode);\nexport const baseX = ({prefix, name, alphabet}) => {\n  const {encode, decode} = basex(alphabet, name);\n  return from({\n    prefix,\n    name,\n    encode,\n    decode: text => coerce(decode(text))\n  });\n};\nconst decode = (string, alphabet, bitsPerChar, name) => {\n  const codes = {};\n  for (let i = 0; i < alphabet.length; ++i) {\n    codes[alphabet[i]] = i;\n  }\n  let end = string.length;\n  while (string[end - 1] === '=') {\n    --end;\n  }\n  const out = new Uint8Array(end * bitsPerChar / 8 | 0);\n  let bits = 0;\n  let buffer = 0;\n  let written = 0;\n  for (let i = 0; i < end; ++i) {\n    const value = codes[string[i]];\n    if (value === undefined) {\n      throw new SyntaxError(`Non-${ name } character`);\n    }\n    buffer = buffer << bitsPerChar | value;\n    bits += bitsPerChar;\n    if (bits >= 8) {\n      bits -= 8;\n      out[written++] = 255 & buffer >> bits;\n    }\n  }\n  if (bits >= bitsPerChar || 255 & buffer << 8 - bits) {\n    throw new SyntaxError('Unexpected end of data');\n  }\n  return out;\n};\nconst encode = (data, alphabet, bitsPerChar) => {\n  const pad = alphabet[alphabet.length - 1] === '=';\n  const mask = (1 << bitsPerChar) - 1;\n  let out = '';\n  let bits = 0;\n  let buffer = 0;\n  for (let i = 0; i < data.length; ++i) {\n    buffer = buffer << 8 | data[i];\n    bits += 8;\n    while (bits > bitsPerChar) {\n      bits -= bitsPerChar;\n      out += alphabet[mask & buffer >> bits];\n    }\n  }\n  if (bits) {\n    out += alphabet[mask & buffer << bitsPerChar - bits];\n  }\n  if (pad) {\n    while (out.length * bitsPerChar & 7) {\n      out += '=';\n    }\n  }\n  return out;\n};\nexport const rfc4648 = ({name, prefix, bitsPerChar, alphabet}) => {\n  return from({\n    prefix,\n    name,\n    encode(input) {\n      return encode(input, alphabet, bitsPerChar);\n    },\n    decode(input) {\n      return decode(input, alphabet, bitsPerChar, name);\n    }\n  });\n};","import { baseX } from './base.js';\nexport const base58btc = baseX({\n  name: 'base58btc',\n  prefix: 'z',\n  alphabet: '123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz'\n});\nexport const base58flickr = baseX({\n  name: 'base58flickr',\n  prefix: 'Z',\n  alphabet: '123456789abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ'\n});","import { rfc4648 } from './base.js';\nexport const base32 = rfc4648({\n  prefix: 'b',\n  name: 'base32',\n  alphabet: 'abcdefghijklmnopqrstuvwxyz234567',\n  bitsPerChar: 5\n});\nexport const base32upper = rfc4648({\n  prefix: 'B',\n  name: 'base32upper',\n  alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZ234567',\n  bitsPerChar: 5\n});\nexport const base32pad = rfc4648({\n  prefix: 'c',\n  name: 'base32pad',\n  alphabet: 'abcdefghijklmnopqrstuvwxyz234567=',\n  bitsPerChar: 5\n});\nexport const base32padupper = rfc4648({\n  prefix: 'C',\n  name: 'base32padupper',\n  alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZ234567=',\n  bitsPerChar: 5\n});\nexport const base32hex = rfc4648({\n  prefix: 'v',\n  name: 'base32hex',\n  alphabet: '0123456789abcdefghijklmnopqrstuv',\n  bitsPerChar: 5\n});\nexport const base32hexupper = rfc4648({\n  prefix: 'V',\n  name: 'base32hexupper',\n  alphabet: '0123456789ABCDEFGHIJKLMNOPQRSTUV',\n  bitsPerChar: 5\n});\nexport const base32hexpad = rfc4648({\n  prefix: 't',\n  name: 'base32hexpad',\n  alphabet: '0123456789abcdefghijklmnopqrstuv=',\n  bitsPerChar: 5\n});\nexport const base32hexpadupper = rfc4648({\n  prefix: 'T',\n  name: 'base32hexpadupper',\n  alphabet: '0123456789ABCDEFGHIJKLMNOPQRSTUV=',\n  bitsPerChar: 5\n});\nexport const base32z = rfc4648({\n  prefix: 'h',\n  name: 'base32z',\n  alphabet: 'ybndrfg8ejkmcpqxot1uwisza345h769',\n  bitsPerChar: 5\n});","import * as varint from './varint.js';\nimport * as Digest from './hashes/digest.js';\nimport { base58btc } from './bases/base58.js';\nimport { base32 } from './bases/base32.js';\nimport { coerce } from './bytes.js';\nexport class CID {\n  constructor(version, code, multihash, bytes) {\n    this.code = code;\n    this.version = version;\n    this.multihash = multihash;\n    this.bytes = bytes;\n    this.byteOffset = bytes.byteOffset;\n    this.byteLength = bytes.byteLength;\n    this.asCID = this;\n    this._baseCache = new Map();\n    Object.defineProperties(this, {\n      byteOffset: hidden,\n      byteLength: hidden,\n      code: readonly,\n      version: readonly,\n      multihash: readonly,\n      bytes: readonly,\n      _baseCache: hidden,\n      asCID: hidden\n    });\n  }\n  toV0() {\n    switch (this.version) {\n    case 0: {\n        return this;\n      }\n    default: {\n        const {code, multihash} = this;\n        if (code !== DAG_PB_CODE) {\n          throw new Error('Cannot convert a non dag-pb CID to CIDv0');\n        }\n        if (multihash.code !== SHA_256_CODE) {\n          throw new Error('Cannot convert non sha2-256 multihash CID to CIDv0');\n        }\n        return CID.createV0(multihash);\n      }\n    }\n  }\n  toV1() {\n    switch (this.version) {\n    case 0: {\n        const {code, digest} = this.multihash;\n        const multihash = Digest.create(code, digest);\n        return CID.createV1(this.code, multihash);\n      }\n    case 1: {\n        return this;\n      }\n    default: {\n        throw Error(`Can not convert CID version ${ this.version } to version 0. This is a bug please report`);\n      }\n    }\n  }\n  equals(other) {\n    return other && this.code === other.code && this.version === other.version && Digest.equals(this.multihash, other.multihash);\n  }\n  toString(base) {\n    const {bytes, version, _baseCache} = this;\n    switch (version) {\n    case 0:\n      return toStringV0(bytes, _baseCache, base || base58btc.encoder);\n    default:\n      return toStringV1(bytes, _baseCache, base || base32.encoder);\n    }\n  }\n  toJSON() {\n    return {\n      code: this.code,\n      version: this.version,\n      hash: this.multihash.bytes\n    };\n  }\n  get [Symbol.toStringTag]() {\n    return 'CID';\n  }\n  [Symbol.for('nodejs.util.inspect.custom')]() {\n    return 'CID(' + this.toString() + ')';\n  }\n  static isCID(value) {\n    deprecate(/^0\\.0/, IS_CID_DEPRECATION);\n    return !!(value && (value[cidSymbol] || value.asCID === value));\n  }\n  get toBaseEncodedString() {\n    throw new Error('Deprecated, use .toString()');\n  }\n  get codec() {\n    throw new Error('\"codec\" property is deprecated, use integer \"code\" property instead');\n  }\n  get buffer() {\n    throw new Error('Deprecated .buffer property, use .bytes to get Uint8Array instead');\n  }\n  get multibaseName() {\n    throw new Error('\"multibaseName\" property is deprecated');\n  }\n  get prefix() {\n    throw new Error('\"prefix\" property is deprecated');\n  }\n  static asCID(value) {\n    if (value instanceof CID) {\n      return value;\n    } else if (value != null && value.asCID === value) {\n      const {version, code, multihash, bytes} = value;\n      return new CID(version, code, multihash, bytes || encodeCID(version, code, multihash.bytes));\n    } else if (value != null && value[cidSymbol] === true) {\n      const {version, multihash, code} = value;\n      const digest = Digest.decode(multihash);\n      return CID.create(version, code, digest);\n    } else {\n      return null;\n    }\n  }\n  static create(version, code, digest) {\n    if (typeof code !== 'number') {\n      throw new Error('String codecs are no longer supported');\n    }\n    switch (version) {\n    case 0: {\n        if (code !== DAG_PB_CODE) {\n          throw new Error(`Version 0 CID must use dag-pb (code: ${ DAG_PB_CODE }) block encoding`);\n        } else {\n          return new CID(version, code, digest, digest.bytes);\n        }\n      }\n    case 1: {\n        const bytes = encodeCID(version, code, digest.bytes);\n        return new CID(version, code, digest, bytes);\n      }\n    default: {\n        throw new Error('Invalid version');\n      }\n    }\n  }\n  static createV0(digest) {\n    return CID.create(0, DAG_PB_CODE, digest);\n  }\n  static createV1(code, digest) {\n    return CID.create(1, code, digest);\n  }\n  static decode(bytes) {\n    const [cid, remainder] = CID.decodeFirst(bytes);\n    if (remainder.length) {\n      throw new Error('Incorrect length');\n    }\n    return cid;\n  }\n  static decodeFirst(bytes) {\n    const specs = CID.inspectBytes(bytes);\n    const prefixSize = specs.size - specs.multihashSize;\n    const multihashBytes = coerce(bytes.subarray(prefixSize, prefixSize + specs.multihashSize));\n    if (multihashBytes.byteLength !== specs.multihashSize) {\n      throw new Error('Incorrect length');\n    }\n    const digestBytes = multihashBytes.subarray(specs.multihashSize - specs.digestSize);\n    const digest = new Digest.Digest(specs.multihashCode, specs.digestSize, digestBytes, multihashBytes);\n    const cid = specs.version === 0 ? CID.createV0(digest) : CID.createV1(specs.codec, digest);\n    return [\n      cid,\n      bytes.subarray(specs.size)\n    ];\n  }\n  static inspectBytes(initialBytes) {\n    let offset = 0;\n    const next = () => {\n      const [i, length] = varint.decode(initialBytes.subarray(offset));\n      offset += length;\n      return i;\n    };\n    let version = next();\n    let codec = DAG_PB_CODE;\n    if (version === 18) {\n      version = 0;\n      offset = 0;\n    } else if (version === 1) {\n      codec = next();\n    }\n    if (version !== 0 && version !== 1) {\n      throw new RangeError(`Invalid CID version ${ version }`);\n    }\n    const prefixSize = offset;\n    const multihashCode = next();\n    const digestSize = next();\n    const size = offset + digestSize;\n    const multihashSize = size - prefixSize;\n    return {\n      version,\n      codec,\n      multihashCode,\n      digestSize,\n      multihashSize,\n      size\n    };\n  }\n  static parse(source, base) {\n    const [prefix, bytes] = parseCIDtoBytes(source, base);\n    const cid = CID.decode(bytes);\n    cid._baseCache.set(prefix, source);\n    return cid;\n  }\n}\nconst parseCIDtoBytes = (source, base) => {\n  switch (source[0]) {\n  case 'Q': {\n      const decoder = base || base58btc;\n      return [\n        base58btc.prefix,\n        decoder.decode(`${ base58btc.prefix }${ source }`)\n      ];\n    }\n  case base58btc.prefix: {\n      const decoder = base || base58btc;\n      return [\n        base58btc.prefix,\n        decoder.decode(source)\n      ];\n    }\n  case base32.prefix: {\n      const decoder = base || base32;\n      return [\n        base32.prefix,\n        decoder.decode(source)\n      ];\n    }\n  default: {\n      if (base == null) {\n        throw Error('To parse non base32 or base58btc encoded CID multibase decoder must be provided');\n      }\n      return [\n        source[0],\n        base.decode(source)\n      ];\n    }\n  }\n};\nconst toStringV0 = (bytes, cache, base) => {\n  const {prefix} = base;\n  if (prefix !== base58btc.prefix) {\n    throw Error(`Cannot string encode V0 in ${ base.name } encoding`);\n  }\n  const cid = cache.get(prefix);\n  if (cid == null) {\n    const cid = base.encode(bytes).slice(1);\n    cache.set(prefix, cid);\n    return cid;\n  } else {\n    return cid;\n  }\n};\nconst toStringV1 = (bytes, cache, base) => {\n  const {prefix} = base;\n  const cid = cache.get(prefix);\n  if (cid == null) {\n    const cid = base.encode(bytes);\n    cache.set(prefix, cid);\n    return cid;\n  } else {\n    return cid;\n  }\n};\nconst DAG_PB_CODE = 112;\nconst SHA_256_CODE = 18;\nconst encodeCID = (version, code, multihash) => {\n  const codeOffset = varint.encodingLength(version);\n  const hashOffset = codeOffset + varint.encodingLength(code);\n  const bytes = new Uint8Array(hashOffset + multihash.byteLength);\n  varint.encodeTo(version, bytes, 0);\n  varint.encodeTo(code, bytes, codeOffset);\n  bytes.set(multihash, hashOffset);\n  return bytes;\n};\nconst cidSymbol = Symbol.for('@ipld/js-cid/CID');\nconst readonly = {\n  writable: false,\n  configurable: false,\n  enumerable: true\n};\nconst hidden = {\n  writable: false,\n  enumerable: false,\n  configurable: false\n};\nconst version = '0.0.0-dev';\nconst deprecate = (range, message) => {\n  if (range.test(version)) {\n    console.warn(message);\n  } else {\n    throw new Error(message);\n  }\n};\nconst IS_CID_DEPRECATION = `CID.isCID(v) is deprecated and will be removed in the next major release.\nFollowing code pattern:\n\nif (CID.isCID(value)) {\n  doSomethingWithCID(value)\n}\n\nIs replaced with:\n\nconst cid = CID.asCID(value)\nif (cid) {\n  // Make sure to use cid instead of value\n  doSomethingWithCID(cid)\n}\n`;","const Kinds = {\n  Null: obj => obj === null,\n  Int: obj => Number.isInteger(obj),\n  Float: obj => typeof obj === 'number' && Number.isFinite(obj),\n  String: obj => typeof obj === 'string',\n  Bool: obj => typeof obj === 'boolean',\n  Bytes: obj => obj instanceof Uint8Array,\n  Link: obj => !Kinds.Null(obj) && typeof obj === 'object' && obj.asCID === obj,\n  List: obj => Array.isArray(obj),\n  Map: obj => !Kinds.Null(obj) && typeof obj === 'object' && obj.asCID !== obj && !Kinds.List(obj) && !Kinds.Bytes(obj)\n};\nconst Types = {\n  Int: Kinds.Int,\n  'CarHeader > version': obj => Types.Int(obj),\n  'CarHeader > roots (anon) > valueType (anon)': Kinds.Link,\n  'CarHeader > roots (anon)': obj => Kinds.List(obj) && Array.prototype.every.call(obj, Types['CarHeader > roots (anon) > valueType (anon)']),\n  'CarHeader > roots': obj => Types['CarHeader > roots (anon)'](obj),\n  CarHeader: obj => {\n    const keys = obj && Object.keys(obj);\n    return Kinds.Map(obj) && ['version'].every(k => keys.includes(k)) && Object.entries(obj).every(([name, value]) => Types['CarHeader > ' + name] && Types['CarHeader > ' + name](value));\n  }\n};\nexport const CarHeader = Types.CarHeader;","import varint from 'varint';\nimport { CID } from 'multiformats/cid';\nimport * as Digest from 'multiformats/hashes/digest';\nimport { decode as decodeDagCbor } from '@ipld/dag-cbor';\nimport { CarHeader as headerValidator } from './header-validator.js';\nconst CIDV0_BYTES = {\n  SHA2_256: 18,\n  LENGTH: 32,\n  DAG_PB: 112\n};\nconst V2_HEADER_LENGTH = 16 + 8 + 8 + 8;\nasync function readVarint(reader) {\n  const bytes = await reader.upTo(8);\n  if (!bytes.length) {\n    throw new Error('Unexpected end of data');\n  }\n  const i = varint.decode(bytes);\n  reader.seek(varint.decode.bytes);\n  return i;\n}\nasync function readV2Header(reader) {\n  const bytes = await reader.exactly(V2_HEADER_LENGTH);\n  const dv = new DataView(bytes.buffer, bytes.byteOffset, bytes.byteLength);\n  let offset = 0;\n  const header = {\n    version: 2,\n    characteristics: [\n      dv.getBigUint64(offset, true),\n      dv.getBigUint64(offset += 8, true)\n    ],\n    dataOffset: Number(dv.getBigUint64(offset += 8, true)),\n    dataSize: Number(dv.getBigUint64(offset += 8, true)),\n    indexOffset: Number(dv.getBigUint64(offset += 8, true))\n  };\n  reader.seek(V2_HEADER_LENGTH);\n  return header;\n}\nexport async function readHeader(reader, strictVersion) {\n  const length = await readVarint(reader);\n  if (length === 0) {\n    throw new Error('Invalid CAR header (zero length)');\n  }\n  const header = await reader.exactly(length);\n  reader.seek(length);\n  const block = decodeDagCbor(header);\n  if (!headerValidator(block)) {\n    throw new Error('Invalid CAR header format');\n  }\n  if (block.version !== 1 && block.version !== 2 || strictVersion !== undefined && block.version !== strictVersion) {\n    throw new Error(`Invalid CAR version: ${ block.version }${ strictVersion !== undefined ? ` (expected ${ strictVersion })` : '' }`);\n  }\n  const hasRoots = Array.isArray(block.roots);\n  if (block.version === 1 && !hasRoots || block.version === 2 && hasRoots) {\n    throw new Error('Invalid CAR header format');\n  }\n  if (block.version === 1) {\n    return block;\n  }\n  const v2Header = await readV2Header(reader);\n  reader.seek(v2Header.dataOffset - reader.pos);\n  const v1Header = await readHeader(reader, 1);\n  return Object.assign(v1Header, v2Header);\n}\nasync function readMultihash(reader) {\n  const bytes = await reader.upTo(8);\n  varint.decode(bytes);\n  const codeLength = varint.decode.bytes;\n  const length = varint.decode(bytes.subarray(varint.decode.bytes));\n  const lengthLength = varint.decode.bytes;\n  const mhLength = codeLength + lengthLength + length;\n  const multihash = await reader.exactly(mhLength);\n  reader.seek(mhLength);\n  return multihash;\n}\nasync function readCid(reader) {\n  const first = await reader.exactly(2);\n  if (first[0] === CIDV0_BYTES.SHA2_256 && first[1] === CIDV0_BYTES.LENGTH) {\n    const bytes = await reader.exactly(34);\n    reader.seek(34);\n    const multihash = Digest.decode(bytes);\n    return CID.create(0, CIDV0_BYTES.DAG_PB, multihash);\n  }\n  const version = await readVarint(reader);\n  if (version !== 1) {\n    throw new Error(`Unexpected CID version (${ version })`);\n  }\n  const codec = await readVarint(reader);\n  const bytes = await readMultihash(reader);\n  const multihash = Digest.decode(bytes);\n  return CID.create(version, codec, multihash);\n}\nexport async function readBlockHead(reader) {\n  const start = reader.pos;\n  let length = await readVarint(reader);\n  if (length === 0) {\n    throw new Error('Invalid CAR section (zero length)');\n  }\n  length += reader.pos - start;\n  const cid = await readCid(reader);\n  const blockLength = length - Number(reader.pos - start);\n  return {\n    cid,\n    length,\n    blockLength\n  };\n}\nasync function readBlock(reader) {\n  const {cid, blockLength} = await readBlockHead(reader);\n  const bytes = await reader.exactly(blockLength);\n  reader.seek(blockLength);\n  return {\n    bytes,\n    cid\n  };\n}\nasync function readBlockIndex(reader) {\n  const offset = reader.pos;\n  const {cid, length, blockLength} = await readBlockHead(reader);\n  const index = {\n    cid,\n    length,\n    blockLength,\n    offset,\n    blockOffset: reader.pos\n  };\n  reader.seek(index.blockLength);\n  return index;\n}\nexport function createDecoder(reader) {\n  const headerPromise = (async () => {\n    const header = await readHeader(reader);\n    if (header.version === 2) {\n      const v1length = reader.pos - header.dataOffset;\n      reader = limitReader(reader, header.dataSize - v1length);\n    }\n    return header;\n  })();\n  return {\n    header: () => headerPromise,\n    async *blocks() {\n      await headerPromise;\n      while ((await reader.upTo(8)).length > 0) {\n        yield await readBlock(reader);\n      }\n    },\n    async *blocksIndex() {\n      await headerPromise;\n      while ((await reader.upTo(8)).length > 0) {\n        yield await readBlockIndex(reader);\n      }\n    }\n  };\n}\nexport function bytesReader(bytes) {\n  let pos = 0;\n  return {\n    async upTo(length) {\n      return bytes.subarray(pos, pos + Math.min(length, bytes.length - pos));\n    },\n    async exactly(length) {\n      if (length > bytes.length - pos) {\n        throw new Error('Unexpected end of data');\n      }\n      return bytes.subarray(pos, pos + length);\n    },\n    seek(length) {\n      pos += length;\n    },\n    get pos() {\n      return pos;\n    }\n  };\n}\nexport function chunkReader(readChunk) {\n  let pos = 0;\n  let have = 0;\n  let offset = 0;\n  let currentChunk = new Uint8Array(0);\n  const read = async length => {\n    have = currentChunk.length - offset;\n    const bufa = [currentChunk.subarray(offset)];\n    while (have < length) {\n      const chunk = await readChunk();\n      if (chunk == null) {\n        break;\n      }\n      if (have < 0) {\n        if (chunk.length > have) {\n          bufa.push(chunk.subarray(-have));\n        }\n      } else {\n        bufa.push(chunk);\n      }\n      have += chunk.length;\n    }\n    currentChunk = new Uint8Array(bufa.reduce((p, c) => p + c.length, 0));\n    let off = 0;\n    for (const b of bufa) {\n      currentChunk.set(b, off);\n      off += b.length;\n    }\n    offset = 0;\n  };\n  return {\n    async upTo(length) {\n      if (currentChunk.length - offset < length) {\n        await read(length);\n      }\n      return currentChunk.subarray(offset, offset + Math.min(currentChunk.length - offset, length));\n    },\n    async exactly(length) {\n      if (currentChunk.length - offset < length) {\n        await read(length);\n      }\n      if (currentChunk.length - offset < length) {\n        throw new Error('Unexpected end of data');\n      }\n      return currentChunk.subarray(offset, offset + length);\n    },\n    seek(length) {\n      pos += length;\n      offset += length;\n    },\n    get pos() {\n      return pos;\n    }\n  };\n}\nexport function asyncIterableReader(asyncIterable) {\n  const iterator = asyncIterable[Symbol.asyncIterator]();\n  async function readChunk() {\n    const next = await iterator.next();\n    if (next.done) {\n      return null;\n    }\n    return next.value;\n  }\n  return chunkReader(readChunk);\n}\nexport function limitReader(reader, byteLimit) {\n  let bytesRead = 0;\n  return {\n    async upTo(length) {\n      let bytes = await reader.upTo(length);\n      if (bytes.length + bytesRead > byteLimit) {\n        bytes = bytes.subarray(0, byteLimit - bytesRead);\n      }\n      return bytes;\n    },\n    async exactly(length) {\n      const bytes = await reader.exactly(length);\n      if (bytes.length + bytesRead > byteLimit) {\n        throw new Error('Unexpected end of data');\n      }\n      return bytes;\n    },\n    seek(length) {\n      bytesRead += length;\n      reader.seek(length);\n    },\n    get pos() {\n      return reader.pos;\n    }\n  };\n}","import {\n  asyncIterableReader,\n  bytesReader,\n  createDecoder\n} from './decoder.js';\nexport class CarReader {\n  constructor(header, blocks) {\n    this._header = header;\n    this._blocks = blocks;\n    this._keys = blocks.map(b => b.cid.toString());\n  }\n  get version() {\n    return this._header.version;\n  }\n  async getRoots() {\n    return this._header.roots;\n  }\n  async has(key) {\n    return this._keys.indexOf(key.toString()) > -1;\n  }\n  async get(key) {\n    const index = this._keys.indexOf(key.toString());\n    return index > -1 ? this._blocks[index] : undefined;\n  }\n  async *blocks() {\n    for (const block of this._blocks) {\n      yield block;\n    }\n  }\n  async *cids() {\n    for (const block of this._blocks) {\n      yield block.cid;\n    }\n  }\n  static async fromBytes(bytes) {\n    if (!(bytes instanceof Uint8Array)) {\n      throw new TypeError('fromBytes() requires a Uint8Array');\n    }\n    return decodeReaderComplete(bytesReader(bytes));\n  }\n  static async fromIterable(asyncIterable) {\n    if (!asyncIterable || !(typeof asyncIterable[Symbol.asyncIterator] === 'function')) {\n      throw new TypeError('fromIterable() requires an async iterable');\n    }\n    return decodeReaderComplete(asyncIterableReader(asyncIterable));\n  }\n}\nexport async function decodeReaderComplete(reader) {\n  const decoder = createDecoder(reader);\n  const header = await decoder.header();\n  const blocks = [];\n  for await (const block of decoder.blocks()) {\n    blocks.push(block);\n  }\n  return new CarReader(header, blocks);\n}\nexport const __browser = true;","export default function(n){return{all:n=n||new Map,on:function(t,e){var i=n.get(t);i?i.push(e):n.set(t,[e])},off:function(t,e){var i=n.get(t);i&&(e?i.splice(i.indexOf(e)>>>0,1):n.set(t,[]))},emit:function(t,e){var i=n.get(t);i&&i.slice().map(function(n){n(e)}),(i=n.get(\"*\"))&&i.slice().map(function(n){n(t,e)})}}}\n//# sourceMappingURL=mitt.mjs.map\n","var objectSafeGet = get;\n\n/*\n  const obj = {a: {aa: {aaa: 2}}, b: 4};\n\n  get(obj, 'a.aa.aaa'); // 2\n  get(obj, ['a', 'aa', 'aaa']); // 2\n\n  get(obj, 'b.bb.bbb'); // undefined\n  get(obj, ['b', 'bb', 'bbb']); // undefined\n\n  get(obj.a, 'aa.aaa'); // 2\n  get(obj.a, ['aa', 'aaa']); // 2\n\n  get(obj.b, 'bb.bbb'); // undefined\n  get(obj.b, ['bb', 'bbb']); // undefined\n\n  get(obj.b, 'bb.bbb', 42); // 42\n  get(obj.b, ['bb', 'bbb'], 42); // 42\n\n  get(null, 'a'); // undefined\n  get(undefined, ['a']); // undefined\n\n  get(null, 'a', 42); // 42\n  get(undefined, ['a'], 42); // 42\n\n  const obj = {a: {}};\n  const sym = Symbol();\n  obj.a[sym] = 4;\n  get(obj.a, sym); // 4\n*/\n\nfunction get(obj, propsArg, defaultValue) {\n  if (!obj) {\n    return defaultValue;\n  }\n  var props, prop;\n  if (Array.isArray(propsArg)) {\n    props = propsArg.slice(0);\n  }\n  if (typeof propsArg == 'string') {\n    props = propsArg.split('.');\n  }\n  if (typeof propsArg == 'symbol') {\n    props = [propsArg];\n  }\n  if (!Array.isArray(props)) {\n    throw new Error('props arg must be an array, a string or a symbol');\n  }\n  while (props.length) {\n    prop = props.shift();\n    if (!obj) {\n      return defaultValue;\n    }\n    obj = obj[prop];\n    if (obj === undefined) {\n      return defaultValue;\n    }\n  }\n  return obj;\n}\n\nexport {objectSafeGet as default};\n","var encode_1 = encode;\nvar MSB = 128, REST = 127, MSBALL = ~REST, INT = Math.pow(2, 31);\nfunction encode(num, out, offset) {\n  out = out || [];\n  offset = offset || 0;\n  var oldOffset = offset;\n  while (num >= INT) {\n    out[offset++] = num & 255 | MSB;\n    num /= 128;\n  }\n  while (num & MSBALL) {\n    out[offset++] = num & 255 | MSB;\n    num >>>= 7;\n  }\n  out[offset] = num | 0;\n  encode.bytes = offset - oldOffset + 1;\n  return out;\n}\nvar decode = read;\nvar MSB$1 = 128, REST$1 = 127;\nfunction read(buf, offset) {\n  var res = 0, offset = offset || 0, shift = 0, counter = offset, b, l = buf.length;\n  do {\n    if (counter >= l) {\n      read.bytes = 0;\n      throw new RangeError('Could not decode varint');\n    }\n    b = buf[counter++];\n    res += shift < 28 ? (b & REST$1) << shift : (b & REST$1) * Math.pow(2, shift);\n    shift += 7;\n  } while (b >= MSB$1);\n  read.bytes = counter - offset;\n  return res;\n}\nvar N1 = Math.pow(2, 7);\nvar N2 = Math.pow(2, 14);\nvar N3 = Math.pow(2, 21);\nvar N4 = Math.pow(2, 28);\nvar N5 = Math.pow(2, 35);\nvar N6 = Math.pow(2, 42);\nvar N7 = Math.pow(2, 49);\nvar N8 = Math.pow(2, 56);\nvar N9 = Math.pow(2, 63);\nvar length = function (value) {\n  return value < N1 ? 1 : value < N2 ? 2 : value < N3 ? 3 : value < N4 ? 4 : value < N5 ? 5 : value < N6 ? 6 : value < N7 ? 7 : value < N8 ? 8 : value < N9 ? 9 : 10;\n};\nvar varint = {\n  encode: encode_1,\n  decode: decode,\n  encodingLength: length\n};\nvar _brrp_varint = varint;\nexport default _brrp_varint;","import varint from '../vendor/varint.js';\nexport const decode = (data, offset = 0) => {\n  const code = varint.decode(data, offset);\n  return [\n    code,\n    varint.decode.bytes\n  ];\n};\nexport const encodeTo = (int, target, offset = 0) => {\n  varint.encode(int, target, offset);\n  return target;\n};\nexport const encodingLength = int => {\n  return varint.encodingLength(int);\n};","const empty = new Uint8Array(0);\nconst toHex = d => d.reduce((hex, byte) => hex + byte.toString(16).padStart(2, '0'), '');\nconst fromHex = hex => {\n  const hexes = hex.match(/../g);\n  return hexes ? new Uint8Array(hexes.map(b => parseInt(b, 16))) : empty;\n};\nconst equals = (aa, bb) => {\n  if (aa === bb)\n    return true;\n  if (aa.byteLength !== bb.byteLength) {\n    return false;\n  }\n  for (let ii = 0; ii < aa.byteLength; ii++) {\n    if (aa[ii] !== bb[ii]) {\n      return false;\n    }\n  }\n  return true;\n};\nconst coerce = o => {\n  if (o instanceof Uint8Array && o.constructor.name === 'Uint8Array')\n    return o;\n  if (o instanceof ArrayBuffer)\n    return new Uint8Array(o);\n  if (ArrayBuffer.isView(o)) {\n    return new Uint8Array(o.buffer, o.byteOffset, o.byteLength);\n  }\n  throw new Error('Unknown type, must be binary type');\n};\nconst isBinary = o => o instanceof ArrayBuffer || ArrayBuffer.isView(o);\nconst fromString = str => new TextEncoder().encode(str);\nconst toString = b => new TextDecoder().decode(b);\nexport {\n  equals,\n  coerce,\n  isBinary,\n  fromHex,\n  toHex,\n  fromString,\n  toString,\n  empty\n};","import {\n  coerce,\n  equals as equalBytes\n} from '../bytes.js';\nimport * as varint from '../varint.js';\nexport const create = (code, digest) => {\n  const size = digest.byteLength;\n  const sizeOffset = varint.encodingLength(code);\n  const digestOffset = sizeOffset + varint.encodingLength(size);\n  const bytes = new Uint8Array(digestOffset + size);\n  varint.encodeTo(code, bytes, 0);\n  varint.encodeTo(size, bytes, sizeOffset);\n  bytes.set(digest, digestOffset);\n  return new Digest(code, size, digest, bytes);\n};\nexport const decode = multihash => {\n  const bytes = coerce(multihash);\n  const [code, sizeOffset] = varint.decode(bytes);\n  const [size, digestOffset] = varint.decode(bytes.subarray(sizeOffset));\n  const digest = bytes.subarray(sizeOffset + digestOffset);\n  if (digest.byteLength !== size) {\n    throw new Error('Incorrect length');\n  }\n  return new Digest(code, size, digest, bytes);\n};\nexport const equals = (a, b) => {\n  if (a === b) {\n    return true;\n  } else {\n    return a.code === b.code && a.size === b.size && equalBytes(a.bytes, b.bytes);\n  }\n};\nexport class Digest {\n  constructor(code, size, digest, bytes) {\n    this.code = code;\n    this.size = size;\n    this.digest = digest;\n    this.bytes = bytes;\n  }\n}","function base(ALPHABET, name) {\n  if (ALPHABET.length >= 255) {\n    throw new TypeError('Alphabet too long');\n  }\n  var BASE_MAP = new Uint8Array(256);\n  for (var j = 0; j < BASE_MAP.length; j++) {\n    BASE_MAP[j] = 255;\n  }\n  for (var i = 0; i < ALPHABET.length; i++) {\n    var x = ALPHABET.charAt(i);\n    var xc = x.charCodeAt(0);\n    if (BASE_MAP[xc] !== 255) {\n      throw new TypeError(x + ' is ambiguous');\n    }\n    BASE_MAP[xc] = i;\n  }\n  var BASE = ALPHABET.length;\n  var LEADER = ALPHABET.charAt(0);\n  var FACTOR = Math.log(BASE) / Math.log(256);\n  var iFACTOR = Math.log(256) / Math.log(BASE);\n  function encode(source) {\n    if (source instanceof Uint8Array);\n    else if (ArrayBuffer.isView(source)) {\n      source = new Uint8Array(source.buffer, source.byteOffset, source.byteLength);\n    } else if (Array.isArray(source)) {\n      source = Uint8Array.from(source);\n    }\n    if (!(source instanceof Uint8Array)) {\n      throw new TypeError('Expected Uint8Array');\n    }\n    if (source.length === 0) {\n      return '';\n    }\n    var zeroes = 0;\n    var length = 0;\n    var pbegin = 0;\n    var pend = source.length;\n    while (pbegin !== pend && source[pbegin] === 0) {\n      pbegin++;\n      zeroes++;\n    }\n    var size = (pend - pbegin) * iFACTOR + 1 >>> 0;\n    var b58 = new Uint8Array(size);\n    while (pbegin !== pend) {\n      var carry = source[pbegin];\n      var i = 0;\n      for (var it1 = size - 1; (carry !== 0 || i < length) && it1 !== -1; it1--, i++) {\n        carry += 256 * b58[it1] >>> 0;\n        b58[it1] = carry % BASE >>> 0;\n        carry = carry / BASE >>> 0;\n      }\n      if (carry !== 0) {\n        throw new Error('Non-zero carry');\n      }\n      length = i;\n      pbegin++;\n    }\n    var it2 = size - length;\n    while (it2 !== size && b58[it2] === 0) {\n      it2++;\n    }\n    var str = LEADER.repeat(zeroes);\n    for (; it2 < size; ++it2) {\n      str += ALPHABET.charAt(b58[it2]);\n    }\n    return str;\n  }\n  function decodeUnsafe(source) {\n    if (typeof source !== 'string') {\n      throw new TypeError('Expected String');\n    }\n    if (source.length === 0) {\n      return new Uint8Array();\n    }\n    var psz = 0;\n    if (source[psz] === ' ') {\n      return;\n    }\n    var zeroes = 0;\n    var length = 0;\n    while (source[psz] === LEADER) {\n      zeroes++;\n      psz++;\n    }\n    var size = (source.length - psz) * FACTOR + 1 >>> 0;\n    var b256 = new Uint8Array(size);\n    while (source[psz]) {\n      var carry = BASE_MAP[source.charCodeAt(psz)];\n      if (carry === 255) {\n        return;\n      }\n      var i = 0;\n      for (var it3 = size - 1; (carry !== 0 || i < length) && it3 !== -1; it3--, i++) {\n        carry += BASE * b256[it3] >>> 0;\n        b256[it3] = carry % 256 >>> 0;\n        carry = carry / 256 >>> 0;\n      }\n      if (carry !== 0) {\n        throw new Error('Non-zero carry');\n      }\n      length = i;\n      psz++;\n    }\n    if (source[psz] === ' ') {\n      return;\n    }\n    var it4 = size - length;\n    while (it4 !== size && b256[it4] === 0) {\n      it4++;\n    }\n    var vch = new Uint8Array(zeroes + (size - it4));\n    var j = zeroes;\n    while (it4 !== size) {\n      vch[j++] = b256[it4++];\n    }\n    return vch;\n  }\n  function decode(string) {\n    var buffer = decodeUnsafe(string);\n    if (buffer) {\n      return buffer;\n    }\n    throw new Error(`Non-${ name } character`);\n  }\n  return {\n    encode: encode,\n    decodeUnsafe: decodeUnsafe,\n    decode: decode\n  };\n}\nvar src = base;\nvar _brrp__multiformats_scope_baseX = src;\nexport default _brrp__multiformats_scope_baseX;","import basex from '../../vendor/base-x.js';\nimport { coerce } from '../bytes.js';\nclass Encoder {\n  constructor(name, prefix, baseEncode) {\n    this.name = name;\n    this.prefix = prefix;\n    this.baseEncode = baseEncode;\n  }\n  encode(bytes) {\n    if (bytes instanceof Uint8Array) {\n      return `${ this.prefix }${ this.baseEncode(bytes) }`;\n    } else {\n      throw Error('Unknown type, must be binary type');\n    }\n  }\n}\nclass Decoder {\n  constructor(name, prefix, baseDecode) {\n    this.name = name;\n    this.prefix = prefix;\n    if (prefix.codePointAt(0) === undefined) {\n      throw new Error('Invalid prefix character');\n    }\n    this.prefixCodePoint = prefix.codePointAt(0);\n    this.baseDecode = baseDecode;\n  }\n  decode(text) {\n    if (typeof text === 'string') {\n      if (text.codePointAt(0) !== this.prefixCodePoint) {\n        throw Error(`Unable to decode multibase string ${ JSON.stringify(text) }, ${ this.name } decoder only supports inputs prefixed with ${ this.prefix }`);\n      }\n      return this.baseDecode(text.slice(this.prefix.length));\n    } else {\n      throw Error('Can only multibase decode strings');\n    }\n  }\n  or(decoder) {\n    return or(this, decoder);\n  }\n}\nclass ComposedDecoder {\n  constructor(decoders) {\n    this.decoders = decoders;\n  }\n  or(decoder) {\n    return or(this, decoder);\n  }\n  decode(input) {\n    const prefix = input[0];\n    const decoder = this.decoders[prefix];\n    if (decoder) {\n      return decoder.decode(input);\n    } else {\n      throw RangeError(`Unable to decode multibase string ${ JSON.stringify(input) }, only inputs prefixed with ${ Object.keys(this.decoders) } are supported`);\n    }\n  }\n}\nexport const or = (left, right) => new ComposedDecoder({\n  ...left.decoders || { [left.prefix]: left },\n  ...right.decoders || { [right.prefix]: right }\n});\nexport class Codec {\n  constructor(name, prefix, baseEncode, baseDecode) {\n    this.name = name;\n    this.prefix = prefix;\n    this.baseEncode = baseEncode;\n    this.baseDecode = baseDecode;\n    this.encoder = new Encoder(name, prefix, baseEncode);\n    this.decoder = new Decoder(name, prefix, baseDecode);\n  }\n  encode(input) {\n    return this.encoder.encode(input);\n  }\n  decode(input) {\n    return this.decoder.decode(input);\n  }\n}\nexport const from = ({name, prefix, encode, decode}) => new Codec(name, prefix, encode, decode);\nexport const baseX = ({prefix, name, alphabet}) => {\n  const {encode, decode} = basex(alphabet, name);\n  return from({\n    prefix,\n    name,\n    encode,\n    decode: text => coerce(decode(text))\n  });\n};\nconst decode = (string, alphabet, bitsPerChar, name) => {\n  const codes = {};\n  for (let i = 0; i < alphabet.length; ++i) {\n    codes[alphabet[i]] = i;\n  }\n  let end = string.length;\n  while (string[end - 1] === '=') {\n    --end;\n  }\n  const out = new Uint8Array(end * bitsPerChar / 8 | 0);\n  let bits = 0;\n  let buffer = 0;\n  let written = 0;\n  for (let i = 0; i < end; ++i) {\n    const value = codes[string[i]];\n    if (value === undefined) {\n      throw new SyntaxError(`Non-${ name } character`);\n    }\n    buffer = buffer << bitsPerChar | value;\n    bits += bitsPerChar;\n    if (bits >= 8) {\n      bits -= 8;\n      out[written++] = 255 & buffer >> bits;\n    }\n  }\n  if (bits >= bitsPerChar || 255 & buffer << 8 - bits) {\n    throw new SyntaxError('Unexpected end of data');\n  }\n  return out;\n};\nconst encode = (data, alphabet, bitsPerChar) => {\n  const pad = alphabet[alphabet.length - 1] === '=';\n  const mask = (1 << bitsPerChar) - 1;\n  let out = '';\n  let bits = 0;\n  let buffer = 0;\n  for (let i = 0; i < data.length; ++i) {\n    buffer = buffer << 8 | data[i];\n    bits += 8;\n    while (bits > bitsPerChar) {\n      bits -= bitsPerChar;\n      out += alphabet[mask & buffer >> bits];\n    }\n  }\n  if (bits) {\n    out += alphabet[mask & buffer << bitsPerChar - bits];\n  }\n  if (pad) {\n    while (out.length * bitsPerChar & 7) {\n      out += '=';\n    }\n  }\n  return out;\n};\nexport const rfc4648 = ({name, prefix, bitsPerChar, alphabet}) => {\n  return from({\n    prefix,\n    name,\n    encode(input) {\n      return encode(input, alphabet, bitsPerChar);\n    },\n    decode(input) {\n      return decode(input, alphabet, bitsPerChar, name);\n    }\n  });\n};","import { baseX } from './base.js';\nexport const base58btc = baseX({\n  name: 'base58btc',\n  prefix: 'z',\n  alphabet: '123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz'\n});\nexport const base58flickr = baseX({\n  name: 'base58flickr',\n  prefix: 'Z',\n  alphabet: '123456789abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ'\n});","import { rfc4648 } from './base.js';\nexport const base32 = rfc4648({\n  prefix: 'b',\n  name: 'base32',\n  alphabet: 'abcdefghijklmnopqrstuvwxyz234567',\n  bitsPerChar: 5\n});\nexport const base32upper = rfc4648({\n  prefix: 'B',\n  name: 'base32upper',\n  alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZ234567',\n  bitsPerChar: 5\n});\nexport const base32pad = rfc4648({\n  prefix: 'c',\n  name: 'base32pad',\n  alphabet: 'abcdefghijklmnopqrstuvwxyz234567=',\n  bitsPerChar: 5\n});\nexport const base32padupper = rfc4648({\n  prefix: 'C',\n  name: 'base32padupper',\n  alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZ234567=',\n  bitsPerChar: 5\n});\nexport const base32hex = rfc4648({\n  prefix: 'v',\n  name: 'base32hex',\n  alphabet: '0123456789abcdefghijklmnopqrstuv',\n  bitsPerChar: 5\n});\nexport const base32hexupper = rfc4648({\n  prefix: 'V',\n  name: 'base32hexupper',\n  alphabet: '0123456789ABCDEFGHIJKLMNOPQRSTUV',\n  bitsPerChar: 5\n});\nexport const base32hexpad = rfc4648({\n  prefix: 't',\n  name: 'base32hexpad',\n  alphabet: '0123456789abcdefghijklmnopqrstuv=',\n  bitsPerChar: 5\n});\nexport const base32hexpadupper = rfc4648({\n  prefix: 'T',\n  name: 'base32hexpadupper',\n  alphabet: '0123456789ABCDEFGHIJKLMNOPQRSTUV=',\n  bitsPerChar: 5\n});\nexport const base32z = rfc4648({\n  prefix: 'h',\n  name: 'base32z',\n  alphabet: 'ybndrfg8ejkmcpqxot1uwisza345h769',\n  bitsPerChar: 5\n});","import * as varint from './varint.js';\nimport * as Digest from './hashes/digest.js';\nimport { base58btc } from './bases/base58.js';\nimport { base32 } from './bases/base32.js';\nimport { coerce } from './bytes.js';\nexport class CID {\n  constructor(version, code, multihash, bytes) {\n    this.code = code;\n    this.version = version;\n    this.multihash = multihash;\n    this.bytes = bytes;\n    this.byteOffset = bytes.byteOffset;\n    this.byteLength = bytes.byteLength;\n    this.asCID = this;\n    this._baseCache = new Map();\n    Object.defineProperties(this, {\n      byteOffset: hidden,\n      byteLength: hidden,\n      code: readonly,\n      version: readonly,\n      multihash: readonly,\n      bytes: readonly,\n      _baseCache: hidden,\n      asCID: hidden\n    });\n  }\n  toV0() {\n    switch (this.version) {\n    case 0: {\n        return this;\n      }\n    default: {\n        const {code, multihash} = this;\n        if (code !== DAG_PB_CODE) {\n          throw new Error('Cannot convert a non dag-pb CID to CIDv0');\n        }\n        if (multihash.code !== SHA_256_CODE) {\n          throw new Error('Cannot convert non sha2-256 multihash CID to CIDv0');\n        }\n        return CID.createV0(multihash);\n      }\n    }\n  }\n  toV1() {\n    switch (this.version) {\n    case 0: {\n        const {code, digest} = this.multihash;\n        const multihash = Digest.create(code, digest);\n        return CID.createV1(this.code, multihash);\n      }\n    case 1: {\n        return this;\n      }\n    default: {\n        throw Error(`Can not convert CID version ${ this.version } to version 0. This is a bug please report`);\n      }\n    }\n  }\n  equals(other) {\n    return other && this.code === other.code && this.version === other.version && Digest.equals(this.multihash, other.multihash);\n  }\n  toString(base) {\n    const {bytes, version, _baseCache} = this;\n    switch (version) {\n    case 0:\n      return toStringV0(bytes, _baseCache, base || base58btc.encoder);\n    default:\n      return toStringV1(bytes, _baseCache, base || base32.encoder);\n    }\n  }\n  toJSON() {\n    return {\n      code: this.code,\n      version: this.version,\n      hash: this.multihash.bytes\n    };\n  }\n  get [Symbol.toStringTag]() {\n    return 'CID';\n  }\n  [Symbol.for('nodejs.util.inspect.custom')]() {\n    return 'CID(' + this.toString() + ')';\n  }\n  static isCID(value) {\n    deprecate(/^0\\.0/, IS_CID_DEPRECATION);\n    return !!(value && (value[cidSymbol] || value.asCID === value));\n  }\n  get toBaseEncodedString() {\n    throw new Error('Deprecated, use .toString()');\n  }\n  get codec() {\n    throw new Error('\"codec\" property is deprecated, use integer \"code\" property instead');\n  }\n  get buffer() {\n    throw new Error('Deprecated .buffer property, use .bytes to get Uint8Array instead');\n  }\n  get multibaseName() {\n    throw new Error('\"multibaseName\" property is deprecated');\n  }\n  get prefix() {\n    throw new Error('\"prefix\" property is deprecated');\n  }\n  static asCID(value) {\n    if (value instanceof CID) {\n      return value;\n    } else if (value != null && value.asCID === value) {\n      const {version, code, multihash, bytes} = value;\n      return new CID(version, code, multihash, bytes || encodeCID(version, code, multihash.bytes));\n    } else if (value != null && value[cidSymbol] === true) {\n      const {version, multihash, code} = value;\n      const digest = Digest.decode(multihash);\n      return CID.create(version, code, digest);\n    } else {\n      return null;\n    }\n  }\n  static create(version, code, digest) {\n    if (typeof code !== 'number') {\n      throw new Error('String codecs are no longer supported');\n    }\n    switch (version) {\n    case 0: {\n        if (code !== DAG_PB_CODE) {\n          throw new Error(`Version 0 CID must use dag-pb (code: ${ DAG_PB_CODE }) block encoding`);\n        } else {\n          return new CID(version, code, digest, digest.bytes);\n        }\n      }\n    case 1: {\n        const bytes = encodeCID(version, code, digest.bytes);\n        return new CID(version, code, digest, bytes);\n      }\n    default: {\n        throw new Error('Invalid version');\n      }\n    }\n  }\n  static createV0(digest) {\n    return CID.create(0, DAG_PB_CODE, digest);\n  }\n  static createV1(code, digest) {\n    return CID.create(1, code, digest);\n  }\n  static decode(bytes) {\n    const [cid, remainder] = CID.decodeFirst(bytes);\n    if (remainder.length) {\n      throw new Error('Incorrect length');\n    }\n    return cid;\n  }\n  static decodeFirst(bytes) {\n    const specs = CID.inspectBytes(bytes);\n    const prefixSize = specs.size - specs.multihashSize;\n    const multihashBytes = coerce(bytes.subarray(prefixSize, prefixSize + specs.multihashSize));\n    if (multihashBytes.byteLength !== specs.multihashSize) {\n      throw new Error('Incorrect length');\n    }\n    const digestBytes = multihashBytes.subarray(specs.multihashSize - specs.digestSize);\n    const digest = new Digest.Digest(specs.multihashCode, specs.digestSize, digestBytes, multihashBytes);\n    const cid = specs.version === 0 ? CID.createV0(digest) : CID.createV1(specs.codec, digest);\n    return [\n      cid,\n      bytes.subarray(specs.size)\n    ];\n  }\n  static inspectBytes(initialBytes) {\n    let offset = 0;\n    const next = () => {\n      const [i, length] = varint.decode(initialBytes.subarray(offset));\n      offset += length;\n      return i;\n    };\n    let version = next();\n    let codec = DAG_PB_CODE;\n    if (version === 18) {\n      version = 0;\n      offset = 0;\n    } else if (version === 1) {\n      codec = next();\n    }\n    if (version !== 0 && version !== 1) {\n      throw new RangeError(`Invalid CID version ${ version }`);\n    }\n    const prefixSize = offset;\n    const multihashCode = next();\n    const digestSize = next();\n    const size = offset + digestSize;\n    const multihashSize = size - prefixSize;\n    return {\n      version,\n      codec,\n      multihashCode,\n      digestSize,\n      multihashSize,\n      size\n    };\n  }\n  static parse(source, base) {\n    const [prefix, bytes] = parseCIDtoBytes(source, base);\n    const cid = CID.decode(bytes);\n    cid._baseCache.set(prefix, source);\n    return cid;\n  }\n}\nconst parseCIDtoBytes = (source, base) => {\n  switch (source[0]) {\n  case 'Q': {\n      const decoder = base || base58btc;\n      return [\n        base58btc.prefix,\n        decoder.decode(`${ base58btc.prefix }${ source }`)\n      ];\n    }\n  case base58btc.prefix: {\n      const decoder = base || base58btc;\n      return [\n        base58btc.prefix,\n        decoder.decode(source)\n      ];\n    }\n  case base32.prefix: {\n      const decoder = base || base32;\n      return [\n        base32.prefix,\n        decoder.decode(source)\n      ];\n    }\n  default: {\n      if (base == null) {\n        throw Error('To parse non base32 or base58btc encoded CID multibase decoder must be provided');\n      }\n      return [\n        source[0],\n        base.decode(source)\n      ];\n    }\n  }\n};\nconst toStringV0 = (bytes, cache, base) => {\n  const {prefix} = base;\n  if (prefix !== base58btc.prefix) {\n    throw Error(`Cannot string encode V0 in ${ base.name } encoding`);\n  }\n  const cid = cache.get(prefix);\n  if (cid == null) {\n    const cid = base.encode(bytes).slice(1);\n    cache.set(prefix, cid);\n    return cid;\n  } else {\n    return cid;\n  }\n};\nconst toStringV1 = (bytes, cache, base) => {\n  const {prefix} = base;\n  const cid = cache.get(prefix);\n  if (cid == null) {\n    const cid = base.encode(bytes);\n    cache.set(prefix, cid);\n    return cid;\n  } else {\n    return cid;\n  }\n};\nconst DAG_PB_CODE = 112;\nconst SHA_256_CODE = 18;\nconst encodeCID = (version, code, multihash) => {\n  const codeOffset = varint.encodingLength(version);\n  const hashOffset = codeOffset + varint.encodingLength(code);\n  const bytes = new Uint8Array(hashOffset + multihash.byteLength);\n  varint.encodeTo(version, bytes, 0);\n  varint.encodeTo(code, bytes, codeOffset);\n  bytes.set(multihash, hashOffset);\n  return bytes;\n};\nconst cidSymbol = Symbol.for('@ipld/js-cid/CID');\nconst readonly = {\n  writable: false,\n  configurable: false,\n  enumerable: true\n};\nconst hidden = {\n  writable: false,\n  enumerable: false,\n  configurable: false\n};\nconst version = '0.0.0-dev';\nconst deprecate = (range, message) => {\n  if (range.test(version)) {\n    console.warn(message);\n  } else {\n    throw new Error(message);\n  }\n};\nconst IS_CID_DEPRECATION = `CID.isCID(v) is deprecated and will be removed in the next major release.\nFollowing code pattern:\n\nif (CID.isCID(value)) {\n  doSomethingWithCID(value)\n}\n\nIs replaced with:\n\nconst cid = CID.asCID(value)\nif (cid) {\n  // Make sure to use cid instead of value\n  doSomethingWithCID(cid)\n}\n`;","export { urlAlphabet } from './url-alphabet/index.js'\nexport let random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nexport let customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nexport let customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nexport let nanoid = (size = 21) =>\n  crypto.getRandomValues(new Uint8Array(size)).reduce((id, byte) => {\n    byte &= 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte > 62) {\n      id += '-'\n    } else {\n      id += '_'\n    }\n    return id\n  }, '')\n","// base-x encoding / decoding\n// Copyright (c) 2018 base-x contributors\n// Copyright (c) 2014-2018 The Bitcoin Core developers (base58.cpp)\n// Distributed under the MIT software license, see the accompanying\n// file LICENSE or http://www.opensource.org/licenses/mit-license.php.\nfunction base (ALPHABET, name) {\n  if (ALPHABET.length >= 255) { throw new TypeError('Alphabet too long') }\n  var BASE_MAP = new Uint8Array(256);\n  for (var j = 0; j < BASE_MAP.length; j++) {\n    BASE_MAP[j] = 255;\n  }\n  for (var i = 0; i < ALPHABET.length; i++) {\n    var x = ALPHABET.charAt(i);\n    var xc = x.charCodeAt(0);\n    if (BASE_MAP[xc] !== 255) { throw new TypeError(x + ' is ambiguous') }\n    BASE_MAP[xc] = i;\n  }\n  var BASE = ALPHABET.length;\n  var LEADER = ALPHABET.charAt(0);\n  var FACTOR = Math.log(BASE) / Math.log(256); // log(BASE) / log(256), rounded up\n  var iFACTOR = Math.log(256) / Math.log(BASE); // log(256) / log(BASE), rounded up\n  function encode (source) {\n    if (source instanceof Uint8Array) ; else if (ArrayBuffer.isView(source)) {\n      source = new Uint8Array(source.buffer, source.byteOffset, source.byteLength);\n    } else if (Array.isArray(source)) {\n      source = Uint8Array.from(source);\n    }\n    if (!(source instanceof Uint8Array)) { throw new TypeError('Expected Uint8Array') }\n    if (source.length === 0) { return '' }\n        // Skip & count leading zeroes.\n    var zeroes = 0;\n    var length = 0;\n    var pbegin = 0;\n    var pend = source.length;\n    while (pbegin !== pend && source[pbegin] === 0) {\n      pbegin++;\n      zeroes++;\n    }\n        // Allocate enough space in big-endian base58 representation.\n    var size = ((pend - pbegin) * iFACTOR + 1) >>> 0;\n    var b58 = new Uint8Array(size);\n        // Process the bytes.\n    while (pbegin !== pend) {\n      var carry = source[pbegin];\n            // Apply \"b58 = b58 * 256 + ch\".\n      var i = 0;\n      for (var it1 = size - 1; (carry !== 0 || i < length) && (it1 !== -1); it1--, i++) {\n        carry += (256 * b58[it1]) >>> 0;\n        b58[it1] = (carry % BASE) >>> 0;\n        carry = (carry / BASE) >>> 0;\n      }\n      if (carry !== 0) { throw new Error('Non-zero carry') }\n      length = i;\n      pbegin++;\n    }\n        // Skip leading zeroes in base58 result.\n    var it2 = size - length;\n    while (it2 !== size && b58[it2] === 0) {\n      it2++;\n    }\n        // Translate the result into a string.\n    var str = LEADER.repeat(zeroes);\n    for (; it2 < size; ++it2) { str += ALPHABET.charAt(b58[it2]); }\n    return str\n  }\n  function decodeUnsafe (source) {\n    if (typeof source !== 'string') { throw new TypeError('Expected String') }\n    if (source.length === 0) { return new Uint8Array() }\n    var psz = 0;\n        // Skip leading spaces.\n    if (source[psz] === ' ') { return }\n        // Skip and count leading '1's.\n    var zeroes = 0;\n    var length = 0;\n    while (source[psz] === LEADER) {\n      zeroes++;\n      psz++;\n    }\n        // Allocate enough space in big-endian base256 representation.\n    var size = (((source.length - psz) * FACTOR) + 1) >>> 0; // log(58) / log(256), rounded up.\n    var b256 = new Uint8Array(size);\n        // Process the characters.\n    while (source[psz]) {\n            // Decode character\n      var carry = BASE_MAP[source.charCodeAt(psz)];\n            // Invalid character\n      if (carry === 255) { return }\n      var i = 0;\n      for (var it3 = size - 1; (carry !== 0 || i < length) && (it3 !== -1); it3--, i++) {\n        carry += (BASE * b256[it3]) >>> 0;\n        b256[it3] = (carry % 256) >>> 0;\n        carry = (carry / 256) >>> 0;\n      }\n      if (carry !== 0) { throw new Error('Non-zero carry') }\n      length = i;\n      psz++;\n    }\n        // Skip trailing spaces.\n    if (source[psz] === ' ') { return }\n        // Skip leading zeroes in b256.\n    var it4 = size - length;\n    while (it4 !== size && b256[it4] === 0) {\n      it4++;\n    }\n    var vch = new Uint8Array(zeroes + (size - it4));\n    var j = zeroes;\n    while (it4 !== size) {\n      vch[j++] = b256[it4++];\n    }\n    return vch\n  }\n  function decode (string) {\n    var buffer = decodeUnsafe(string);\n    if (buffer) { return buffer }\n    throw new Error(`Non-${name} character`)\n  }\n  return {\n    encode: encode,\n    decodeUnsafe: decodeUnsafe,\n    decode: decode\n  }\n}\nvar src = base;\n\nvar _brrp__multiformats_scope_baseX = src;\n\nexport default _brrp__multiformats_scope_baseX;\n","const empty = new Uint8Array(0)\n\n/**\n * @param {Uint8Array} d\n */\nconst toHex = d => d.reduce((hex, byte) => hex + byte.toString(16).padStart(2, '0'), '')\n\n/**\n * @param {string} hex\n */\nconst fromHex = hex => {\n  const hexes = hex.match(/../g)\n  return hexes ? new Uint8Array(hexes.map(b => parseInt(b, 16))) : empty\n}\n\n/**\n * @param {Uint8Array} aa\n * @param {Uint8Array} bb\n */\nconst equals = (aa, bb) => {\n  if (aa === bb) return true\n  if (aa.byteLength !== bb.byteLength) {\n    return false\n  }\n\n  for (let ii = 0; ii < aa.byteLength; ii++) {\n    if (aa[ii] !== bb[ii]) {\n      return false\n    }\n  }\n\n  return true\n}\n\n/**\n * @param {ArrayBufferView|ArrayBuffer|Uint8Array} o\n * @returns {Uint8Array}\n */\nconst coerce = o => {\n  if (o instanceof Uint8Array && o.constructor.name === 'Uint8Array') return o\n  if (o instanceof ArrayBuffer) return new Uint8Array(o)\n  if (ArrayBuffer.isView(o)) {\n    return new Uint8Array(o.buffer, o.byteOffset, o.byteLength)\n  }\n  throw new Error('Unknown type, must be binary type')\n}\n\n/**\n * @param {any} o\n * @returns {o is ArrayBuffer|ArrayBufferView}\n */\nconst isBinary = o =>\n  o instanceof ArrayBuffer || ArrayBuffer.isView(o)\n\n/**\n * @param {string} str\n * @returns {Uint8Array}\n */\nconst fromString = str => (new TextEncoder()).encode(str)\n\n/**\n * @param {Uint8Array} b\n * @returns {string}\n */\nconst toString = b => (new TextDecoder()).decode(b)\n\nexport { equals, coerce, isBinary, fromHex, toHex, fromString, toString, empty }\n","import basex from '../../vendor/base-x.js'\nimport { coerce } from '../bytes.js'\n// Linter can't see that API is used in types.\n// eslint-disable-next-line\nimport * as API from './interface.js'\n\n/**\n * Class represents both BaseEncoder and MultibaseEncoder meaning it\n * can be used to encode to multibase or base encode without multibase\n * prefix.\n *\n * @class\n * @template {string} Base\n * @template {string} Prefix\n * @implements {API.MultibaseEncoder<Prefix>}\n * @implements {API.BaseEncoder}\n */\nclass Encoder {\n  /**\n   * @param {Base} name\n   * @param {Prefix} prefix\n   * @param {(bytes:Uint8Array) => string} baseEncode\n   */\n  constructor (name, prefix, baseEncode) {\n    this.name = name\n    this.prefix = prefix\n    this.baseEncode = baseEncode\n  }\n\n  /**\n   * @param {Uint8Array} bytes\n   * @returns {API.Multibase<Prefix>}\n   */\n  encode (bytes) {\n    if (bytes instanceof Uint8Array) {\n      return `${this.prefix}${this.baseEncode(bytes)}`\n    } else {\n      throw Error('Unknown type, must be binary type')\n    }\n  }\n}\n\n/**\n * @template {string} Prefix\n */\n/**\n * Class represents both BaseDecoder and MultibaseDecoder so it could be used\n * to decode multibases (with matching prefix) or just base decode strings\n * with corresponding base encoding.\n *\n * @class\n * @template {string} Base\n * @template {string} Prefix\n * @implements {API.MultibaseDecoder<Prefix>}\n * @implements {API.UnibaseDecoder<Prefix>}\n * @implements {API.BaseDecoder}\n */\nclass Decoder {\n  /**\n   * @param {Base} name\n   * @param {Prefix} prefix\n   * @param {(text:string) => Uint8Array} baseDecode\n   */\n  constructor (name, prefix, baseDecode) {\n    this.name = name\n    this.prefix = prefix\n    /* c8 ignore next 3 */\n    if (prefix.codePointAt(0) === undefined) {\n      throw new Error('Invalid prefix character')\n    }\n    /** @private */\n    this.prefixCodePoint = /** @type {number} */ (prefix.codePointAt(0))\n    this.baseDecode = baseDecode\n  }\n\n  /**\n   * @param {string} text\n   */\n  decode (text) {\n    if (typeof text === 'string') {\n      if (text.codePointAt(0) !== this.prefixCodePoint) {\n        throw Error(`Unable to decode multibase string ${JSON.stringify(text)}, ${this.name} decoder only supports inputs prefixed with ${this.prefix}`)\n      }\n      return this.baseDecode(text.slice(this.prefix.length))\n    } else {\n      throw Error('Can only multibase decode strings')\n    }\n  }\n\n  /**\n   * @template {string} OtherPrefix\n   * @param {API.UnibaseDecoder<OtherPrefix>|ComposedDecoder<OtherPrefix>} decoder\n   * @returns {ComposedDecoder<Prefix|OtherPrefix>}\n   */\n  or (decoder) {\n    return or(this, decoder)\n  }\n}\n\n/**\n * @template {string} Prefix\n * @typedef {Record<Prefix, API.UnibaseDecoder<Prefix>>} Decoders\n */\n\n/**\n * @template {string} Prefix\n * @implements {API.MultibaseDecoder<Prefix>}\n * @implements {API.CombobaseDecoder<Prefix>}\n */\nclass ComposedDecoder {\n  /**\n   * @param {Decoders<Prefix>} decoders\n   */\n  constructor (decoders) {\n    this.decoders = decoders\n  }\n\n  /**\n   * @template {string} OtherPrefix\n   * @param {API.UnibaseDecoder<OtherPrefix>|ComposedDecoder<OtherPrefix>} decoder\n   * @returns {ComposedDecoder<Prefix|OtherPrefix>}\n   */\n  or (decoder) {\n    return or(this, decoder)\n  }\n\n  /**\n   * @param {string} input\n   * @returns {Uint8Array}\n   */\n  decode (input) {\n    const prefix = /** @type {Prefix} */ (input[0])\n    const decoder = this.decoders[prefix]\n    if (decoder) {\n      return decoder.decode(input)\n    } else {\n      throw RangeError(`Unable to decode multibase string ${JSON.stringify(input)}, only inputs prefixed with ${Object.keys(this.decoders)} are supported`)\n    }\n  }\n}\n\n/**\n * @template {string} L\n * @template {string} R\n * @param {API.UnibaseDecoder<L>|API.CombobaseDecoder<L>} left\n * @param {API.UnibaseDecoder<R>|API.CombobaseDecoder<R>} right\n * @returns {ComposedDecoder<L|R>}\n */\nexport const or = (left, right) => new ComposedDecoder(/** @type {Decoders<L|R>} */({\n  ...(left.decoders || { [/** @type API.UnibaseDecoder<L> */(left).prefix]: left }),\n  ...(right.decoders || { [/** @type API.UnibaseDecoder<R> */(right).prefix]: right })\n}))\n\n/**\n * @class\n * @template {string} Base\n * @template {string} Prefix\n * @implements {API.MultibaseCodec<Prefix>}\n * @implements {API.MultibaseEncoder<Prefix>}\n * @implements {API.MultibaseDecoder<Prefix>}\n * @implements {API.BaseCodec}\n * @implements {API.BaseEncoder}\n * @implements {API.BaseDecoder}\n */\nexport class Codec {\n  /**\n   * @param {Base} name\n   * @param {Prefix} prefix\n   * @param {(bytes:Uint8Array) => string} baseEncode\n   * @param {(text:string) => Uint8Array} baseDecode\n   */\n  constructor (name, prefix, baseEncode, baseDecode) {\n    this.name = name\n    this.prefix = prefix\n    this.baseEncode = baseEncode\n    this.baseDecode = baseDecode\n    this.encoder = new Encoder(name, prefix, baseEncode)\n    this.decoder = new Decoder(name, prefix, baseDecode)\n  }\n\n  /**\n   * @param {Uint8Array} input\n   */\n  encode (input) {\n    return this.encoder.encode(input)\n  }\n\n  /**\n   * @param {string} input\n   */\n  decode (input) {\n    return this.decoder.decode(input)\n  }\n}\n\n/**\n * @template {string} Base\n * @template {string} Prefix\n * @param {object} options\n * @param {Base} options.name\n * @param {Prefix} options.prefix\n * @param {(bytes:Uint8Array) => string} options.encode\n * @param {(input:string) => Uint8Array} options.decode\n * @returns {Codec<Base, Prefix>}\n */\nexport const from = ({ name, prefix, encode, decode }) =>\n  new Codec(name, prefix, encode, decode)\n\n/**\n * @template {string} Base\n * @template {string} Prefix\n * @param {object} options\n * @param {Base} options.name\n * @param {Prefix} options.prefix\n * @param {string} options.alphabet\n * @returns {Codec<Base, Prefix>}\n */\nexport const baseX = ({ prefix, name, alphabet }) => {\n  const { encode, decode } = basex(alphabet, name)\n  return from({\n    prefix,\n    name,\n    encode,\n    /**\n     * @param {string} text\n     */\n    decode: text => coerce(decode(text))\n  })\n}\n\n/**\n * @param {string} string\n * @param {string} alphabet\n * @param {number} bitsPerChar\n * @param {string} name\n * @returns {Uint8Array}\n */\nconst decode = (string, alphabet, bitsPerChar, name) => {\n  // Build the character lookup table:\n  /** @type {Record<string, number>} */\n  const codes = {}\n  for (let i = 0; i < alphabet.length; ++i) {\n    codes[alphabet[i]] = i\n  }\n\n  // Count the padding bytes:\n  let end = string.length\n  while (string[end - 1] === '=') {\n    --end\n  }\n\n  // Allocate the output:\n  const out = new Uint8Array((end * bitsPerChar / 8) | 0)\n\n  // Parse the data:\n  let bits = 0 // Number of bits currently in the buffer\n  let buffer = 0 // Bits waiting to be written out, MSB first\n  let written = 0 // Next byte to write\n  for (let i = 0; i < end; ++i) {\n    // Read one character from the string:\n    const value = codes[string[i]]\n    if (value === undefined) {\n      throw new SyntaxError(`Non-${name} character`)\n    }\n\n    // Append the bits to the buffer:\n    buffer = (buffer << bitsPerChar) | value\n    bits += bitsPerChar\n\n    // Write out some bits if the buffer has a byte's worth:\n    if (bits >= 8) {\n      bits -= 8\n      out[written++] = 0xff & (buffer >> bits)\n    }\n  }\n\n  // Verify that we have received just enough bits:\n  if (bits >= bitsPerChar || 0xff & (buffer << (8 - bits))) {\n    throw new SyntaxError('Unexpected end of data')\n  }\n\n  return out\n}\n\n/**\n * @param {Uint8Array} data\n * @param {string} alphabet\n * @param {number} bitsPerChar\n * @returns {string}\n */\nconst encode = (data, alphabet, bitsPerChar) => {\n  const pad = alphabet[alphabet.length - 1] === '='\n  const mask = (1 << bitsPerChar) - 1\n  let out = ''\n\n  let bits = 0 // Number of bits currently in the buffer\n  let buffer = 0 // Bits waiting to be written out, MSB first\n  for (let i = 0; i < data.length; ++i) {\n    // Slurp data into the buffer:\n    buffer = (buffer << 8) | data[i]\n    bits += 8\n\n    // Write out as much as we can:\n    while (bits > bitsPerChar) {\n      bits -= bitsPerChar\n      out += alphabet[mask & (buffer >> bits)]\n    }\n  }\n\n  // Partial character:\n  if (bits) {\n    out += alphabet[mask & (buffer << (bitsPerChar - bits))]\n  }\n\n  // Add padding characters until we hit a byte boundary:\n  if (pad) {\n    while ((out.length * bitsPerChar) & 7) {\n      out += '='\n    }\n  }\n\n  return out\n}\n\n/**\n * RFC4648 Factory\n *\n * @template {string} Base\n * @template {string} Prefix\n * @param {object} options\n * @param {Base} options.name\n * @param {Prefix} options.prefix\n * @param {string} options.alphabet\n * @param {number} options.bitsPerChar\n */\nexport const rfc4648 = ({ name, prefix, bitsPerChar, alphabet }) => {\n  return from({\n    prefix,\n    name,\n    encode (input) {\n      return encode(input, alphabet, bitsPerChar)\n    },\n    decode (input) {\n      return decode(input, alphabet, bitsPerChar, name)\n    }\n  })\n}\n","// @ts-check\n\nimport { from } from './base.js'\nimport { fromString, toString } from '../bytes.js'\n\nexport const identity = from({\n  prefix: '\\x00',\n  name: 'identity',\n  encode: (buf) => toString(buf),\n  decode: (str) => fromString(str)\n})\n","// @ts-check\n\nimport { rfc4648 } from './base.js'\n\nexport const base2 = rfc4648({\n  prefix: '0',\n  name: 'base2',\n  alphabet: '01',\n  bitsPerChar: 1\n})\n","// @ts-check\n\nimport { rfc4648 } from './base.js'\n\nexport const base8 = rfc4648({\n  prefix: '7',\n  name: 'base8',\n  alphabet: '01234567',\n  bitsPerChar: 3\n})\n","import { baseX } from './base.js'\n\nexport const base10 = baseX({\n  prefix: '9',\n  name: 'base10',\n  alphabet: '0123456789'\n})\n","// @ts-check\n\nimport { rfc4648 } from './base.js'\n\nexport const base16 = rfc4648({\n  prefix: 'f',\n  name: 'base16',\n  alphabet: '0123456789abcdef',\n  bitsPerChar: 4\n})\n\nexport const base16upper = rfc4648({\n  prefix: 'F',\n  name: 'base16upper',\n  alphabet: '0123456789ABCDEF',\n  bitsPerChar: 4\n})\n","import { rfc4648 } from './base.js'\n\nexport const base32 = rfc4648({\n  prefix: 'b',\n  name: 'base32',\n  alphabet: 'abcdefghijklmnopqrstuvwxyz234567',\n  bitsPerChar: 5\n})\n\nexport const base32upper = rfc4648({\n  prefix: 'B',\n  name: 'base32upper',\n  alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZ234567',\n  bitsPerChar: 5\n})\n\nexport const base32pad = rfc4648({\n  prefix: 'c',\n  name: 'base32pad',\n  alphabet: 'abcdefghijklmnopqrstuvwxyz234567=',\n  bitsPerChar: 5\n})\n\nexport const base32padupper = rfc4648({\n  prefix: 'C',\n  name: 'base32padupper',\n  alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZ234567=',\n  bitsPerChar: 5\n})\n\nexport const base32hex = rfc4648({\n  prefix: 'v',\n  name: 'base32hex',\n  alphabet: '0123456789abcdefghijklmnopqrstuv',\n  bitsPerChar: 5\n})\n\nexport const base32hexupper = rfc4648({\n  prefix: 'V',\n  name: 'base32hexupper',\n  alphabet: '0123456789ABCDEFGHIJKLMNOPQRSTUV',\n  bitsPerChar: 5\n})\n\nexport const base32hexpad = rfc4648({\n  prefix: 't',\n  name: 'base32hexpad',\n  alphabet: '0123456789abcdefghijklmnopqrstuv=',\n  bitsPerChar: 5\n})\n\nexport const base32hexpadupper = rfc4648({\n  prefix: 'T',\n  name: 'base32hexpadupper',\n  alphabet: '0123456789ABCDEFGHIJKLMNOPQRSTUV=',\n  bitsPerChar: 5\n})\n\nexport const base32z = rfc4648({\n  prefix: 'h',\n  name: 'base32z',\n  alphabet: 'ybndrfg8ejkmcpqxot1uwisza345h769',\n  bitsPerChar: 5\n})\n","import { baseX } from './base.js'\n\nexport const base36 = baseX({\n  prefix: 'k',\n  name: 'base36',\n  alphabet: '0123456789abcdefghijklmnopqrstuvwxyz'\n})\n\nexport const base36upper = baseX({\n  prefix: 'K',\n  name: 'base36upper',\n  alphabet: '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ'\n})\n","import { baseX } from './base.js'\n\nexport const base58btc = baseX({\n  name: 'base58btc',\n  prefix: 'z',\n  alphabet: '123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz'\n})\n\nexport const base58flickr = baseX({\n  name: 'base58flickr',\n  prefix: 'Z',\n  alphabet: '123456789abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ'\n})\n","// @ts-check\n\nimport { rfc4648 } from './base.js'\n\nexport const base64 = rfc4648({\n  prefix: 'm',\n  name: 'base64',\n  alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/',\n  bitsPerChar: 6\n})\n\nexport const base64pad = rfc4648({\n  prefix: 'M',\n  name: 'base64pad',\n  alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=',\n  bitsPerChar: 6\n})\n\nexport const base64url = rfc4648({\n  prefix: 'u',\n  name: 'base64url',\n  alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_',\n  bitsPerChar: 6\n})\n\nexport const base64urlpad = rfc4648({\n  prefix: 'U',\n  name: 'base64urlpad',\n  alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_=',\n  bitsPerChar: 6\n})\n","import { from } from './base.js'\n\nconst alphabet = Array.from('🚀🪐☄🛰🌌🌑🌒🌓🌔🌕🌖🌗🌘🌍🌏🌎🐉☀💻🖥💾💿😂❤😍🤣😊🙏💕😭😘👍😅👏😁🔥🥰💔💖💙😢🤔😆🙄💪😉☺👌🤗💜😔😎😇🌹🤦🎉💞✌✨🤷😱😌🌸🙌😋💗💚😏💛🙂💓🤩😄😀🖤😃💯🙈👇🎶😒🤭❣😜💋👀😪😑💥🙋😞😩😡🤪👊🥳😥🤤👉💃😳✋😚😝😴🌟😬🙃🍀🌷😻😓⭐✅🥺🌈😈🤘💦✔😣🏃💐☹🎊💘😠☝😕🌺🎂🌻😐🖕💝🙊😹🗣💫💀👑🎵🤞😛🔴😤🌼😫⚽🤙☕🏆🤫👈😮🙆🍻🍃🐶💁😲🌿🧡🎁⚡🌞🎈❌✊👋😰🤨😶🤝🚶💰🍓💢🤟🙁🚨💨🤬✈🎀🍺🤓😙💟🌱😖👶🥴▶➡❓💎💸⬇😨🌚🦋😷🕺⚠🙅😟😵👎🤲🤠🤧📌🔵💅🧐🐾🍒😗🤑🌊🤯🐷☎💧😯💆👆🎤🙇🍑❄🌴💣🐸💌📍🥀🤢👅💡💩👐📸👻🤐🤮🎼🥵🚩🍎🍊👼💍📣🥂')\nconst alphabetBytesToChars = /** @type {string[]} */ (alphabet.reduce((p, c, i) => { p[i] = c; return p }, /** @type {string[]} */([])))\nconst alphabetCharsToBytes = /** @type {number[]} */ (alphabet.reduce((p, c, i) => { p[/** @type {number} */ (c.codePointAt(0))] = i; return p }, /** @type {number[]} */([])))\n\n/**\n * @param {Uint8Array} data\n * @returns {string}\n */\nfunction encode (data) {\n  return data.reduce((p, c) => {\n    p += alphabetBytesToChars[c]\n    return p\n  }, '')\n}\n\n/**\n * @param {string} str\n * @returns {Uint8Array}\n */\nfunction decode (str) {\n  const byts = []\n  for (const char of str) {\n    const byt = alphabetCharsToBytes[/** @type {number} */ (char.codePointAt(0))]\n    if (byt === undefined) {\n      throw new Error(`Non-base256emoji character: ${char}`)\n    }\n    byts.push(byt)\n  }\n  return new Uint8Array(byts)\n}\n\nexport const base256emoji = from({\n  prefix: '🚀',\n  name: 'base256emoji',\n  encode,\n  decode\n})\n","// @ts-check\n\n/**\n * @template T\n * @typedef {import('./interface.js').ByteView<T>} ByteView\n */\n\nconst textEncoder = new TextEncoder()\nconst textDecoder = new TextDecoder()\n\nexport const name = 'json'\nexport const code = 0x0200\n\n/**\n * @template T\n * @param {T} node\n * @returns {ByteView<T>}\n */\nexport const encode = (node) => textEncoder.encode(JSON.stringify(node))\n\n/**\n * @template T\n * @param {ByteView<T>} data\n * @returns {T}\n */\nexport const decode = (data) => JSON.parse(textDecoder.decode(data))\n","// @ts-check\n\nimport * as identityBase from './bases/identity.js'\nimport * as base2 from './bases/base2.js'\nimport * as base8 from './bases/base8.js'\nimport * as base10 from './bases/base10.js'\nimport * as base16 from './bases/base16.js'\nimport * as base32 from './bases/base32.js'\nimport * as base36 from './bases/base36.js'\nimport * as base58 from './bases/base58.js'\nimport * as base64 from './bases/base64.js'\nimport * as base256emoji from './bases/base256emoji.js'\nimport * as sha2 from './hashes/sha2.js'\nimport * as identity from './hashes/identity.js'\n\nimport * as raw from './codecs/raw.js'\nimport * as json from './codecs/json.js'\n\nimport { CID, hasher, digest, varint, bytes } from './index.js'\n\nconst bases = { ...identityBase, ...base2, ...base8, ...base10, ...base16, ...base32, ...base36, ...base58, ...base64, ...base256emoji }\nconst hashes = { ...sha2, ...identity }\nconst codecs = { raw, json }\n\nexport { CID, hasher, digest, varint, bytes, hashes, bases, codecs }\n","/**\n * To guarantee Uint8Array semantics, convert nodejs Buffers\n * into vanilla Uint8Arrays\n */\nexport function asUint8Array(buf) {\n    if (globalThis.Buffer != null) {\n        return new Uint8Array(buf.buffer, buf.byteOffset, buf.byteLength);\n    }\n    return buf;\n}\n//# sourceMappingURL=as-uint8array.js.map","import { asUint8Array } from './util/as-uint8array.js';\n/**\n * Returns a `Uint8Array` of the requested size. Referenced memory will\n * be initialized to 0.\n */\nexport function alloc(size = 0) {\n    if (globalThis.Buffer?.alloc != null) {\n        return asUint8Array(globalThis.Buffer.alloc(size));\n    }\n    return new Uint8Array(size);\n}\n/**\n * Where possible returns a Uint8Array of the requested size that references\n * uninitialized memory. Only use if you are certain you will immediately\n * overwrite every value in the returned `Uint8Array`.\n */\nexport function allocUnsafe(size = 0) {\n    if (globalThis.Buffer?.allocUnsafe != null) {\n        return asUint8Array(globalThis.Buffer.allocUnsafe(size));\n    }\n    return new Uint8Array(size);\n}\n//# sourceMappingURL=alloc.js.map","import { bases } from 'multiformats/basics';\nimport { allocUnsafe } from '../alloc.js';\nfunction createCodec(name, prefix, encode, decode) {\n    return {\n        name,\n        prefix,\n        encoder: {\n            name,\n            prefix,\n            encode\n        },\n        decoder: {\n            decode\n        }\n    };\n}\nconst string = createCodec('utf8', 'u', (buf) => {\n    const decoder = new TextDecoder('utf8');\n    return 'u' + decoder.decode(buf);\n}, (str) => {\n    const encoder = new TextEncoder();\n    return encoder.encode(str.substring(1));\n});\nconst ascii = createCodec('ascii', 'a', (buf) => {\n    let string = 'a';\n    for (let i = 0; i < buf.length; i++) {\n        string += String.fromCharCode(buf[i]);\n    }\n    return string;\n}, (str) => {\n    str = str.substring(1);\n    const buf = allocUnsafe(str.length);\n    for (let i = 0; i < str.length; i++) {\n        buf[i] = str.charCodeAt(i);\n    }\n    return buf;\n});\nconst BASES = {\n    utf8: string,\n    'utf-8': string,\n    hex: bases.base16,\n    latin1: ascii,\n    ascii: ascii,\n    binary: ascii,\n    ...bases\n};\nexport default BASES;\n//# sourceMappingURL=bases.js.map","import bases from './util/bases.js';\n/**\n * Turns a `Uint8Array` into a string.\n *\n * Supports `utf8`, `utf-8` and any encoding supported by the multibase module.\n *\n * Also `ascii` which is similar to node's 'binary' encoding.\n */\nexport function toString(array, encoding = 'utf8') {\n    const base = bases[encoding];\n    if (base == null) {\n        throw new Error(`Unsupported encoding \"${encoding}\"`);\n    }\n    if ((encoding === 'utf8' || encoding === 'utf-8') && globalThis.Buffer != null && globalThis.Buffer.from != null) {\n        return globalThis.Buffer.from(array.buffer, array.byteOffset, array.byteLength).toString('utf8');\n    }\n    // strip multibase prefix\n    return base.encoder.encode(array).substring(1);\n}\n//# sourceMappingURL=to-string.js.map","import bases from './util/bases.js';\nimport { asUint8Array } from './util/as-uint8array.js';\n/**\n * Create a `Uint8Array` from the passed string\n *\n * Supports `utf8`, `utf-8`, `hex`, and any encoding supported by the multiformats module.\n *\n * Also `ascii` which is similar to node's 'binary' encoding.\n */\nexport function fromString(string, encoding = 'utf8') {\n    const base = bases[encoding];\n    if (base == null) {\n        throw new Error(`Unsupported encoding \"${encoding}\"`);\n    }\n    if ((encoding === 'utf8' || encoding === 'utf-8') && globalThis.Buffer != null && globalThis.Buffer.from != null) {\n        return asUint8Array(globalThis.Buffer.from(string, 'utf-8'));\n    }\n    // add multibase prefix\n    return base.decoder.decode(`${base.prefix}${string}`); // eslint-disable-line @typescript-eslint/restrict-template-expressions\n}\n//# sourceMappingURL=from-string.js.map","import { nanoid } from 'nanoid';\nimport { toString as uint8ArrayToString } from 'uint8arrays/to-string';\nimport { fromString as uint8ArrayFromString } from 'uint8arrays/from-string';\nconst pathSepS = '/';\nconst pathSepB = new TextEncoder().encode(pathSepS);\nconst pathSep = pathSepB[0];\n/**\n * A Key represents the unique identifier of an object.\n * Our Key scheme is inspired by file systems and Google App Engine key model.\n * Keys are meant to be unique across a system. Keys are hierarchical,\n * incorporating more and more specific namespaces. Thus keys can be deemed\n * 'children' or 'ancestors' of other keys:\n * - `new Key('/Comedy')`\n * - `new Key('/Comedy/MontyPython')`\n * Also, every namespace can be parametrized to embed relevant object\n * information. For example, the Key `name` (most specific namespace) could\n * include the object type:\n * - `new Key('/Comedy/MontyPython/Actor:JohnCleese')`\n * - `new Key('/Comedy/MontyPython/Sketch:CheeseShop')`\n * - `new Key('/Comedy/MontyPython/Sketch:CheeseShop/Character:Mousebender')`\n *\n */\nexport class Key {\n    /**\n     * @param {string | Uint8Array} s\n     * @param {boolean} [clean]\n     */\n    constructor(s, clean) {\n        if (typeof s === 'string') {\n            this._buf = uint8ArrayFromString(s);\n        }\n        else if (s instanceof Uint8Array) {\n            this._buf = s;\n        }\n        else {\n            throw new Error('Invalid key, should be String of Uint8Array');\n        }\n        if (clean == null) {\n            clean = true;\n        }\n        if (clean) {\n            this.clean();\n        }\n        if (this._buf.byteLength === 0 || this._buf[0] !== pathSep) {\n            throw new Error('Invalid key');\n        }\n    }\n    /**\n     * Convert to the string representation\n     *\n     * @param {import('uint8arrays/to-string').SupportedEncodings} [encoding='utf8'] - The encoding to use.\n     * @returns {string}\n     */\n    toString(encoding = 'utf8') {\n        return uint8ArrayToString(this._buf, encoding);\n    }\n    /**\n     * Return the Uint8Array representation of the key\n     *\n     * @returns {Uint8Array}\n     */\n    uint8Array() {\n        return this._buf;\n    }\n    /**\n     * Return string representation of the key\n     *\n     * @returns {string}\n     */\n    get [Symbol.toStringTag]() {\n        return `Key(${this.toString()})`;\n    }\n    /**\n     * Constructs a key out of a namespace array.\n     *\n     * @param {Array<string>} list - The array of namespaces\n     * @returns {Key}\n     *\n     * @example\n     * ```js\n     * Key.withNamespaces(['one', 'two'])\n     * // => Key('/one/two')\n     * ```\n     */\n    static withNamespaces(list) {\n        return new Key(list.join(pathSepS));\n    }\n    /**\n     * Returns a randomly (uuid) generated key.\n     *\n     * @returns {Key}\n     *\n     * @example\n     * ```js\n     * Key.random()\n     * // => Key('/f98719ea086343f7b71f32ea9d9d521d')\n     * ```\n     */\n    static random() {\n        return new Key(nanoid().replace(/-/g, ''));\n    }\n    /**\n     * @param {*} other\n     */\n    static asKey(other) {\n        if (other instanceof Uint8Array || typeof other === 'string') {\n            // we can create a key from this\n            return new Key(other);\n        }\n        if (typeof other.uint8Array === 'function') {\n            // this is an older version or may have crossed the esm/cjs boundary\n            return new Key(other.uint8Array());\n        }\n        return null;\n    }\n    /**\n     * Cleanup the current key\n     *\n     * @returns {void}\n     */\n    clean() {\n        if (this._buf == null || this._buf.byteLength === 0) {\n            this._buf = pathSepB;\n        }\n        if (this._buf[0] !== pathSep) {\n            const bytes = new Uint8Array(this._buf.byteLength + 1);\n            bytes.fill(pathSep, 0, 1);\n            bytes.set(this._buf, 1);\n            this._buf = bytes;\n        }\n        // normalize does not remove trailing slashes\n        while (this._buf.byteLength > 1 && this._buf[this._buf.byteLength - 1] === pathSep) {\n            this._buf = this._buf.subarray(0, -1);\n        }\n    }\n    /**\n     * Check if the given key is sorted lower than ourself.\n     *\n     * @param {Key} key - The other Key to check against\n     * @returns {boolean}\n     */\n    less(key) {\n        const list1 = this.list();\n        const list2 = key.list();\n        for (let i = 0; i < list1.length; i++) {\n            if (list2.length < i + 1) {\n                return false;\n            }\n            const c1 = list1[i];\n            const c2 = list2[i];\n            if (c1 < c2) {\n                return true;\n            }\n            else if (c1 > c2) {\n                return false;\n            }\n        }\n        return list1.length < list2.length;\n    }\n    /**\n     * Returns the key with all parts in reversed order.\n     *\n     * @returns {Key}\n     *\n     * @example\n     * ```js\n     * new Key('/Comedy/MontyPython/Actor:JohnCleese').reverse()\n     * // => Key('/Actor:JohnCleese/MontyPython/Comedy')\n     * ```\n     */\n    reverse() {\n        return Key.withNamespaces(this.list().slice().reverse());\n    }\n    /**\n     * Returns the `namespaces` making up this Key.\n     *\n     * @returns {Array<string>}\n     */\n    namespaces() {\n        return this.list();\n    }\n    /** Returns the \"base\" namespace of this key.\n     *\n     * @returns {string}\n     *\n     * @example\n     * ```js\n     * new Key('/Comedy/MontyPython/Actor:JohnCleese').baseNamespace()\n     * // => 'Actor:JohnCleese'\n     * ```\n     */\n    baseNamespace() {\n        const ns = this.namespaces();\n        return ns[ns.length - 1];\n    }\n    /**\n     * Returns the `list` representation of this key.\n     *\n     * @returns {Array<string>}\n     *\n     * @example\n     * ```js\n     * new Key('/Comedy/MontyPython/Actor:JohnCleese').list()\n     * // => ['Comedy', 'MontyPythong', 'Actor:JohnCleese']\n     * ```\n     */\n    list() {\n        return this.toString().split(pathSepS).slice(1);\n    }\n    /**\n     * Returns the \"type\" of this key (value of last namespace).\n     *\n     * @returns {string}\n     *\n     * @example\n     * ```js\n     * new Key('/Comedy/MontyPython/Actor:JohnCleese').type()\n     * // => 'Actor'\n     * ```\n     */\n    type() {\n        return namespaceType(this.baseNamespace());\n    }\n    /**\n     * Returns the \"name\" of this key (field of last namespace).\n     *\n     * @returns {string}\n     *\n     * @example\n     * ```js\n     * new Key('/Comedy/MontyPython/Actor:JohnCleese').name()\n     * // => 'JohnCleese'\n     * ```\n     */\n    name() {\n        return namespaceValue(this.baseNamespace());\n    }\n    /**\n     * Returns an \"instance\" of this type key (appends value to namespace).\n     *\n     * @param {string} s - The string to append.\n     * @returns {Key}\n     *\n     * @example\n     * ```js\n     * new Key('/Comedy/MontyPython/Actor').instance('JohnClesse')\n     * // => Key('/Comedy/MontyPython/Actor:JohnCleese')\n     * ```\n     */\n    instance(s) {\n        return new Key(this.toString() + ':' + s);\n    }\n    /**\n     * Returns the \"path\" of this key (parent + type).\n     *\n     * @returns {Key}\n     *\n     * @example\n     * ```js\n     * new Key('/Comedy/MontyPython/Actor:JohnCleese').path()\n     * // => Key('/Comedy/MontyPython/Actor')\n     * ```\n     */\n    path() {\n        let p = this.parent().toString();\n        if (!p.endsWith(pathSepS)) {\n            p += pathSepS;\n        }\n        p += this.type();\n        return new Key(p);\n    }\n    /**\n     * Returns the `parent` Key of this Key.\n     *\n     * @returns {Key}\n     *\n     * @example\n     * ```js\n     * new Key(\"/Comedy/MontyPython/Actor:JohnCleese\").parent()\n     * // => Key(\"/Comedy/MontyPython\")\n     * ```\n     */\n    parent() {\n        const list = this.list();\n        if (list.length === 1) {\n            return new Key(pathSepS);\n        }\n        return new Key(list.slice(0, -1).join(pathSepS));\n    }\n    /**\n     * Returns the `child` Key of this Key.\n     *\n     * @param {Key} key - The child Key to add\n     * @returns {Key}\n     *\n     * @example\n     * ```js\n     * new Key('/Comedy/MontyPython').child(new Key('Actor:JohnCleese'))\n     * // => Key('/Comedy/MontyPython/Actor:JohnCleese')\n     * ```\n     */\n    child(key) {\n        if (this.toString() === pathSepS) {\n            return key;\n        }\n        else if (key.toString() === pathSepS) {\n            return this;\n        }\n        return new Key(this.toString() + key.toString(), false);\n    }\n    /**\n     * Returns whether this key is a prefix of `other`\n     *\n     * @param {Key} other - The other key to test against\n     * @returns {boolean}\n     *\n     * @example\n     * ```js\n     * new Key('/Comedy').isAncestorOf('/Comedy/MontyPython')\n     * // => true\n     * ```\n     */\n    isAncestorOf(other) {\n        if (other.toString() === this.toString()) {\n            return false;\n        }\n        return other.toString().startsWith(this.toString());\n    }\n    /**\n     * Returns whether this key is a contains another as prefix.\n     *\n     * @param {Key} other - The other Key to test against\n     * @returns {boolean}\n     *\n     * @example\n     * ```js\n     * new Key('/Comedy/MontyPython').isDecendantOf('/Comedy')\n     * // => true\n     * ```\n     */\n    isDecendantOf(other) {\n        if (other.toString() === this.toString()) {\n            return false;\n        }\n        return this.toString().startsWith(other.toString());\n    }\n    /**\n     * Checks if this key has only one namespace.\n     *\n     * @returns {boolean}\n     *\n     */\n    isTopLevel() {\n        return this.list().length === 1;\n    }\n    /**\n     * Concats one or more Keys into one new Key.\n     *\n     * @param {Array<Key>} keys - The array of keys to concatenate\n     * @returns {Key}\n     */\n    concat(...keys) {\n        return Key.withNamespaces([...this.namespaces(), ...flatten(keys.map(key => key.namespaces()))]);\n    }\n}\n/**\n * The first component of a namespace. `foo` in `foo:bar`\n *\n * @param {string} ns\n * @returns {string}\n */\nfunction namespaceType(ns) {\n    const parts = ns.split(':');\n    if (parts.length < 2) {\n        return '';\n    }\n    return parts.slice(0, -1).join(':');\n}\n/**\n * The last component of a namespace, `baz` in `foo:bar:baz`.\n *\n * @param {string} ns\n * @returns {string}\n */\nfunction namespaceValue(ns) {\n    const parts = ns.split(':');\n    return parts[parts.length - 1];\n}\n/**\n * Flatten array of arrays (only one level)\n *\n * @template T\n * @param {Array<any>} arr\n * @returns {T[]}\n */\nfunction flatten(arr) {\n    return ([]).concat(...arr);\n}\n//# sourceMappingURL=key.js.map","'use strict'\n\n/**\n * Consumes the passed iterator and returns the number of items it contained.\n *\n * @param {AsyncIterable<any> | Iterable<any>} iterator\n * @returns {Promise<number>}\n */\nconst length = async (iterator) => {\n  let count = 0\n\n  for await (const _ of iterator) { // eslint-disable-line no-unused-vars\n    count++\n  }\n\n  return count\n}\n\nmodule.exports = length\n","import { coerce } from '../bytes.js';\nexport const name = 'raw';\nexport const code = 85;\nexport const encode = node => coerce(node);\nexport const decode = data => coerce(data);","\nimport { CID } from 'multiformats/cid'\nimport { Key } from 'interface-datastore/key'\nimport debug from 'debug'\nimport length from 'it-length'\nimport { base32 } from 'multiformats/bases/base32'\nimport * as raw from 'multiformats/codecs/raw'\nimport * as mhd from 'multiformats/hashes/digest'\n\nconst log = debug('ipfs:repo:migrator:migration-8')\n\n/**\n * @typedef {import('../../src/types').Migration} Migration\n * @typedef {import('interface-datastore').Datastore} Datastore\n */\n\n/**\n * @param {*} blockstore\n * @returns {Datastore}\n */\nfunction unwrap (blockstore) {\n  if (blockstore.child) {\n    return unwrap(blockstore.child)\n  }\n\n  return blockstore\n}\n\n/**\n * @param {Key} key\n */\nfunction keyToMultihash (key) {\n  try {\n    const buf = base32.decode(`b${key.toString().toLowerCase().slice(1)}`)\n\n    // Extract multihash from CID\n    const multihash = CID.decode(buf).multihash.bytes\n\n    // Encode and slice off multibase codec\n    // Should be uppercase for interop with go\n    const multihashStr = base32.encode(multihash).slice(1).toUpperCase()\n\n    return new Key(`/${multihashStr}`, false)\n  } catch (/** @type {any} */ err) {\n    return key\n  }\n}\n\n/**\n * @param {Key} key\n */\nfunction keyToCid (key) {\n  try {\n    const buf = base32.decode(`b${key.toString().toLowerCase().slice(1)}`)\n    const digest = mhd.decode(buf)\n\n    // CID to Key\n    const multihash = base32.encode(CID.createV1(raw.code, digest).bytes).slice(1)\n\n    return new Key(`/${multihash.toUpperCase()}`, false)\n  } catch {\n    return key\n  }\n}\n\n/**\n * @param {import('../../src/types').Backends} backends\n * @param {(percent: number, message: string) => void} onProgress\n * @param {(key: Key) => Key} keyFunction\n */\nasync function process (backends, onProgress, keyFunction) {\n  const blockstore = backends.blocks\n  await blockstore.open()\n\n  const unwrapped = unwrap(blockstore)\n\n  const blockCount = await length(unwrapped.queryKeys({\n    filters: [(key) => {\n      const newKey = keyFunction(key)\n\n      return newKey.toString() !== key.toString()\n    }]\n  }))\n\n  try {\n    let counter = 0\n\n    for await (const block of unwrapped.query({})) {\n      const newKey = keyFunction(block.key)\n\n      // If the Key is base32 CIDv0 then there's nothing to do\n      if (newKey.toString() !== block.key.toString()) {\n        counter += 1\n        log(`Migrating Block from ${block.key} to ${newKey}`, await unwrapped.has(block.key))\n\n        await unwrapped.delete(block.key)\n        await unwrapped.put(newKey, block.value)\n\n        onProgress((counter / blockCount) * 100, `Migrated Block from ${block.key} to ${newKey}`)\n      }\n    }\n  } finally {\n    await blockstore.close()\n  }\n}\n\n/** @type {Migration} */\nexport const migration = {\n  version: 8,\n  description: 'Transforms key names into base32 encoding and converts Block store to use bare multihashes encoded as base32',\n  migrate: (backends, onProgress = () => {}) => {\n    return process(backends, onProgress, keyToMultihash)\n  },\n  revert: (backends, onProgress = () => {}) => {\n    return process(backends, onProgress, keyToCid)\n  }\n}\n","var encode_1 = encode;\nvar MSB = 128, REST = 127, MSBALL = ~REST, INT = Math.pow(2, 31);\nfunction encode(num, out, offset) {\n  out = out || [];\n  offset = offset || 0;\n  var oldOffset = offset;\n  while (num >= INT) {\n    out[offset++] = num & 255 | MSB;\n    num /= 128;\n  }\n  while (num & MSBALL) {\n    out[offset++] = num & 255 | MSB;\n    num >>>= 7;\n  }\n  out[offset] = num | 0;\n  encode.bytes = offset - oldOffset + 1;\n  return out;\n}\nvar decode = read;\nvar MSB$1 = 128, REST$1 = 127;\nfunction read(buf, offset) {\n  var res = 0, offset = offset || 0, shift = 0, counter = offset, b, l = buf.length;\n  do {\n    if (counter >= l) {\n      read.bytes = 0;\n      throw new RangeError('Could not decode varint');\n    }\n    b = buf[counter++];\n    res += shift < 28 ? (b & REST$1) << shift : (b & REST$1) * Math.pow(2, shift);\n    shift += 7;\n  } while (b >= MSB$1);\n  read.bytes = counter - offset;\n  return res;\n}\nvar N1 = Math.pow(2, 7);\nvar N2 = Math.pow(2, 14);\nvar N3 = Math.pow(2, 21);\nvar N4 = Math.pow(2, 28);\nvar N5 = Math.pow(2, 35);\nvar N6 = Math.pow(2, 42);\nvar N7 = Math.pow(2, 49);\nvar N8 = Math.pow(2, 56);\nvar N9 = Math.pow(2, 63);\nvar length = function (value) {\n  return value < N1 ? 1 : value < N2 ? 2 : value < N3 ? 3 : value < N4 ? 4 : value < N5 ? 5 : value < N6 ? 6 : value < N7 ? 7 : value < N8 ? 8 : value < N9 ? 9 : 10;\n};\nvar varint = {\n  encode: encode_1,\n  decode: decode,\n  encodingLength: length\n};\nvar _brrp_varint = varint;\nexport default _brrp_varint;","import varint from '../vendor/varint.js';\nexport const decode = (data, offset = 0) => {\n  const code = varint.decode(data, offset);\n  return [\n    code,\n    varint.decode.bytes\n  ];\n};\nexport const encodeTo = (int, target, offset = 0) => {\n  varint.encode(int, target, offset);\n  return target;\n};\nexport const encodingLength = int => {\n  return varint.encodingLength(int);\n};","const empty = new Uint8Array(0);\nconst toHex = d => d.reduce((hex, byte) => hex + byte.toString(16).padStart(2, '0'), '');\nconst fromHex = hex => {\n  const hexes = hex.match(/../g);\n  return hexes ? new Uint8Array(hexes.map(b => parseInt(b, 16))) : empty;\n};\nconst equals = (aa, bb) => {\n  if (aa === bb)\n    return true;\n  if (aa.byteLength !== bb.byteLength) {\n    return false;\n  }\n  for (let ii = 0; ii < aa.byteLength; ii++) {\n    if (aa[ii] !== bb[ii]) {\n      return false;\n    }\n  }\n  return true;\n};\nconst coerce = o => {\n  if (o instanceof Uint8Array && o.constructor.name === 'Uint8Array')\n    return o;\n  if (o instanceof ArrayBuffer)\n    return new Uint8Array(o);\n  if (ArrayBuffer.isView(o)) {\n    return new Uint8Array(o.buffer, o.byteOffset, o.byteLength);\n  }\n  throw new Error('Unknown type, must be binary type');\n};\nconst isBinary = o => o instanceof ArrayBuffer || ArrayBuffer.isView(o);\nconst fromString = str => new TextEncoder().encode(str);\nconst toString = b => new TextDecoder().decode(b);\nexport {\n  equals,\n  coerce,\n  isBinary,\n  fromHex,\n  toHex,\n  fromString,\n  toString,\n  empty\n};","import {\n  coerce,\n  equals as equalBytes\n} from '../bytes.js';\nimport * as varint from '../varint.js';\nexport const create = (code, digest) => {\n  const size = digest.byteLength;\n  const sizeOffset = varint.encodingLength(code);\n  const digestOffset = sizeOffset + varint.encodingLength(size);\n  const bytes = new Uint8Array(digestOffset + size);\n  varint.encodeTo(code, bytes, 0);\n  varint.encodeTo(size, bytes, sizeOffset);\n  bytes.set(digest, digestOffset);\n  return new Digest(code, size, digest, bytes);\n};\nexport const decode = multihash => {\n  const bytes = coerce(multihash);\n  const [code, sizeOffset] = varint.decode(bytes);\n  const [size, digestOffset] = varint.decode(bytes.subarray(sizeOffset));\n  const digest = bytes.subarray(sizeOffset + digestOffset);\n  if (digest.byteLength !== size) {\n    throw new Error('Incorrect length');\n  }\n  return new Digest(code, size, digest, bytes);\n};\nexport const equals = (a, b) => {\n  if (a === b) {\n    return true;\n  } else {\n    return a.code === b.code && a.size === b.size && equalBytes(a.bytes, b.bytes);\n  }\n};\nexport class Digest {\n  constructor(code, size, digest, bytes) {\n    this.code = code;\n    this.size = size;\n    this.digest = digest;\n    this.bytes = bytes;\n  }\n}","function base(ALPHABET, name) {\n  if (ALPHABET.length >= 255) {\n    throw new TypeError('Alphabet too long');\n  }\n  var BASE_MAP = new Uint8Array(256);\n  for (var j = 0; j < BASE_MAP.length; j++) {\n    BASE_MAP[j] = 255;\n  }\n  for (var i = 0; i < ALPHABET.length; i++) {\n    var x = ALPHABET.charAt(i);\n    var xc = x.charCodeAt(0);\n    if (BASE_MAP[xc] !== 255) {\n      throw new TypeError(x + ' is ambiguous');\n    }\n    BASE_MAP[xc] = i;\n  }\n  var BASE = ALPHABET.length;\n  var LEADER = ALPHABET.charAt(0);\n  var FACTOR = Math.log(BASE) / Math.log(256);\n  var iFACTOR = Math.log(256) / Math.log(BASE);\n  function encode(source) {\n    if (source instanceof Uint8Array);\n    else if (ArrayBuffer.isView(source)) {\n      source = new Uint8Array(source.buffer, source.byteOffset, source.byteLength);\n    } else if (Array.isArray(source)) {\n      source = Uint8Array.from(source);\n    }\n    if (!(source instanceof Uint8Array)) {\n      throw new TypeError('Expected Uint8Array');\n    }\n    if (source.length === 0) {\n      return '';\n    }\n    var zeroes = 0;\n    var length = 0;\n    var pbegin = 0;\n    var pend = source.length;\n    while (pbegin !== pend && source[pbegin] === 0) {\n      pbegin++;\n      zeroes++;\n    }\n    var size = (pend - pbegin) * iFACTOR + 1 >>> 0;\n    var b58 = new Uint8Array(size);\n    while (pbegin !== pend) {\n      var carry = source[pbegin];\n      var i = 0;\n      for (var it1 = size - 1; (carry !== 0 || i < length) && it1 !== -1; it1--, i++) {\n        carry += 256 * b58[it1] >>> 0;\n        b58[it1] = carry % BASE >>> 0;\n        carry = carry / BASE >>> 0;\n      }\n      if (carry !== 0) {\n        throw new Error('Non-zero carry');\n      }\n      length = i;\n      pbegin++;\n    }\n    var it2 = size - length;\n    while (it2 !== size && b58[it2] === 0) {\n      it2++;\n    }\n    var str = LEADER.repeat(zeroes);\n    for (; it2 < size; ++it2) {\n      str += ALPHABET.charAt(b58[it2]);\n    }\n    return str;\n  }\n  function decodeUnsafe(source) {\n    if (typeof source !== 'string') {\n      throw new TypeError('Expected String');\n    }\n    if (source.length === 0) {\n      return new Uint8Array();\n    }\n    var psz = 0;\n    if (source[psz] === ' ') {\n      return;\n    }\n    var zeroes = 0;\n    var length = 0;\n    while (source[psz] === LEADER) {\n      zeroes++;\n      psz++;\n    }\n    var size = (source.length - psz) * FACTOR + 1 >>> 0;\n    var b256 = new Uint8Array(size);\n    while (source[psz]) {\n      var carry = BASE_MAP[source.charCodeAt(psz)];\n      if (carry === 255) {\n        return;\n      }\n      var i = 0;\n      for (var it3 = size - 1; (carry !== 0 || i < length) && it3 !== -1; it3--, i++) {\n        carry += BASE * b256[it3] >>> 0;\n        b256[it3] = carry % 256 >>> 0;\n        carry = carry / 256 >>> 0;\n      }\n      if (carry !== 0) {\n        throw new Error('Non-zero carry');\n      }\n      length = i;\n      psz++;\n    }\n    if (source[psz] === ' ') {\n      return;\n    }\n    var it4 = size - length;\n    while (it4 !== size && b256[it4] === 0) {\n      it4++;\n    }\n    var vch = new Uint8Array(zeroes + (size - it4));\n    var j = zeroes;\n    while (it4 !== size) {\n      vch[j++] = b256[it4++];\n    }\n    return vch;\n  }\n  function decode(string) {\n    var buffer = decodeUnsafe(string);\n    if (buffer) {\n      return buffer;\n    }\n    throw new Error(`Non-${ name } character`);\n  }\n  return {\n    encode: encode,\n    decodeUnsafe: decodeUnsafe,\n    decode: decode\n  };\n}\nvar src = base;\nvar _brrp__multiformats_scope_baseX = src;\nexport default _brrp__multiformats_scope_baseX;","import basex from '../../vendor/base-x.js';\nimport { coerce } from '../bytes.js';\nclass Encoder {\n  constructor(name, prefix, baseEncode) {\n    this.name = name;\n    this.prefix = prefix;\n    this.baseEncode = baseEncode;\n  }\n  encode(bytes) {\n    if (bytes instanceof Uint8Array) {\n      return `${ this.prefix }${ this.baseEncode(bytes) }`;\n    } else {\n      throw Error('Unknown type, must be binary type');\n    }\n  }\n}\nclass Decoder {\n  constructor(name, prefix, baseDecode) {\n    this.name = name;\n    this.prefix = prefix;\n    if (prefix.codePointAt(0) === undefined) {\n      throw new Error('Invalid prefix character');\n    }\n    this.prefixCodePoint = prefix.codePointAt(0);\n    this.baseDecode = baseDecode;\n  }\n  decode(text) {\n    if (typeof text === 'string') {\n      if (text.codePointAt(0) !== this.prefixCodePoint) {\n        throw Error(`Unable to decode multibase string ${ JSON.stringify(text) }, ${ this.name } decoder only supports inputs prefixed with ${ this.prefix }`);\n      }\n      return this.baseDecode(text.slice(this.prefix.length));\n    } else {\n      throw Error('Can only multibase decode strings');\n    }\n  }\n  or(decoder) {\n    return or(this, decoder);\n  }\n}\nclass ComposedDecoder {\n  constructor(decoders) {\n    this.decoders = decoders;\n  }\n  or(decoder) {\n    return or(this, decoder);\n  }\n  decode(input) {\n    const prefix = input[0];\n    const decoder = this.decoders[prefix];\n    if (decoder) {\n      return decoder.decode(input);\n    } else {\n      throw RangeError(`Unable to decode multibase string ${ JSON.stringify(input) }, only inputs prefixed with ${ Object.keys(this.decoders) } are supported`);\n    }\n  }\n}\nexport const or = (left, right) => new ComposedDecoder({\n  ...left.decoders || { [left.prefix]: left },\n  ...right.decoders || { [right.prefix]: right }\n});\nexport class Codec {\n  constructor(name, prefix, baseEncode, baseDecode) {\n    this.name = name;\n    this.prefix = prefix;\n    this.baseEncode = baseEncode;\n    this.baseDecode = baseDecode;\n    this.encoder = new Encoder(name, prefix, baseEncode);\n    this.decoder = new Decoder(name, prefix, baseDecode);\n  }\n  encode(input) {\n    return this.encoder.encode(input);\n  }\n  decode(input) {\n    return this.decoder.decode(input);\n  }\n}\nexport const from = ({name, prefix, encode, decode}) => new Codec(name, prefix, encode, decode);\nexport const baseX = ({prefix, name, alphabet}) => {\n  const {encode, decode} = basex(alphabet, name);\n  return from({\n    prefix,\n    name,\n    encode,\n    decode: text => coerce(decode(text))\n  });\n};\nconst decode = (string, alphabet, bitsPerChar, name) => {\n  const codes = {};\n  for (let i = 0; i < alphabet.length; ++i) {\n    codes[alphabet[i]] = i;\n  }\n  let end = string.length;\n  while (string[end - 1] === '=') {\n    --end;\n  }\n  const out = new Uint8Array(end * bitsPerChar / 8 | 0);\n  let bits = 0;\n  let buffer = 0;\n  let written = 0;\n  for (let i = 0; i < end; ++i) {\n    const value = codes[string[i]];\n    if (value === undefined) {\n      throw new SyntaxError(`Non-${ name } character`);\n    }\n    buffer = buffer << bitsPerChar | value;\n    bits += bitsPerChar;\n    if (bits >= 8) {\n      bits -= 8;\n      out[written++] = 255 & buffer >> bits;\n    }\n  }\n  if (bits >= bitsPerChar || 255 & buffer << 8 - bits) {\n    throw new SyntaxError('Unexpected end of data');\n  }\n  return out;\n};\nconst encode = (data, alphabet, bitsPerChar) => {\n  const pad = alphabet[alphabet.length - 1] === '=';\n  const mask = (1 << bitsPerChar) - 1;\n  let out = '';\n  let bits = 0;\n  let buffer = 0;\n  for (let i = 0; i < data.length; ++i) {\n    buffer = buffer << 8 | data[i];\n    bits += 8;\n    while (bits > bitsPerChar) {\n      bits -= bitsPerChar;\n      out += alphabet[mask & buffer >> bits];\n    }\n  }\n  if (bits) {\n    out += alphabet[mask & buffer << bitsPerChar - bits];\n  }\n  if (pad) {\n    while (out.length * bitsPerChar & 7) {\n      out += '=';\n    }\n  }\n  return out;\n};\nexport const rfc4648 = ({name, prefix, bitsPerChar, alphabet}) => {\n  return from({\n    prefix,\n    name,\n    encode(input) {\n      return encode(input, alphabet, bitsPerChar);\n    },\n    decode(input) {\n      return decode(input, alphabet, bitsPerChar, name);\n    }\n  });\n};","import { baseX } from './base.js';\nexport const base58btc = baseX({\n  name: 'base58btc',\n  prefix: 'z',\n  alphabet: '123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz'\n});\nexport const base58flickr = baseX({\n  name: 'base58flickr',\n  prefix: 'Z',\n  alphabet: '123456789abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ'\n});","import { rfc4648 } from './base.js';\nexport const base32 = rfc4648({\n  prefix: 'b',\n  name: 'base32',\n  alphabet: 'abcdefghijklmnopqrstuvwxyz234567',\n  bitsPerChar: 5\n});\nexport const base32upper = rfc4648({\n  prefix: 'B',\n  name: 'base32upper',\n  alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZ234567',\n  bitsPerChar: 5\n});\nexport const base32pad = rfc4648({\n  prefix: 'c',\n  name: 'base32pad',\n  alphabet: 'abcdefghijklmnopqrstuvwxyz234567=',\n  bitsPerChar: 5\n});\nexport const base32padupper = rfc4648({\n  prefix: 'C',\n  name: 'base32padupper',\n  alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZ234567=',\n  bitsPerChar: 5\n});\nexport const base32hex = rfc4648({\n  prefix: 'v',\n  name: 'base32hex',\n  alphabet: '0123456789abcdefghijklmnopqrstuv',\n  bitsPerChar: 5\n});\nexport const base32hexupper = rfc4648({\n  prefix: 'V',\n  name: 'base32hexupper',\n  alphabet: '0123456789ABCDEFGHIJKLMNOPQRSTUV',\n  bitsPerChar: 5\n});\nexport const base32hexpad = rfc4648({\n  prefix: 't',\n  name: 'base32hexpad',\n  alphabet: '0123456789abcdefghijklmnopqrstuv=',\n  bitsPerChar: 5\n});\nexport const base32hexpadupper = rfc4648({\n  prefix: 'T',\n  name: 'base32hexpadupper',\n  alphabet: '0123456789ABCDEFGHIJKLMNOPQRSTUV=',\n  bitsPerChar: 5\n});\nexport const base32z = rfc4648({\n  prefix: 'h',\n  name: 'base32z',\n  alphabet: 'ybndrfg8ejkmcpqxot1uwisza345h769',\n  bitsPerChar: 5\n});","import * as varint from './varint.js';\nimport * as Digest from './hashes/digest.js';\nimport { base58btc } from './bases/base58.js';\nimport { base32 } from './bases/base32.js';\nimport { coerce } from './bytes.js';\nexport class CID {\n  constructor(version, code, multihash, bytes) {\n    this.code = code;\n    this.version = version;\n    this.multihash = multihash;\n    this.bytes = bytes;\n    this.byteOffset = bytes.byteOffset;\n    this.byteLength = bytes.byteLength;\n    this.asCID = this;\n    this._baseCache = new Map();\n    Object.defineProperties(this, {\n      byteOffset: hidden,\n      byteLength: hidden,\n      code: readonly,\n      version: readonly,\n      multihash: readonly,\n      bytes: readonly,\n      _baseCache: hidden,\n      asCID: hidden\n    });\n  }\n  toV0() {\n    switch (this.version) {\n    case 0: {\n        return this;\n      }\n    default: {\n        const {code, multihash} = this;\n        if (code !== DAG_PB_CODE) {\n          throw new Error('Cannot convert a non dag-pb CID to CIDv0');\n        }\n        if (multihash.code !== SHA_256_CODE) {\n          throw new Error('Cannot convert non sha2-256 multihash CID to CIDv0');\n        }\n        return CID.createV0(multihash);\n      }\n    }\n  }\n  toV1() {\n    switch (this.version) {\n    case 0: {\n        const {code, digest} = this.multihash;\n        const multihash = Digest.create(code, digest);\n        return CID.createV1(this.code, multihash);\n      }\n    case 1: {\n        return this;\n      }\n    default: {\n        throw Error(`Can not convert CID version ${ this.version } to version 0. This is a bug please report`);\n      }\n    }\n  }\n  equals(other) {\n    return other && this.code === other.code && this.version === other.version && Digest.equals(this.multihash, other.multihash);\n  }\n  toString(base) {\n    const {bytes, version, _baseCache} = this;\n    switch (version) {\n    case 0:\n      return toStringV0(bytes, _baseCache, base || base58btc.encoder);\n    default:\n      return toStringV1(bytes, _baseCache, base || base32.encoder);\n    }\n  }\n  toJSON() {\n    return {\n      code: this.code,\n      version: this.version,\n      hash: this.multihash.bytes\n    };\n  }\n  get [Symbol.toStringTag]() {\n    return 'CID';\n  }\n  [Symbol.for('nodejs.util.inspect.custom')]() {\n    return 'CID(' + this.toString() + ')';\n  }\n  static isCID(value) {\n    deprecate(/^0\\.0/, IS_CID_DEPRECATION);\n    return !!(value && (value[cidSymbol] || value.asCID === value));\n  }\n  get toBaseEncodedString() {\n    throw new Error('Deprecated, use .toString()');\n  }\n  get codec() {\n    throw new Error('\"codec\" property is deprecated, use integer \"code\" property instead');\n  }\n  get buffer() {\n    throw new Error('Deprecated .buffer property, use .bytes to get Uint8Array instead');\n  }\n  get multibaseName() {\n    throw new Error('\"multibaseName\" property is deprecated');\n  }\n  get prefix() {\n    throw new Error('\"prefix\" property is deprecated');\n  }\n  static asCID(value) {\n    if (value instanceof CID) {\n      return value;\n    } else if (value != null && value.asCID === value) {\n      const {version, code, multihash, bytes} = value;\n      return new CID(version, code, multihash, bytes || encodeCID(version, code, multihash.bytes));\n    } else if (value != null && value[cidSymbol] === true) {\n      const {version, multihash, code} = value;\n      const digest = Digest.decode(multihash);\n      return CID.create(version, code, digest);\n    } else {\n      return null;\n    }\n  }\n  static create(version, code, digest) {\n    if (typeof code !== 'number') {\n      throw new Error('String codecs are no longer supported');\n    }\n    switch (version) {\n    case 0: {\n        if (code !== DAG_PB_CODE) {\n          throw new Error(`Version 0 CID must use dag-pb (code: ${ DAG_PB_CODE }) block encoding`);\n        } else {\n          return new CID(version, code, digest, digest.bytes);\n        }\n      }\n    case 1: {\n        const bytes = encodeCID(version, code, digest.bytes);\n        return new CID(version, code, digest, bytes);\n      }\n    default: {\n        throw new Error('Invalid version');\n      }\n    }\n  }\n  static createV0(digest) {\n    return CID.create(0, DAG_PB_CODE, digest);\n  }\n  static createV1(code, digest) {\n    return CID.create(1, code, digest);\n  }\n  static decode(bytes) {\n    const [cid, remainder] = CID.decodeFirst(bytes);\n    if (remainder.length) {\n      throw new Error('Incorrect length');\n    }\n    return cid;\n  }\n  static decodeFirst(bytes) {\n    const specs = CID.inspectBytes(bytes);\n    const prefixSize = specs.size - specs.multihashSize;\n    const multihashBytes = coerce(bytes.subarray(prefixSize, prefixSize + specs.multihashSize));\n    if (multihashBytes.byteLength !== specs.multihashSize) {\n      throw new Error('Incorrect length');\n    }\n    const digestBytes = multihashBytes.subarray(specs.multihashSize - specs.digestSize);\n    const digest = new Digest.Digest(specs.multihashCode, specs.digestSize, digestBytes, multihashBytes);\n    const cid = specs.version === 0 ? CID.createV0(digest) : CID.createV1(specs.codec, digest);\n    return [\n      cid,\n      bytes.subarray(specs.size)\n    ];\n  }\n  static inspectBytes(initialBytes) {\n    let offset = 0;\n    const next = () => {\n      const [i, length] = varint.decode(initialBytes.subarray(offset));\n      offset += length;\n      return i;\n    };\n    let version = next();\n    let codec = DAG_PB_CODE;\n    if (version === 18) {\n      version = 0;\n      offset = 0;\n    } else if (version === 1) {\n      codec = next();\n    }\n    if (version !== 0 && version !== 1) {\n      throw new RangeError(`Invalid CID version ${ version }`);\n    }\n    const prefixSize = offset;\n    const multihashCode = next();\n    const digestSize = next();\n    const size = offset + digestSize;\n    const multihashSize = size - prefixSize;\n    return {\n      version,\n      codec,\n      multihashCode,\n      digestSize,\n      multihashSize,\n      size\n    };\n  }\n  static parse(source, base) {\n    const [prefix, bytes] = parseCIDtoBytes(source, base);\n    const cid = CID.decode(bytes);\n    cid._baseCache.set(prefix, source);\n    return cid;\n  }\n}\nconst parseCIDtoBytes = (source, base) => {\n  switch (source[0]) {\n  case 'Q': {\n      const decoder = base || base58btc;\n      return [\n        base58btc.prefix,\n        decoder.decode(`${ base58btc.prefix }${ source }`)\n      ];\n    }\n  case base58btc.prefix: {\n      const decoder = base || base58btc;\n      return [\n        base58btc.prefix,\n        decoder.decode(source)\n      ];\n    }\n  case base32.prefix: {\n      const decoder = base || base32;\n      return [\n        base32.prefix,\n        decoder.decode(source)\n      ];\n    }\n  default: {\n      if (base == null) {\n        throw Error('To parse non base32 or base58btc encoded CID multibase decoder must be provided');\n      }\n      return [\n        source[0],\n        base.decode(source)\n      ];\n    }\n  }\n};\nconst toStringV0 = (bytes, cache, base) => {\n  const {prefix} = base;\n  if (prefix !== base58btc.prefix) {\n    throw Error(`Cannot string encode V0 in ${ base.name } encoding`);\n  }\n  const cid = cache.get(prefix);\n  if (cid == null) {\n    const cid = base.encode(bytes).slice(1);\n    cache.set(prefix, cid);\n    return cid;\n  } else {\n    return cid;\n  }\n};\nconst toStringV1 = (bytes, cache, base) => {\n  const {prefix} = base;\n  const cid = cache.get(prefix);\n  if (cid == null) {\n    const cid = base.encode(bytes);\n    cache.set(prefix, cid);\n    return cid;\n  } else {\n    return cid;\n  }\n};\nconst DAG_PB_CODE = 112;\nconst SHA_256_CODE = 18;\nconst encodeCID = (version, code, multihash) => {\n  const codeOffset = varint.encodingLength(version);\n  const hashOffset = codeOffset + varint.encodingLength(code);\n  const bytes = new Uint8Array(hashOffset + multihash.byteLength);\n  varint.encodeTo(version, bytes, 0);\n  varint.encodeTo(code, bytes, codeOffset);\n  bytes.set(multihash, hashOffset);\n  return bytes;\n};\nconst cidSymbol = Symbol.for('@ipld/js-cid/CID');\nconst readonly = {\n  writable: false,\n  configurable: false,\n  enumerable: true\n};\nconst hidden = {\n  writable: false,\n  enumerable: false,\n  configurable: false\n};\nconst version = '0.0.0-dev';\nconst deprecate = (range, message) => {\n  if (range.test(version)) {\n    console.warn(message);\n  } else {\n    throw new Error(message);\n  }\n};\nconst IS_CID_DEPRECATION = `CID.isCID(v) is deprecated and will be removed in the next major release.\nFollowing code pattern:\n\nif (CID.isCID(value)) {\n  doSomethingWithCID(value)\n}\n\nIs replaced with:\n\nconst cid = CID.asCID(value)\nif (cid) {\n  // Make sure to use cid instead of value\n  doSomethingWithCID(cid)\n}\n`;","const textDecoder = new TextDecoder();\nfunction decodeVarint(bytes, offset) {\n  let v = 0;\n  for (let shift = 0;; shift += 7) {\n    if (shift >= 64) {\n      throw new Error('protobuf: varint overflow');\n    }\n    if (offset >= bytes.length) {\n      throw new Error('protobuf: unexpected end of data');\n    }\n    const b = bytes[offset++];\n    v += shift < 28 ? (b & 127) << shift : (b & 127) * 2 ** shift;\n    if (b < 128) {\n      break;\n    }\n  }\n  return [\n    v,\n    offset\n  ];\n}\nfunction decodeBytes(bytes, offset) {\n  let byteLen;\n  [byteLen, offset] = decodeVarint(bytes, offset);\n  const postOffset = offset + byteLen;\n  if (byteLen < 0 || postOffset < 0) {\n    throw new Error('protobuf: invalid length');\n  }\n  if (postOffset > bytes.length) {\n    throw new Error('protobuf: unexpected end of data');\n  }\n  return [\n    bytes.subarray(offset, postOffset),\n    postOffset\n  ];\n}\nfunction decodeKey(bytes, index) {\n  let wire;\n  [wire, index] = decodeVarint(bytes, index);\n  return [\n    wire & 7,\n    wire >> 3,\n    index\n  ];\n}\nfunction decodeLink(bytes) {\n  const link = {};\n  const l = bytes.length;\n  let index = 0;\n  while (index < l) {\n    let wireType, fieldNum;\n    [wireType, fieldNum, index] = decodeKey(bytes, index);\n    if (fieldNum === 1) {\n      if (link.Hash) {\n        throw new Error('protobuf: (PBLink) duplicate Hash section');\n      }\n      if (wireType !== 2) {\n        throw new Error(`protobuf: (PBLink) wrong wireType (${ wireType }) for Hash`);\n      }\n      if (link.Name !== undefined) {\n        throw new Error('protobuf: (PBLink) invalid order, found Name before Hash');\n      }\n      if (link.Tsize !== undefined) {\n        throw new Error('protobuf: (PBLink) invalid order, found Tsize before Hash');\n      }\n      ;\n      [link.Hash, index] = decodeBytes(bytes, index);\n    } else if (fieldNum === 2) {\n      if (link.Name !== undefined) {\n        throw new Error('protobuf: (PBLink) duplicate Name section');\n      }\n      if (wireType !== 2) {\n        throw new Error(`protobuf: (PBLink) wrong wireType (${ wireType }) for Name`);\n      }\n      if (link.Tsize !== undefined) {\n        throw new Error('protobuf: (PBLink) invalid order, found Tsize before Name');\n      }\n      let byts;\n      [byts, index] = decodeBytes(bytes, index);\n      link.Name = textDecoder.decode(byts);\n    } else if (fieldNum === 3) {\n      if (link.Tsize !== undefined) {\n        throw new Error('protobuf: (PBLink) duplicate Tsize section');\n      }\n      if (wireType !== 0) {\n        throw new Error(`protobuf: (PBLink) wrong wireType (${ wireType }) for Tsize`);\n      }\n      ;\n      [link.Tsize, index] = decodeVarint(bytes, index);\n    } else {\n      throw new Error(`protobuf: (PBLink) invalid fieldNumber, expected 1, 2 or 3, got ${ fieldNum }`);\n    }\n  }\n  if (index > l) {\n    throw new Error('protobuf: (PBLink) unexpected end of data');\n  }\n  return link;\n}\nexport function decodeNode(bytes) {\n  const l = bytes.length;\n  let index = 0;\n  let links;\n  let linksBeforeData = false;\n  let data;\n  while (index < l) {\n    let wireType, fieldNum;\n    [wireType, fieldNum, index] = decodeKey(bytes, index);\n    if (wireType !== 2) {\n      throw new Error(`protobuf: (PBNode) invalid wireType, expected 2, got ${ wireType }`);\n    }\n    if (fieldNum === 1) {\n      if (data) {\n        throw new Error('protobuf: (PBNode) duplicate Data section');\n      }\n      ;\n      [data, index] = decodeBytes(bytes, index);\n      if (links) {\n        linksBeforeData = true;\n      }\n    } else if (fieldNum === 2) {\n      if (linksBeforeData) {\n        throw new Error('protobuf: (PBNode) duplicate Links section');\n      } else if (!links) {\n        links = [];\n      }\n      let byts;\n      [byts, index] = decodeBytes(bytes, index);\n      links.push(decodeLink(byts));\n    } else {\n      throw new Error(`protobuf: (PBNode) invalid fieldNumber, expected 1 or 2, got ${ fieldNum }`);\n    }\n  }\n  if (index > l) {\n    throw new Error('protobuf: (PBNode) unexpected end of data');\n  }\n  const node = {};\n  if (data) {\n    node.Data = data;\n  }\n  node.Links = links || [];\n  return node;\n}","const textEncoder = new TextEncoder();\nconst maxInt32 = 2 ** 32;\nconst maxUInt32 = 2 ** 31;\nfunction encodeLink(link, bytes) {\n  let i = bytes.length;\n  if (typeof link.Tsize === 'number') {\n    if (link.Tsize < 0) {\n      throw new Error('Tsize cannot be negative');\n    }\n    if (!Number.isSafeInteger(link.Tsize)) {\n      throw new Error('Tsize too large for encoding');\n    }\n    i = encodeVarint(bytes, i, link.Tsize) - 1;\n    bytes[i] = 24;\n  }\n  if (typeof link.Name === 'string') {\n    const nameBytes = textEncoder.encode(link.Name);\n    i -= nameBytes.length;\n    bytes.set(nameBytes, i);\n    i = encodeVarint(bytes, i, nameBytes.length) - 1;\n    bytes[i] = 18;\n  }\n  if (link.Hash) {\n    i -= link.Hash.length;\n    bytes.set(link.Hash, i);\n    i = encodeVarint(bytes, i, link.Hash.length) - 1;\n    bytes[i] = 10;\n  }\n  return bytes.length - i;\n}\nexport function encodeNode(node) {\n  const size = sizeNode(node);\n  const bytes = new Uint8Array(size);\n  let i = size;\n  if (node.Data) {\n    i -= node.Data.length;\n    bytes.set(node.Data, i);\n    i = encodeVarint(bytes, i, node.Data.length) - 1;\n    bytes[i] = 10;\n  }\n  if (node.Links) {\n    for (let index = node.Links.length - 1; index >= 0; index--) {\n      const size = encodeLink(node.Links[index], bytes.subarray(0, i));\n      i -= size;\n      i = encodeVarint(bytes, i, size) - 1;\n      bytes[i] = 18;\n    }\n  }\n  return bytes;\n}\nfunction sizeLink(link) {\n  let n = 0;\n  if (link.Hash) {\n    const l = link.Hash.length;\n    n += 1 + l + sov(l);\n  }\n  if (typeof link.Name === 'string') {\n    const l = textEncoder.encode(link.Name).length;\n    n += 1 + l + sov(l);\n  }\n  if (typeof link.Tsize === 'number') {\n    n += 1 + sov(link.Tsize);\n  }\n  return n;\n}\nfunction sizeNode(node) {\n  let n = 0;\n  if (node.Data) {\n    const l = node.Data.length;\n    n += 1 + l + sov(l);\n  }\n  if (node.Links) {\n    for (const link of node.Links) {\n      const l = sizeLink(link);\n      n += 1 + l + sov(l);\n    }\n  }\n  return n;\n}\nfunction encodeVarint(bytes, offset, v) {\n  offset -= sov(v);\n  const base = offset;\n  while (v >= maxUInt32) {\n    bytes[offset++] = v & 127 | 128;\n    v /= 128;\n  }\n  while (v >= 128) {\n    bytes[offset++] = v & 127 | 128;\n    v >>>= 7;\n  }\n  bytes[offset] = v;\n  return base;\n}\nfunction sov(x) {\n  if (x % 2 === 0) {\n    x++;\n  }\n  return Math.floor((len64(x) + 6) / 7);\n}\nfunction len64(x) {\n  let n = 0;\n  if (x >= maxInt32) {\n    x = Math.floor(x / maxInt32);\n    n = 32;\n  }\n  if (x >= 1 << 16) {\n    x >>>= 16;\n    n += 16;\n  }\n  if (x >= 1 << 8) {\n    x >>>= 8;\n    n += 8;\n  }\n  return n + len8tab[x];\n}\nconst len8tab = [\n  0,\n  1,\n  2,\n  2,\n  3,\n  3,\n  3,\n  3,\n  4,\n  4,\n  4,\n  4,\n  4,\n  4,\n  4,\n  4,\n  5,\n  5,\n  5,\n  5,\n  5,\n  5,\n  5,\n  5,\n  5,\n  5,\n  5,\n  5,\n  5,\n  5,\n  5,\n  5,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8\n];","import { CID } from 'multiformats/cid';\nconst pbNodeProperties = [\n  'Data',\n  'Links'\n];\nconst pbLinkProperties = [\n  'Hash',\n  'Name',\n  'Tsize'\n];\nconst textEncoder = new TextEncoder();\nfunction linkComparator(a, b) {\n  if (a === b) {\n    return 0;\n  }\n  const abuf = a.Name ? textEncoder.encode(a.Name) : [];\n  const bbuf = b.Name ? textEncoder.encode(b.Name) : [];\n  let x = abuf.length;\n  let y = bbuf.length;\n  for (let i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (abuf[i] !== bbuf[i]) {\n      x = abuf[i];\n      y = bbuf[i];\n      break;\n    }\n  }\n  return x < y ? -1 : y < x ? 1 : 0;\n}\nfunction hasOnlyProperties(node, properties) {\n  return !Object.keys(node).some(p => !properties.includes(p));\n}\nfunction asLink(link) {\n  if (typeof link.asCID === 'object') {\n    const Hash = CID.asCID(link);\n    if (!Hash) {\n      throw new TypeError('Invalid DAG-PB form');\n    }\n    return { Hash };\n  }\n  if (typeof link !== 'object' || Array.isArray(link)) {\n    throw new TypeError('Invalid DAG-PB form');\n  }\n  const pbl = {};\n  if (link.Hash) {\n    let cid = CID.asCID(link.Hash);\n    try {\n      if (!cid) {\n        if (typeof link.Hash === 'string') {\n          cid = CID.parse(link.Hash);\n        } else if (link.Hash instanceof Uint8Array) {\n          cid = CID.decode(link.Hash);\n        }\n      }\n    } catch (e) {\n      throw new TypeError(`Invalid DAG-PB form: ${ e.message }`);\n    }\n    if (cid) {\n      pbl.Hash = cid;\n    }\n  }\n  if (!pbl.Hash) {\n    throw new TypeError('Invalid DAG-PB form');\n  }\n  if (typeof link.Name === 'string') {\n    pbl.Name = link.Name;\n  }\n  if (typeof link.Tsize === 'number') {\n    pbl.Tsize = link.Tsize;\n  }\n  return pbl;\n}\nexport function prepare(node) {\n  if (node instanceof Uint8Array || typeof node === 'string') {\n    node = { Data: node };\n  }\n  if (typeof node !== 'object' || Array.isArray(node)) {\n    throw new TypeError('Invalid DAG-PB form');\n  }\n  const pbn = {};\n  if (node.Data !== undefined) {\n    if (typeof node.Data === 'string') {\n      pbn.Data = textEncoder.encode(node.Data);\n    } else if (node.Data instanceof Uint8Array) {\n      pbn.Data = node.Data;\n    } else {\n      throw new TypeError('Invalid DAG-PB form');\n    }\n  }\n  if (node.Links !== undefined) {\n    if (Array.isArray(node.Links)) {\n      pbn.Links = node.Links.map(asLink);\n      pbn.Links.sort(linkComparator);\n    } else {\n      throw new TypeError('Invalid DAG-PB form');\n    }\n  } else {\n    pbn.Links = [];\n  }\n  return pbn;\n}\nexport function validate(node) {\n  if (!node || typeof node !== 'object' || Array.isArray(node)) {\n    throw new TypeError('Invalid DAG-PB form');\n  }\n  if (!hasOnlyProperties(node, pbNodeProperties)) {\n    throw new TypeError('Invalid DAG-PB form (extraneous properties)');\n  }\n  if (node.Data !== undefined && !(node.Data instanceof Uint8Array)) {\n    throw new TypeError('Invalid DAG-PB form (Data must be a Uint8Array)');\n  }\n  if (!Array.isArray(node.Links)) {\n    throw new TypeError('Invalid DAG-PB form (Links must be an array)');\n  }\n  for (let i = 0; i < node.Links.length; i++) {\n    const link = node.Links[i];\n    if (!link || typeof link !== 'object' || Array.isArray(link)) {\n      throw new TypeError('Invalid DAG-PB form (bad link object)');\n    }\n    if (!hasOnlyProperties(link, pbLinkProperties)) {\n      throw new TypeError('Invalid DAG-PB form (extraneous properties on link object)');\n    }\n    if (!link.Hash) {\n      throw new TypeError('Invalid DAG-PB form (link must have a Hash)');\n    }\n    if (link.Hash.asCID !== link.Hash) {\n      throw new TypeError('Invalid DAG-PB form (link Hash must be a CID)');\n    }\n    if (link.Name !== undefined && typeof link.Name !== 'string') {\n      throw new TypeError('Invalid DAG-PB form (link Name must be a string)');\n    }\n    if (link.Tsize !== undefined && (typeof link.Tsize !== 'number' || link.Tsize % 1 !== 0)) {\n      throw new TypeError('Invalid DAG-PB form (link Tsize must be an integer)');\n    }\n    if (i > 0 && linkComparator(link, node.Links[i - 1]) === -1) {\n      throw new TypeError('Invalid DAG-PB form (links must be sorted by Name bytes)');\n    }\n  }\n}\nexport function createNode(data, links = []) {\n  return prepare({\n    Data: data,\n    Links: links\n  });\n}\nexport function createLink(name, size, cid) {\n  return asLink({\n    Hash: cid,\n    Name: name,\n    Tsize: size\n  });\n}","import { CID } from 'multiformats/cid';\nimport { decodeNode } from './pb-decode.js';\nimport { encodeNode } from './pb-encode.js';\nimport {\n  prepare,\n  validate,\n  createNode,\n  createLink\n} from './util.js';\nexport const name = 'dag-pb';\nexport const code = 112;\nexport function encode(node) {\n  validate(node);\n  const pbn = {};\n  if (node.Links) {\n    pbn.Links = node.Links.map(l => {\n      const link = {};\n      if (l.Hash) {\n        link.Hash = l.Hash.bytes;\n      }\n      if (l.Name !== undefined) {\n        link.Name = l.Name;\n      }\n      if (l.Tsize !== undefined) {\n        link.Tsize = l.Tsize;\n      }\n      return link;\n    });\n  }\n  if (node.Data) {\n    pbn.Data = node.Data;\n  }\n  return encodeNode(pbn);\n}\nexport function decode(bytes) {\n  const pbn = decodeNode(bytes);\n  const node = {};\n  if (pbn.Data) {\n    node.Data = pbn.Data;\n  }\n  if (pbn.Links) {\n    node.Links = pbn.Links.map(l => {\n      const link = {};\n      try {\n        link.Hash = CID.decode(l.Hash);\n      } catch (e) {\n      }\n      if (!link.Hash) {\n        throw new Error('Invalid Hash field found in link, expected CID');\n      }\n      if (l.Name !== undefined) {\n        link.Name = l.Name;\n      }\n      if (l.Tsize !== undefined) {\n        link.Tsize = l.Tsize;\n      }\n      return link;\n    });\n  }\n  return node;\n}\nexport {\n  prepare,\n  validate,\n  createNode,\n  createLink\n};","\"use strict\";\r\nmodule.exports = asPromise;\r\n\r\n/**\r\n * Callback as used by {@link util.asPromise}.\r\n * @typedef asPromiseCallback\r\n * @type {function}\r\n * @param {Error|null} error Error, if any\r\n * @param {...*} params Additional arguments\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Returns a promise from a node-style callback function.\r\n * @memberof util\r\n * @param {asPromiseCallback} fn Function to call\r\n * @param {*} ctx Function context\r\n * @param {...*} params Function arguments\r\n * @returns {Promise<*>} Promisified function\r\n */\r\nfunction asPromise(fn, ctx/*, varargs */) {\r\n    var params  = new Array(arguments.length - 1),\r\n        offset  = 0,\r\n        index   = 2,\r\n        pending = true;\r\n    while (index < arguments.length)\r\n        params[offset++] = arguments[index++];\r\n    return new Promise(function executor(resolve, reject) {\r\n        params[offset] = function callback(err/*, varargs */) {\r\n            if (pending) {\r\n                pending = false;\r\n                if (err)\r\n                    reject(err);\r\n                else {\r\n                    var params = new Array(arguments.length - 1),\r\n                        offset = 0;\r\n                    while (offset < params.length)\r\n                        params[offset++] = arguments[offset];\r\n                    resolve.apply(null, params);\r\n                }\r\n            }\r\n        };\r\n        try {\r\n            fn.apply(ctx || null, params);\r\n        } catch (err) {\r\n            if (pending) {\r\n                pending = false;\r\n                reject(err);\r\n            }\r\n        }\r\n    });\r\n}\r\n","\"use strict\";\r\n\r\n/**\r\n * A minimal base64 implementation for number arrays.\r\n * @memberof util\r\n * @namespace\r\n */\r\nvar base64 = exports;\r\n\r\n/**\r\n * Calculates the byte length of a base64 encoded string.\r\n * @param {string} string Base64 encoded string\r\n * @returns {number} Byte length\r\n */\r\nbase64.length = function length(string) {\r\n    var p = string.length;\r\n    if (!p)\r\n        return 0;\r\n    var n = 0;\r\n    while (--p % 4 > 1 && string.charAt(p) === \"=\")\r\n        ++n;\r\n    return Math.ceil(string.length * 3) / 4 - n;\r\n};\r\n\r\n// Base64 encoding table\r\nvar b64 = new Array(64);\r\n\r\n// Base64 decoding table\r\nvar s64 = new Array(123);\r\n\r\n// 65..90, 97..122, 48..57, 43, 47\r\nfor (var i = 0; i < 64;)\r\n    s64[b64[i] = i < 26 ? i + 65 : i < 52 ? i + 71 : i < 62 ? i - 4 : i - 59 | 43] = i++;\r\n\r\n/**\r\n * Encodes a buffer to a base64 encoded string.\r\n * @param {Uint8Array} buffer Source buffer\r\n * @param {number} start Source start\r\n * @param {number} end Source end\r\n * @returns {string} Base64 encoded string\r\n */\r\nbase64.encode = function encode(buffer, start, end) {\r\n    var parts = null,\r\n        chunk = [];\r\n    var i = 0, // output index\r\n        j = 0, // goto index\r\n        t;     // temporary\r\n    while (start < end) {\r\n        var b = buffer[start++];\r\n        switch (j) {\r\n            case 0:\r\n                chunk[i++] = b64[b >> 2];\r\n                t = (b & 3) << 4;\r\n                j = 1;\r\n                break;\r\n            case 1:\r\n                chunk[i++] = b64[t | b >> 4];\r\n                t = (b & 15) << 2;\r\n                j = 2;\r\n                break;\r\n            case 2:\r\n                chunk[i++] = b64[t | b >> 6];\r\n                chunk[i++] = b64[b & 63];\r\n                j = 0;\r\n                break;\r\n        }\r\n        if (i > 8191) {\r\n            (parts || (parts = [])).push(String.fromCharCode.apply(String, chunk));\r\n            i = 0;\r\n        }\r\n    }\r\n    if (j) {\r\n        chunk[i++] = b64[t];\r\n        chunk[i++] = 61;\r\n        if (j === 1)\r\n            chunk[i++] = 61;\r\n    }\r\n    if (parts) {\r\n        if (i)\r\n            parts.push(String.fromCharCode.apply(String, chunk.slice(0, i)));\r\n        return parts.join(\"\");\r\n    }\r\n    return String.fromCharCode.apply(String, chunk.slice(0, i));\r\n};\r\n\r\nvar invalidEncoding = \"invalid encoding\";\r\n\r\n/**\r\n * Decodes a base64 encoded string to a buffer.\r\n * @param {string} string Source string\r\n * @param {Uint8Array} buffer Destination buffer\r\n * @param {number} offset Destination offset\r\n * @returns {number} Number of bytes written\r\n * @throws {Error} If encoding is invalid\r\n */\r\nbase64.decode = function decode(string, buffer, offset) {\r\n    var start = offset;\r\n    var j = 0, // goto index\r\n        t;     // temporary\r\n    for (var i = 0; i < string.length;) {\r\n        var c = string.charCodeAt(i++);\r\n        if (c === 61 && j > 1)\r\n            break;\r\n        if ((c = s64[c]) === undefined)\r\n            throw Error(invalidEncoding);\r\n        switch (j) {\r\n            case 0:\r\n                t = c;\r\n                j = 1;\r\n                break;\r\n            case 1:\r\n                buffer[offset++] = t << 2 | (c & 48) >> 4;\r\n                t = c;\r\n                j = 2;\r\n                break;\r\n            case 2:\r\n                buffer[offset++] = (t & 15) << 4 | (c & 60) >> 2;\r\n                t = c;\r\n                j = 3;\r\n                break;\r\n            case 3:\r\n                buffer[offset++] = (t & 3) << 6 | c;\r\n                j = 0;\r\n                break;\r\n        }\r\n    }\r\n    if (j === 1)\r\n        throw Error(invalidEncoding);\r\n    return offset - start;\r\n};\r\n\r\n/**\r\n * Tests if the specified string appears to be base64 encoded.\r\n * @param {string} string String to test\r\n * @returns {boolean} `true` if probably base64 encoded, otherwise false\r\n */\r\nbase64.test = function test(string) {\r\n    return /^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$/.test(string);\r\n};\r\n","\"use strict\";\r\nmodule.exports = EventEmitter;\r\n\r\n/**\r\n * Constructs a new event emitter instance.\r\n * @classdesc A minimal event emitter.\r\n * @memberof util\r\n * @constructor\r\n */\r\nfunction EventEmitter() {\r\n\r\n    /**\r\n     * Registered listeners.\r\n     * @type {Object.<string,*>}\r\n     * @private\r\n     */\r\n    this._listeners = {};\r\n}\r\n\r\n/**\r\n * Registers an event listener.\r\n * @param {string} evt Event name\r\n * @param {function} fn Listener\r\n * @param {*} [ctx] Listener context\r\n * @returns {util.EventEmitter} `this`\r\n */\r\nEventEmitter.prototype.on = function on(evt, fn, ctx) {\r\n    (this._listeners[evt] || (this._listeners[evt] = [])).push({\r\n        fn  : fn,\r\n        ctx : ctx || this\r\n    });\r\n    return this;\r\n};\r\n\r\n/**\r\n * Removes an event listener or any matching listeners if arguments are omitted.\r\n * @param {string} [evt] Event name. Removes all listeners if omitted.\r\n * @param {function} [fn] Listener to remove. Removes all listeners of `evt` if omitted.\r\n * @returns {util.EventEmitter} `this`\r\n */\r\nEventEmitter.prototype.off = function off(evt, fn) {\r\n    if (evt === undefined)\r\n        this._listeners = {};\r\n    else {\r\n        if (fn === undefined)\r\n            this._listeners[evt] = [];\r\n        else {\r\n            var listeners = this._listeners[evt];\r\n            for (var i = 0; i < listeners.length;)\r\n                if (listeners[i].fn === fn)\r\n                    listeners.splice(i, 1);\r\n                else\r\n                    ++i;\r\n        }\r\n    }\r\n    return this;\r\n};\r\n\r\n/**\r\n * Emits an event by calling its listeners with the specified arguments.\r\n * @param {string} evt Event name\r\n * @param {...*} args Arguments\r\n * @returns {util.EventEmitter} `this`\r\n */\r\nEventEmitter.prototype.emit = function emit(evt) {\r\n    var listeners = this._listeners[evt];\r\n    if (listeners) {\r\n        var args = [],\r\n            i = 1;\r\n        for (; i < arguments.length;)\r\n            args.push(arguments[i++]);\r\n        for (i = 0; i < listeners.length;)\r\n            listeners[i].fn.apply(listeners[i++].ctx, args);\r\n    }\r\n    return this;\r\n};\r\n","\"use strict\";\r\n\r\nmodule.exports = factory(factory);\r\n\r\n/**\r\n * Reads / writes floats / doubles from / to buffers.\r\n * @name util.float\r\n * @namespace\r\n */\r\n\r\n/**\r\n * Writes a 32 bit float to a buffer using little endian byte order.\r\n * @name util.float.writeFloatLE\r\n * @function\r\n * @param {number} val Value to write\r\n * @param {Uint8Array} buf Target buffer\r\n * @param {number} pos Target buffer offset\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Writes a 32 bit float to a buffer using big endian byte order.\r\n * @name util.float.writeFloatBE\r\n * @function\r\n * @param {number} val Value to write\r\n * @param {Uint8Array} buf Target buffer\r\n * @param {number} pos Target buffer offset\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Reads a 32 bit float from a buffer using little endian byte order.\r\n * @name util.float.readFloatLE\r\n * @function\r\n * @param {Uint8Array} buf Source buffer\r\n * @param {number} pos Source buffer offset\r\n * @returns {number} Value read\r\n */\r\n\r\n/**\r\n * Reads a 32 bit float from a buffer using big endian byte order.\r\n * @name util.float.readFloatBE\r\n * @function\r\n * @param {Uint8Array} buf Source buffer\r\n * @param {number} pos Source buffer offset\r\n * @returns {number} Value read\r\n */\r\n\r\n/**\r\n * Writes a 64 bit double to a buffer using little endian byte order.\r\n * @name util.float.writeDoubleLE\r\n * @function\r\n * @param {number} val Value to write\r\n * @param {Uint8Array} buf Target buffer\r\n * @param {number} pos Target buffer offset\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Writes a 64 bit double to a buffer using big endian byte order.\r\n * @name util.float.writeDoubleBE\r\n * @function\r\n * @param {number} val Value to write\r\n * @param {Uint8Array} buf Target buffer\r\n * @param {number} pos Target buffer offset\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Reads a 64 bit double from a buffer using little endian byte order.\r\n * @name util.float.readDoubleLE\r\n * @function\r\n * @param {Uint8Array} buf Source buffer\r\n * @param {number} pos Source buffer offset\r\n * @returns {number} Value read\r\n */\r\n\r\n/**\r\n * Reads a 64 bit double from a buffer using big endian byte order.\r\n * @name util.float.readDoubleBE\r\n * @function\r\n * @param {Uint8Array} buf Source buffer\r\n * @param {number} pos Source buffer offset\r\n * @returns {number} Value read\r\n */\r\n\r\n// Factory function for the purpose of node-based testing in modified global environments\r\nfunction factory(exports) {\r\n\r\n    // float: typed array\r\n    if (typeof Float32Array !== \"undefined\") (function() {\r\n\r\n        var f32 = new Float32Array([ -0 ]),\r\n            f8b = new Uint8Array(f32.buffer),\r\n            le  = f8b[3] === 128;\r\n\r\n        function writeFloat_f32_cpy(val, buf, pos) {\r\n            f32[0] = val;\r\n            buf[pos    ] = f8b[0];\r\n            buf[pos + 1] = f8b[1];\r\n            buf[pos + 2] = f8b[2];\r\n            buf[pos + 3] = f8b[3];\r\n        }\r\n\r\n        function writeFloat_f32_rev(val, buf, pos) {\r\n            f32[0] = val;\r\n            buf[pos    ] = f8b[3];\r\n            buf[pos + 1] = f8b[2];\r\n            buf[pos + 2] = f8b[1];\r\n            buf[pos + 3] = f8b[0];\r\n        }\r\n\r\n        /* istanbul ignore next */\r\n        exports.writeFloatLE = le ? writeFloat_f32_cpy : writeFloat_f32_rev;\r\n        /* istanbul ignore next */\r\n        exports.writeFloatBE = le ? writeFloat_f32_rev : writeFloat_f32_cpy;\r\n\r\n        function readFloat_f32_cpy(buf, pos) {\r\n            f8b[0] = buf[pos    ];\r\n            f8b[1] = buf[pos + 1];\r\n            f8b[2] = buf[pos + 2];\r\n            f8b[3] = buf[pos + 3];\r\n            return f32[0];\r\n        }\r\n\r\n        function readFloat_f32_rev(buf, pos) {\r\n            f8b[3] = buf[pos    ];\r\n            f8b[2] = buf[pos + 1];\r\n            f8b[1] = buf[pos + 2];\r\n            f8b[0] = buf[pos + 3];\r\n            return f32[0];\r\n        }\r\n\r\n        /* istanbul ignore next */\r\n        exports.readFloatLE = le ? readFloat_f32_cpy : readFloat_f32_rev;\r\n        /* istanbul ignore next */\r\n        exports.readFloatBE = le ? readFloat_f32_rev : readFloat_f32_cpy;\r\n\r\n    // float: ieee754\r\n    })(); else (function() {\r\n\r\n        function writeFloat_ieee754(writeUint, val, buf, pos) {\r\n            var sign = val < 0 ? 1 : 0;\r\n            if (sign)\r\n                val = -val;\r\n            if (val === 0)\r\n                writeUint(1 / val > 0 ? /* positive */ 0 : /* negative 0 */ 2147483648, buf, pos);\r\n            else if (isNaN(val))\r\n                writeUint(2143289344, buf, pos);\r\n            else if (val > 3.4028234663852886e+38) // +-Infinity\r\n                writeUint((sign << 31 | 2139095040) >>> 0, buf, pos);\r\n            else if (val < 1.1754943508222875e-38) // denormal\r\n                writeUint((sign << 31 | Math.round(val / 1.401298464324817e-45)) >>> 0, buf, pos);\r\n            else {\r\n                var exponent = Math.floor(Math.log(val) / Math.LN2),\r\n                    mantissa = Math.round(val * Math.pow(2, -exponent) * 8388608) & 8388607;\r\n                writeUint((sign << 31 | exponent + 127 << 23 | mantissa) >>> 0, buf, pos);\r\n            }\r\n        }\r\n\r\n        exports.writeFloatLE = writeFloat_ieee754.bind(null, writeUintLE);\r\n        exports.writeFloatBE = writeFloat_ieee754.bind(null, writeUintBE);\r\n\r\n        function readFloat_ieee754(readUint, buf, pos) {\r\n            var uint = readUint(buf, pos),\r\n                sign = (uint >> 31) * 2 + 1,\r\n                exponent = uint >>> 23 & 255,\r\n                mantissa = uint & 8388607;\r\n            return exponent === 255\r\n                ? mantissa\r\n                ? NaN\r\n                : sign * Infinity\r\n                : exponent === 0 // denormal\r\n                ? sign * 1.401298464324817e-45 * mantissa\r\n                : sign * Math.pow(2, exponent - 150) * (mantissa + 8388608);\r\n        }\r\n\r\n        exports.readFloatLE = readFloat_ieee754.bind(null, readUintLE);\r\n        exports.readFloatBE = readFloat_ieee754.bind(null, readUintBE);\r\n\r\n    })();\r\n\r\n    // double: typed array\r\n    if (typeof Float64Array !== \"undefined\") (function() {\r\n\r\n        var f64 = new Float64Array([-0]),\r\n            f8b = new Uint8Array(f64.buffer),\r\n            le  = f8b[7] === 128;\r\n\r\n        function writeDouble_f64_cpy(val, buf, pos) {\r\n            f64[0] = val;\r\n            buf[pos    ] = f8b[0];\r\n            buf[pos + 1] = f8b[1];\r\n            buf[pos + 2] = f8b[2];\r\n            buf[pos + 3] = f8b[3];\r\n            buf[pos + 4] = f8b[4];\r\n            buf[pos + 5] = f8b[5];\r\n            buf[pos + 6] = f8b[6];\r\n            buf[pos + 7] = f8b[7];\r\n        }\r\n\r\n        function writeDouble_f64_rev(val, buf, pos) {\r\n            f64[0] = val;\r\n            buf[pos    ] = f8b[7];\r\n            buf[pos + 1] = f8b[6];\r\n            buf[pos + 2] = f8b[5];\r\n            buf[pos + 3] = f8b[4];\r\n            buf[pos + 4] = f8b[3];\r\n            buf[pos + 5] = f8b[2];\r\n            buf[pos + 6] = f8b[1];\r\n            buf[pos + 7] = f8b[0];\r\n        }\r\n\r\n        /* istanbul ignore next */\r\n        exports.writeDoubleLE = le ? writeDouble_f64_cpy : writeDouble_f64_rev;\r\n        /* istanbul ignore next */\r\n        exports.writeDoubleBE = le ? writeDouble_f64_rev : writeDouble_f64_cpy;\r\n\r\n        function readDouble_f64_cpy(buf, pos) {\r\n            f8b[0] = buf[pos    ];\r\n            f8b[1] = buf[pos + 1];\r\n            f8b[2] = buf[pos + 2];\r\n            f8b[3] = buf[pos + 3];\r\n            f8b[4] = buf[pos + 4];\r\n            f8b[5] = buf[pos + 5];\r\n            f8b[6] = buf[pos + 6];\r\n            f8b[7] = buf[pos + 7];\r\n            return f64[0];\r\n        }\r\n\r\n        function readDouble_f64_rev(buf, pos) {\r\n            f8b[7] = buf[pos    ];\r\n            f8b[6] = buf[pos + 1];\r\n            f8b[5] = buf[pos + 2];\r\n            f8b[4] = buf[pos + 3];\r\n            f8b[3] = buf[pos + 4];\r\n            f8b[2] = buf[pos + 5];\r\n            f8b[1] = buf[pos + 6];\r\n            f8b[0] = buf[pos + 7];\r\n            return f64[0];\r\n        }\r\n\r\n        /* istanbul ignore next */\r\n        exports.readDoubleLE = le ? readDouble_f64_cpy : readDouble_f64_rev;\r\n        /* istanbul ignore next */\r\n        exports.readDoubleBE = le ? readDouble_f64_rev : readDouble_f64_cpy;\r\n\r\n    // double: ieee754\r\n    })(); else (function() {\r\n\r\n        function writeDouble_ieee754(writeUint, off0, off1, val, buf, pos) {\r\n            var sign = val < 0 ? 1 : 0;\r\n            if (sign)\r\n                val = -val;\r\n            if (val === 0) {\r\n                writeUint(0, buf, pos + off0);\r\n                writeUint(1 / val > 0 ? /* positive */ 0 : /* negative 0 */ 2147483648, buf, pos + off1);\r\n            } else if (isNaN(val)) {\r\n                writeUint(0, buf, pos + off0);\r\n                writeUint(2146959360, buf, pos + off1);\r\n            } else if (val > 1.7976931348623157e+308) { // +-Infinity\r\n                writeUint(0, buf, pos + off0);\r\n                writeUint((sign << 31 | 2146435072) >>> 0, buf, pos + off1);\r\n            } else {\r\n                var mantissa;\r\n                if (val < 2.2250738585072014e-308) { // denormal\r\n                    mantissa = val / 5e-324;\r\n                    writeUint(mantissa >>> 0, buf, pos + off0);\r\n                    writeUint((sign << 31 | mantissa / 4294967296) >>> 0, buf, pos + off1);\r\n                } else {\r\n                    var exponent = Math.floor(Math.log(val) / Math.LN2);\r\n                    if (exponent === 1024)\r\n                        exponent = 1023;\r\n                    mantissa = val * Math.pow(2, -exponent);\r\n                    writeUint(mantissa * 4503599627370496 >>> 0, buf, pos + off0);\r\n                    writeUint((sign << 31 | exponent + 1023 << 20 | mantissa * 1048576 & 1048575) >>> 0, buf, pos + off1);\r\n                }\r\n            }\r\n        }\r\n\r\n        exports.writeDoubleLE = writeDouble_ieee754.bind(null, writeUintLE, 0, 4);\r\n        exports.writeDoubleBE = writeDouble_ieee754.bind(null, writeUintBE, 4, 0);\r\n\r\n        function readDouble_ieee754(readUint, off0, off1, buf, pos) {\r\n            var lo = readUint(buf, pos + off0),\r\n                hi = readUint(buf, pos + off1);\r\n            var sign = (hi >> 31) * 2 + 1,\r\n                exponent = hi >>> 20 & 2047,\r\n                mantissa = 4294967296 * (hi & 1048575) + lo;\r\n            return exponent === 2047\r\n                ? mantissa\r\n                ? NaN\r\n                : sign * Infinity\r\n                : exponent === 0 // denormal\r\n                ? sign * 5e-324 * mantissa\r\n                : sign * Math.pow(2, exponent - 1075) * (mantissa + 4503599627370496);\r\n        }\r\n\r\n        exports.readDoubleLE = readDouble_ieee754.bind(null, readUintLE, 0, 4);\r\n        exports.readDoubleBE = readDouble_ieee754.bind(null, readUintBE, 4, 0);\r\n\r\n    })();\r\n\r\n    return exports;\r\n}\r\n\r\n// uint helpers\r\n\r\nfunction writeUintLE(val, buf, pos) {\r\n    buf[pos    ] =  val        & 255;\r\n    buf[pos + 1] =  val >>> 8  & 255;\r\n    buf[pos + 2] =  val >>> 16 & 255;\r\n    buf[pos + 3] =  val >>> 24;\r\n}\r\n\r\nfunction writeUintBE(val, buf, pos) {\r\n    buf[pos    ] =  val >>> 24;\r\n    buf[pos + 1] =  val >>> 16 & 255;\r\n    buf[pos + 2] =  val >>> 8  & 255;\r\n    buf[pos + 3] =  val        & 255;\r\n}\r\n\r\nfunction readUintLE(buf, pos) {\r\n    return (buf[pos    ]\r\n          | buf[pos + 1] << 8\r\n          | buf[pos + 2] << 16\r\n          | buf[pos + 3] << 24) >>> 0;\r\n}\r\n\r\nfunction readUintBE(buf, pos) {\r\n    return (buf[pos    ] << 24\r\n          | buf[pos + 1] << 16\r\n          | buf[pos + 2] << 8\r\n          | buf[pos + 3]) >>> 0;\r\n}\r\n","\"use strict\";\r\nmodule.exports = inquire;\r\n\r\n/**\r\n * Requires a module only if available.\r\n * @memberof util\r\n * @param {string} moduleName Module to require\r\n * @returns {?Object} Required module if available and not empty, otherwise `null`\r\n */\r\nfunction inquire(moduleName) {\r\n    try {\r\n        var mod = eval(\"quire\".replace(/^/,\"re\"))(moduleName); // eslint-disable-line no-eval\r\n        if (mod && (mod.length || Object.keys(mod).length))\r\n            return mod;\r\n    } catch (e) {} // eslint-disable-line no-empty\r\n    return null;\r\n}\r\n","\"use strict\";\r\n\r\n/**\r\n * A minimal UTF8 implementation for number arrays.\r\n * @memberof util\r\n * @namespace\r\n */\r\nvar utf8 = exports;\r\n\r\n/**\r\n * Calculates the UTF8 byte length of a string.\r\n * @param {string} string String\r\n * @returns {number} Byte length\r\n */\r\nutf8.length = function utf8_length(string) {\r\n    var len = 0,\r\n        c = 0;\r\n    for (var i = 0; i < string.length; ++i) {\r\n        c = string.charCodeAt(i);\r\n        if (c < 128)\r\n            len += 1;\r\n        else if (c < 2048)\r\n            len += 2;\r\n        else if ((c & 0xFC00) === 0xD800 && (string.charCodeAt(i + 1) & 0xFC00) === 0xDC00) {\r\n            ++i;\r\n            len += 4;\r\n        } else\r\n            len += 3;\r\n    }\r\n    return len;\r\n};\r\n\r\n/**\r\n * Reads UTF8 bytes as a string.\r\n * @param {Uint8Array} buffer Source buffer\r\n * @param {number} start Source start\r\n * @param {number} end Source end\r\n * @returns {string} String read\r\n */\r\nutf8.read = function utf8_read(buffer, start, end) {\r\n    var len = end - start;\r\n    if (len < 1)\r\n        return \"\";\r\n    var parts = null,\r\n        chunk = [],\r\n        i = 0, // char offset\r\n        t;     // temporary\r\n    while (start < end) {\r\n        t = buffer[start++];\r\n        if (t < 128)\r\n            chunk[i++] = t;\r\n        else if (t > 191 && t < 224)\r\n            chunk[i++] = (t & 31) << 6 | buffer[start++] & 63;\r\n        else if (t > 239 && t < 365) {\r\n            t = ((t & 7) << 18 | (buffer[start++] & 63) << 12 | (buffer[start++] & 63) << 6 | buffer[start++] & 63) - 0x10000;\r\n            chunk[i++] = 0xD800 + (t >> 10);\r\n            chunk[i++] = 0xDC00 + (t & 1023);\r\n        } else\r\n            chunk[i++] = (t & 15) << 12 | (buffer[start++] & 63) << 6 | buffer[start++] & 63;\r\n        if (i > 8191) {\r\n            (parts || (parts = [])).push(String.fromCharCode.apply(String, chunk));\r\n            i = 0;\r\n        }\r\n    }\r\n    if (parts) {\r\n        if (i)\r\n            parts.push(String.fromCharCode.apply(String, chunk.slice(0, i)));\r\n        return parts.join(\"\");\r\n    }\r\n    return String.fromCharCode.apply(String, chunk.slice(0, i));\r\n};\r\n\r\n/**\r\n * Writes a string as UTF8 bytes.\r\n * @param {string} string Source string\r\n * @param {Uint8Array} buffer Destination buffer\r\n * @param {number} offset Destination offset\r\n * @returns {number} Bytes written\r\n */\r\nutf8.write = function utf8_write(string, buffer, offset) {\r\n    var start = offset,\r\n        c1, // character 1\r\n        c2; // character 2\r\n    for (var i = 0; i < string.length; ++i) {\r\n        c1 = string.charCodeAt(i);\r\n        if (c1 < 128) {\r\n            buffer[offset++] = c1;\r\n        } else if (c1 < 2048) {\r\n            buffer[offset++] = c1 >> 6       | 192;\r\n            buffer[offset++] = c1       & 63 | 128;\r\n        } else if ((c1 & 0xFC00) === 0xD800 && ((c2 = string.charCodeAt(i + 1)) & 0xFC00) === 0xDC00) {\r\n            c1 = 0x10000 + ((c1 & 0x03FF) << 10) + (c2 & 0x03FF);\r\n            ++i;\r\n            buffer[offset++] = c1 >> 18      | 240;\r\n            buffer[offset++] = c1 >> 12 & 63 | 128;\r\n            buffer[offset++] = c1 >> 6  & 63 | 128;\r\n            buffer[offset++] = c1       & 63 | 128;\r\n        } else {\r\n            buffer[offset++] = c1 >> 12      | 224;\r\n            buffer[offset++] = c1 >> 6  & 63 | 128;\r\n            buffer[offset++] = c1       & 63 | 128;\r\n        }\r\n    }\r\n    return offset - start;\r\n};\r\n","\"use strict\";\r\nmodule.exports = pool;\r\n\r\n/**\r\n * An allocator as used by {@link util.pool}.\r\n * @typedef PoolAllocator\r\n * @type {function}\r\n * @param {number} size Buffer size\r\n * @returns {Uint8Array} Buffer\r\n */\r\n\r\n/**\r\n * A slicer as used by {@link util.pool}.\r\n * @typedef PoolSlicer\r\n * @type {function}\r\n * @param {number} start Start offset\r\n * @param {number} end End offset\r\n * @returns {Uint8Array} Buffer slice\r\n * @this {Uint8Array}\r\n */\r\n\r\n/**\r\n * A general purpose buffer pool.\r\n * @memberof util\r\n * @function\r\n * @param {PoolAllocator} alloc Allocator\r\n * @param {PoolSlicer} slice Slicer\r\n * @param {number} [size=8192] Slab size\r\n * @returns {PoolAllocator} Pooled allocator\r\n */\r\nfunction pool(alloc, slice, size) {\r\n    var SIZE   = size || 8192;\r\n    var MAX    = SIZE >>> 1;\r\n    var slab   = null;\r\n    var offset = SIZE;\r\n    return function pool_alloc(size) {\r\n        if (size < 1 || size > MAX)\r\n            return alloc(size);\r\n        if (offset + size > SIZE) {\r\n            slab = alloc(SIZE);\r\n            offset = 0;\r\n        }\r\n        var buf = slice.call(slab, offset, offset += size);\r\n        if (offset & 7) // align to 32 bit\r\n            offset = (offset | 7) + 1;\r\n        return buf;\r\n    };\r\n}\r\n","\"use strict\";\nmodule.exports = LongBits;\n\nvar util = require(\"../util/minimal\");\n\n/**\n * Constructs new long bits.\n * @classdesc Helper class for working with the low and high bits of a 64 bit value.\n * @memberof util\n * @constructor\n * @param {number} lo Low 32 bits, unsigned\n * @param {number} hi High 32 bits, unsigned\n */\nfunction LongBits(lo, hi) {\n\n    // note that the casts below are theoretically unnecessary as of today, but older statically\n    // generated converter code might still call the ctor with signed 32bits. kept for compat.\n\n    /**\n     * Low bits.\n     * @type {number}\n     */\n    this.lo = lo >>> 0;\n\n    /**\n     * High bits.\n     * @type {number}\n     */\n    this.hi = hi >>> 0;\n}\n\n/**\n * Zero bits.\n * @memberof util.LongBits\n * @type {util.LongBits}\n */\nvar zero = LongBits.zero = new LongBits(0, 0);\n\nzero.toNumber = function() { return 0; };\nzero.zzEncode = zero.zzDecode = function() { return this; };\nzero.length = function() { return 1; };\n\n/**\n * Zero hash.\n * @memberof util.LongBits\n * @type {string}\n */\nvar zeroHash = LongBits.zeroHash = \"\\0\\0\\0\\0\\0\\0\\0\\0\";\n\n/**\n * Constructs new long bits from the specified number.\n * @param {number} value Value\n * @returns {util.LongBits} Instance\n */\nLongBits.fromNumber = function fromNumber(value) {\n    if (value === 0)\n        return zero;\n    var sign = value < 0;\n    if (sign)\n        value = -value;\n    var lo = value >>> 0,\n        hi = (value - lo) / 4294967296 >>> 0;\n    if (sign) {\n        hi = ~hi >>> 0;\n        lo = ~lo >>> 0;\n        if (++lo > 4294967295) {\n            lo = 0;\n            if (++hi > 4294967295)\n                hi = 0;\n        }\n    }\n    return new LongBits(lo, hi);\n};\n\n/**\n * Constructs new long bits from a number, long or string.\n * @param {Long|number|string} value Value\n * @returns {util.LongBits} Instance\n */\nLongBits.from = function from(value) {\n    if (typeof value === \"number\")\n        return LongBits.fromNumber(value);\n    if (util.isString(value)) {\n        /* istanbul ignore else */\n        if (util.Long)\n            value = util.Long.fromString(value);\n        else\n            return LongBits.fromNumber(parseInt(value, 10));\n    }\n    return value.low || value.high ? new LongBits(value.low >>> 0, value.high >>> 0) : zero;\n};\n\n/**\n * Converts this long bits to a possibly unsafe JavaScript number.\n * @param {boolean} [unsigned=false] Whether unsigned or not\n * @returns {number} Possibly unsafe number\n */\nLongBits.prototype.toNumber = function toNumber(unsigned) {\n    if (!unsigned && this.hi >>> 31) {\n        var lo = ~this.lo + 1 >>> 0,\n            hi = ~this.hi     >>> 0;\n        if (!lo)\n            hi = hi + 1 >>> 0;\n        return -(lo + hi * 4294967296);\n    }\n    return this.lo + this.hi * 4294967296;\n};\n\n/**\n * Converts this long bits to a long.\n * @param {boolean} [unsigned=false] Whether unsigned or not\n * @returns {Long} Long\n */\nLongBits.prototype.toLong = function toLong(unsigned) {\n    return util.Long\n        ? new util.Long(this.lo | 0, this.hi | 0, Boolean(unsigned))\n        /* istanbul ignore next */\n        : { low: this.lo | 0, high: this.hi | 0, unsigned: Boolean(unsigned) };\n};\n\nvar charCodeAt = String.prototype.charCodeAt;\n\n/**\n * Constructs new long bits from the specified 8 characters long hash.\n * @param {string} hash Hash\n * @returns {util.LongBits} Bits\n */\nLongBits.fromHash = function fromHash(hash) {\n    if (hash === zeroHash)\n        return zero;\n    return new LongBits(\n        ( charCodeAt.call(hash, 0)\n        | charCodeAt.call(hash, 1) << 8\n        | charCodeAt.call(hash, 2) << 16\n        | charCodeAt.call(hash, 3) << 24) >>> 0\n    ,\n        ( charCodeAt.call(hash, 4)\n        | charCodeAt.call(hash, 5) << 8\n        | charCodeAt.call(hash, 6) << 16\n        | charCodeAt.call(hash, 7) << 24) >>> 0\n    );\n};\n\n/**\n * Converts this long bits to a 8 characters long hash.\n * @returns {string} Hash\n */\nLongBits.prototype.toHash = function toHash() {\n    return String.fromCharCode(\n        this.lo        & 255,\n        this.lo >>> 8  & 255,\n        this.lo >>> 16 & 255,\n        this.lo >>> 24      ,\n        this.hi        & 255,\n        this.hi >>> 8  & 255,\n        this.hi >>> 16 & 255,\n        this.hi >>> 24\n    );\n};\n\n/**\n * Zig-zag encodes this long bits.\n * @returns {util.LongBits} `this`\n */\nLongBits.prototype.zzEncode = function zzEncode() {\n    var mask =   this.hi >> 31;\n    this.hi  = ((this.hi << 1 | this.lo >>> 31) ^ mask) >>> 0;\n    this.lo  = ( this.lo << 1                   ^ mask) >>> 0;\n    return this;\n};\n\n/**\n * Zig-zag decodes this long bits.\n * @returns {util.LongBits} `this`\n */\nLongBits.prototype.zzDecode = function zzDecode() {\n    var mask = -(this.lo & 1);\n    this.lo  = ((this.lo >>> 1 | this.hi << 31) ^ mask) >>> 0;\n    this.hi  = ( this.hi >>> 1                  ^ mask) >>> 0;\n    return this;\n};\n\n/**\n * Calculates the length of this longbits when encoded as a varint.\n * @returns {number} Length\n */\nLongBits.prototype.length = function length() {\n    var part0 =  this.lo,\n        part1 = (this.lo >>> 28 | this.hi << 4) >>> 0,\n        part2 =  this.hi >>> 24;\n    return part2 === 0\n         ? part1 === 0\n           ? part0 < 16384\n             ? part0 < 128 ? 1 : 2\n             : part0 < 2097152 ? 3 : 4\n           : part1 < 16384\n             ? part1 < 128 ? 5 : 6\n             : part1 < 2097152 ? 7 : 8\n         : part2 < 128 ? 9 : 10;\n};\n","\"use strict\";\nvar util = exports;\n\n// used to return a Promise where callback is omitted\nutil.asPromise = require(\"@protobufjs/aspromise\");\n\n// converts to / from base64 encoded strings\nutil.base64 = require(\"@protobufjs/base64\");\n\n// base class of rpc.Service\nutil.EventEmitter = require(\"@protobufjs/eventemitter\");\n\n// float handling accross browsers\nutil.float = require(\"@protobufjs/float\");\n\n// requires modules optionally and hides the call from bundlers\nutil.inquire = require(\"@protobufjs/inquire\");\n\n// converts to / from utf8 encoded strings\nutil.utf8 = require(\"@protobufjs/utf8\");\n\n// provides a node-like buffer pool in the browser\nutil.pool = require(\"@protobufjs/pool\");\n\n// utility to work with the low and high bits of a 64 bit value\nutil.LongBits = require(\"./longbits\");\n\n/**\n * Whether running within node or not.\n * @memberof util\n * @type {boolean}\n */\nutil.isNode = Boolean(typeof global !== \"undefined\"\n                   && global\n                   && global.process\n                   && global.process.versions\n                   && global.process.versions.node);\n\n/**\n * Global object reference.\n * @memberof util\n * @type {Object}\n */\nutil.global = util.isNode && global\n           || typeof window !== \"undefined\" && window\n           || typeof self   !== \"undefined\" && self\n           || this; // eslint-disable-line no-invalid-this\n\n/**\n * An immuable empty array.\n * @memberof util\n * @type {Array.<*>}\n * @const\n */\nutil.emptyArray = Object.freeze ? Object.freeze([]) : /* istanbul ignore next */ []; // used on prototypes\n\n/**\n * An immutable empty object.\n * @type {Object}\n * @const\n */\nutil.emptyObject = Object.freeze ? Object.freeze({}) : /* istanbul ignore next */ {}; // used on prototypes\n\n/**\n * Tests if the specified value is an integer.\n * @function\n * @param {*} value Value to test\n * @returns {boolean} `true` if the value is an integer\n */\nutil.isInteger = Number.isInteger || /* istanbul ignore next */ function isInteger(value) {\n    return typeof value === \"number\" && isFinite(value) && Math.floor(value) === value;\n};\n\n/**\n * Tests if the specified value is a string.\n * @param {*} value Value to test\n * @returns {boolean} `true` if the value is a string\n */\nutil.isString = function isString(value) {\n    return typeof value === \"string\" || value instanceof String;\n};\n\n/**\n * Tests if the specified value is a non-null object.\n * @param {*} value Value to test\n * @returns {boolean} `true` if the value is a non-null object\n */\nutil.isObject = function isObject(value) {\n    return value && typeof value === \"object\";\n};\n\n/**\n * Checks if a property on a message is considered to be present.\n * This is an alias of {@link util.isSet}.\n * @function\n * @param {Object} obj Plain object or message instance\n * @param {string} prop Property name\n * @returns {boolean} `true` if considered to be present, otherwise `false`\n */\nutil.isset =\n\n/**\n * Checks if a property on a message is considered to be present.\n * @param {Object} obj Plain object or message instance\n * @param {string} prop Property name\n * @returns {boolean} `true` if considered to be present, otherwise `false`\n */\nutil.isSet = function isSet(obj, prop) {\n    var value = obj[prop];\n    if (value != null && obj.hasOwnProperty(prop)) // eslint-disable-line eqeqeq, no-prototype-builtins\n        return typeof value !== \"object\" || (Array.isArray(value) ? value.length : Object.keys(value).length) > 0;\n    return false;\n};\n\n/**\n * Any compatible Buffer instance.\n * This is a minimal stand-alone definition of a Buffer instance. The actual type is that exported by node's typings.\n * @interface Buffer\n * @extends Uint8Array\n */\n\n/**\n * Node's Buffer class if available.\n * @type {Constructor<Buffer>}\n */\nutil.Buffer = (function() {\n    try {\n        var Buffer = util.inquire(\"buffer\").Buffer;\n        // refuse to use non-node buffers if not explicitly assigned (perf reasons):\n        return Buffer.prototype.utf8Write ? Buffer : /* istanbul ignore next */ null;\n    } catch (e) {\n        /* istanbul ignore next */\n        return null;\n    }\n})();\n\n// Internal alias of or polyfull for Buffer.from.\nutil._Buffer_from = null;\n\n// Internal alias of or polyfill for Buffer.allocUnsafe.\nutil._Buffer_allocUnsafe = null;\n\n/**\n * Creates a new buffer of whatever type supported by the environment.\n * @param {number|number[]} [sizeOrArray=0] Buffer size or number array\n * @returns {Uint8Array|Buffer} Buffer\n */\nutil.newBuffer = function newBuffer(sizeOrArray) {\n    /* istanbul ignore next */\n    return typeof sizeOrArray === \"number\"\n        ? util.Buffer\n            ? util._Buffer_allocUnsafe(sizeOrArray)\n            : new util.Array(sizeOrArray)\n        : util.Buffer\n            ? util._Buffer_from(sizeOrArray)\n            : typeof Uint8Array === \"undefined\"\n                ? sizeOrArray\n                : new Uint8Array(sizeOrArray);\n};\n\n/**\n * Array implementation used in the browser. `Uint8Array` if supported, otherwise `Array`.\n * @type {Constructor<Uint8Array>}\n */\nutil.Array = typeof Uint8Array !== \"undefined\" ? Uint8Array /* istanbul ignore next */ : Array;\n\n/**\n * Any compatible Long instance.\n * This is a minimal stand-alone definition of a Long instance. The actual type is that exported by long.js.\n * @interface Long\n * @property {number} low Low bits\n * @property {number} high High bits\n * @property {boolean} unsigned Whether unsigned or not\n */\n\n/**\n * Long.js's Long class if available.\n * @type {Constructor<Long>}\n */\nutil.Long = /* istanbul ignore next */ util.global.dcodeIO && /* istanbul ignore next */ util.global.dcodeIO.Long\n         || /* istanbul ignore next */ util.global.Long\n         || util.inquire(\"long\");\n\n/**\n * Regular expression used to verify 2 bit (`bool`) map keys.\n * @type {RegExp}\n * @const\n */\nutil.key2Re = /^true|false|0|1$/;\n\n/**\n * Regular expression used to verify 32 bit (`int32` etc.) map keys.\n * @type {RegExp}\n * @const\n */\nutil.key32Re = /^-?(?:0|[1-9][0-9]*)$/;\n\n/**\n * Regular expression used to verify 64 bit (`int64` etc.) map keys.\n * @type {RegExp}\n * @const\n */\nutil.key64Re = /^(?:[\\\\x00-\\\\xff]{8}|-?(?:0|[1-9][0-9]*))$/;\n\n/**\n * Converts a number or long to an 8 characters long hash string.\n * @param {Long|number} value Value to convert\n * @returns {string} Hash\n */\nutil.longToHash = function longToHash(value) {\n    return value\n        ? util.LongBits.from(value).toHash()\n        : util.LongBits.zeroHash;\n};\n\n/**\n * Converts an 8 characters long hash string to a long or number.\n * @param {string} hash Hash\n * @param {boolean} [unsigned=false] Whether unsigned or not\n * @returns {Long|number} Original value\n */\nutil.longFromHash = function longFromHash(hash, unsigned) {\n    var bits = util.LongBits.fromHash(hash);\n    if (util.Long)\n        return util.Long.fromBits(bits.lo, bits.hi, unsigned);\n    return bits.toNumber(Boolean(unsigned));\n};\n\n/**\n * Merges the properties of the source object into the destination object.\n * @memberof util\n * @param {Object.<string,*>} dst Destination object\n * @param {Object.<string,*>} src Source object\n * @param {boolean} [ifNotSet=false] Merges only if the key is not already set\n * @returns {Object.<string,*>} Destination object\n */\nfunction merge(dst, src, ifNotSet) { // used by converters\n    for (var keys = Object.keys(src), i = 0; i < keys.length; ++i)\n        if (dst[keys[i]] === undefined || !ifNotSet)\n            dst[keys[i]] = src[keys[i]];\n    return dst;\n}\n\nutil.merge = merge;\n\n/**\n * Converts the first character of a string to lower case.\n * @param {string} str String to convert\n * @returns {string} Converted string\n */\nutil.lcFirst = function lcFirst(str) {\n    return str.charAt(0).toLowerCase() + str.substring(1);\n};\n\n/**\n * Creates a custom error constructor.\n * @memberof util\n * @param {string} name Error name\n * @returns {Constructor<Error>} Custom error constructor\n */\nfunction newError(name) {\n\n    function CustomError(message, properties) {\n\n        if (!(this instanceof CustomError))\n            return new CustomError(message, properties);\n\n        // Error.call(this, message);\n        // ^ just returns a new error instance because the ctor can be called as a function\n\n        Object.defineProperty(this, \"message\", { get: function() { return message; } });\n\n        /* istanbul ignore next */\n        if (Error.captureStackTrace) // node\n            Error.captureStackTrace(this, CustomError);\n        else\n            Object.defineProperty(this, \"stack\", { value: new Error().stack || \"\" });\n\n        if (properties)\n            merge(this, properties);\n    }\n\n    CustomError.prototype = Object.create(Error.prototype, {\n        constructor: {\n            value: CustomError,\n            writable: true,\n            enumerable: false,\n            configurable: true,\n        },\n        name: {\n            get() { return name; },\n            set: undefined,\n            enumerable: false,\n            // configurable: false would accurately preserve the behavior of\n            // the original, but I'm guessing that was not intentional.\n            // For an actual error subclass, this property would\n            // be configurable.\n            configurable: true,\n        },\n        toString: {\n            value() { return this.name + \": \" + this.message; },\n            writable: true,\n            enumerable: false,\n            configurable: true,\n        },\n    });\n\n    return CustomError;\n}\n\nutil.newError = newError;\n\n/**\n * Constructs a new protocol error.\n * @classdesc Error subclass indicating a protocol specifc error.\n * @memberof util\n * @extends Error\n * @template T extends Message<T>\n * @constructor\n * @param {string} message Error message\n * @param {Object.<string,*>} [properties] Additional properties\n * @example\n * try {\n *     MyMessage.decode(someBuffer); // throws if required fields are missing\n * } catch (e) {\n *     if (e instanceof ProtocolError && e.instance)\n *         console.log(\"decoded so far: \" + JSON.stringify(e.instance));\n * }\n */\nutil.ProtocolError = newError(\"ProtocolError\");\n\n/**\n * So far decoded message instance.\n * @name util.ProtocolError#instance\n * @type {Message<T>}\n */\n\n/**\n * A OneOf getter as returned by {@link util.oneOfGetter}.\n * @typedef OneOfGetter\n * @type {function}\n * @returns {string|undefined} Set field name, if any\n */\n\n/**\n * Builds a getter for a oneof's present field name.\n * @param {string[]} fieldNames Field names\n * @returns {OneOfGetter} Unbound getter\n */\nutil.oneOfGetter = function getOneOf(fieldNames) {\n    var fieldMap = {};\n    for (var i = 0; i < fieldNames.length; ++i)\n        fieldMap[fieldNames[i]] = 1;\n\n    /**\n     * @returns {string|undefined} Set field name, if any\n     * @this Object\n     * @ignore\n     */\n    return function() { // eslint-disable-line consistent-return\n        for (var keys = Object.keys(this), i = keys.length - 1; i > -1; --i)\n            if (fieldMap[keys[i]] === 1 && this[keys[i]] !== undefined && this[keys[i]] !== null)\n                return keys[i];\n    };\n};\n\n/**\n * A OneOf setter as returned by {@link util.oneOfSetter}.\n * @typedef OneOfSetter\n * @type {function}\n * @param {string|undefined} value Field name\n * @returns {undefined}\n */\n\n/**\n * Builds a setter for a oneof's present field name.\n * @param {string[]} fieldNames Field names\n * @returns {OneOfSetter} Unbound setter\n */\nutil.oneOfSetter = function setOneOf(fieldNames) {\n\n    /**\n     * @param {string} name Field name\n     * @returns {undefined}\n     * @this Object\n     * @ignore\n     */\n    return function(name) {\n        for (var i = 0; i < fieldNames.length; ++i)\n            if (fieldNames[i] !== name)\n                delete this[fieldNames[i]];\n    };\n};\n\n/**\n * Default conversion options used for {@link Message#toJSON} implementations.\n *\n * These options are close to proto3's JSON mapping with the exception that internal types like Any are handled just like messages. More precisely:\n *\n * - Longs become strings\n * - Enums become string keys\n * - Bytes become base64 encoded strings\n * - (Sub-)Messages become plain objects\n * - Maps become plain objects with all string keys\n * - Repeated fields become arrays\n * - NaN and Infinity for float and double fields become strings\n *\n * @type {IConversionOptions}\n * @see https://developers.google.com/protocol-buffers/docs/proto3?hl=en#json\n */\nutil.toJSONOptions = {\n    longs: String,\n    enums: String,\n    bytes: String,\n    json: true\n};\n\n// Sets up buffer utility according to the environment (called in index-minimal)\nutil._configure = function() {\n    var Buffer = util.Buffer;\n    /* istanbul ignore if */\n    if (!Buffer) {\n        util._Buffer_from = util._Buffer_allocUnsafe = null;\n        return;\n    }\n    // because node 4.x buffers are incompatible & immutable\n    // see: https://github.com/dcodeIO/protobuf.js/pull/665\n    util._Buffer_from = Buffer.from !== Uint8Array.from && Buffer.from ||\n        /* istanbul ignore next */\n        function Buffer_from(value, encoding) {\n            return new Buffer(value, encoding);\n        };\n    util._Buffer_allocUnsafe = Buffer.allocUnsafe ||\n        /* istanbul ignore next */\n        function Buffer_allocUnsafe(size) {\n            return new Buffer(size);\n        };\n};\n","\"use strict\";\nmodule.exports = Writer;\n\nvar util      = require(\"./util/minimal\");\n\nvar BufferWriter; // cyclic\n\nvar LongBits  = util.LongBits,\n    base64    = util.base64,\n    utf8      = util.utf8;\n\n/**\n * Constructs a new writer operation instance.\n * @classdesc Scheduled writer operation.\n * @constructor\n * @param {function(*, Uint8Array, number)} fn Function to call\n * @param {number} len Value byte length\n * @param {*} val Value to write\n * @ignore\n */\nfunction Op(fn, len, val) {\n\n    /**\n     * Function to call.\n     * @type {function(Uint8Array, number, *)}\n     */\n    this.fn = fn;\n\n    /**\n     * Value byte length.\n     * @type {number}\n     */\n    this.len = len;\n\n    /**\n     * Next operation.\n     * @type {Writer.Op|undefined}\n     */\n    this.next = undefined;\n\n    /**\n     * Value to write.\n     * @type {*}\n     */\n    this.val = val; // type varies\n}\n\n/* istanbul ignore next */\nfunction noop() {} // eslint-disable-line no-empty-function\n\n/**\n * Constructs a new writer state instance.\n * @classdesc Copied writer state.\n * @memberof Writer\n * @constructor\n * @param {Writer} writer Writer to copy state from\n * @ignore\n */\nfunction State(writer) {\n\n    /**\n     * Current head.\n     * @type {Writer.Op}\n     */\n    this.head = writer.head;\n\n    /**\n     * Current tail.\n     * @type {Writer.Op}\n     */\n    this.tail = writer.tail;\n\n    /**\n     * Current buffer length.\n     * @type {number}\n     */\n    this.len = writer.len;\n\n    /**\n     * Next state.\n     * @type {State|null}\n     */\n    this.next = writer.states;\n}\n\n/**\n * Constructs a new writer instance.\n * @classdesc Wire format writer using `Uint8Array` if available, otherwise `Array`.\n * @constructor\n */\nfunction Writer() {\n\n    /**\n     * Current length.\n     * @type {number}\n     */\n    this.len = 0;\n\n    /**\n     * Operations head.\n     * @type {Object}\n     */\n    this.head = new Op(noop, 0, 0);\n\n    /**\n     * Operations tail\n     * @type {Object}\n     */\n    this.tail = this.head;\n\n    /**\n     * Linked forked states.\n     * @type {Object|null}\n     */\n    this.states = null;\n\n    // When a value is written, the writer calculates its byte length and puts it into a linked\n    // list of operations to perform when finish() is called. This both allows us to allocate\n    // buffers of the exact required size and reduces the amount of work we have to do compared\n    // to first calculating over objects and then encoding over objects. In our case, the encoding\n    // part is just a linked list walk calling operations with already prepared values.\n}\n\nvar create = function create() {\n    return util.Buffer\n        ? function create_buffer_setup() {\n            return (Writer.create = function create_buffer() {\n                return new BufferWriter();\n            })();\n        }\n        /* istanbul ignore next */\n        : function create_array() {\n            return new Writer();\n        };\n};\n\n/**\n * Creates a new writer.\n * @function\n * @returns {BufferWriter|Writer} A {@link BufferWriter} when Buffers are supported, otherwise a {@link Writer}\n */\nWriter.create = create();\n\n/**\n * Allocates a buffer of the specified size.\n * @param {number} size Buffer size\n * @returns {Uint8Array} Buffer\n */\nWriter.alloc = function alloc(size) {\n    return new util.Array(size);\n};\n\n// Use Uint8Array buffer pool in the browser, just like node does with buffers\n/* istanbul ignore else */\nif (util.Array !== Array)\n    Writer.alloc = util.pool(Writer.alloc, util.Array.prototype.subarray);\n\n/**\n * Pushes a new operation to the queue.\n * @param {function(Uint8Array, number, *)} fn Function to call\n * @param {number} len Value byte length\n * @param {number} val Value to write\n * @returns {Writer} `this`\n * @private\n */\nWriter.prototype._push = function push(fn, len, val) {\n    this.tail = this.tail.next = new Op(fn, len, val);\n    this.len += len;\n    return this;\n};\n\nfunction writeByte(val, buf, pos) {\n    buf[pos] = val & 255;\n}\n\nfunction writeVarint32(val, buf, pos) {\n    while (val > 127) {\n        buf[pos++] = val & 127 | 128;\n        val >>>= 7;\n    }\n    buf[pos] = val;\n}\n\n/**\n * Constructs a new varint writer operation instance.\n * @classdesc Scheduled varint writer operation.\n * @extends Op\n * @constructor\n * @param {number} len Value byte length\n * @param {number} val Value to write\n * @ignore\n */\nfunction VarintOp(len, val) {\n    this.len = len;\n    this.next = undefined;\n    this.val = val;\n}\n\nVarintOp.prototype = Object.create(Op.prototype);\nVarintOp.prototype.fn = writeVarint32;\n\n/**\n * Writes an unsigned 32 bit value as a varint.\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.uint32 = function write_uint32(value) {\n    // here, the call to this.push has been inlined and a varint specific Op subclass is used.\n    // uint32 is by far the most frequently used operation and benefits significantly from this.\n    this.len += (this.tail = this.tail.next = new VarintOp(\n        (value = value >>> 0)\n                < 128       ? 1\n        : value < 16384     ? 2\n        : value < 2097152   ? 3\n        : value < 268435456 ? 4\n        :                     5,\n    value)).len;\n    return this;\n};\n\n/**\n * Writes a signed 32 bit value as a varint.\n * @function\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.int32 = function write_int32(value) {\n    return value < 0\n        ? this._push(writeVarint64, 10, LongBits.fromNumber(value)) // 10 bytes per spec\n        : this.uint32(value);\n};\n\n/**\n * Writes a 32 bit value as a varint, zig-zag encoded.\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.sint32 = function write_sint32(value) {\n    return this.uint32((value << 1 ^ value >> 31) >>> 0);\n};\n\nfunction writeVarint64(val, buf, pos) {\n    while (val.hi) {\n        buf[pos++] = val.lo & 127 | 128;\n        val.lo = (val.lo >>> 7 | val.hi << 25) >>> 0;\n        val.hi >>>= 7;\n    }\n    while (val.lo > 127) {\n        buf[pos++] = val.lo & 127 | 128;\n        val.lo = val.lo >>> 7;\n    }\n    buf[pos++] = val.lo;\n}\n\n/**\n * Writes an unsigned 64 bit value as a varint.\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.uint64 = function write_uint64(value) {\n    var bits = LongBits.from(value);\n    return this._push(writeVarint64, bits.length(), bits);\n};\n\n/**\n * Writes a signed 64 bit value as a varint.\n * @function\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.int64 = Writer.prototype.uint64;\n\n/**\n * Writes a signed 64 bit value as a varint, zig-zag encoded.\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.sint64 = function write_sint64(value) {\n    var bits = LongBits.from(value).zzEncode();\n    return this._push(writeVarint64, bits.length(), bits);\n};\n\n/**\n * Writes a boolish value as a varint.\n * @param {boolean} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.bool = function write_bool(value) {\n    return this._push(writeByte, 1, value ? 1 : 0);\n};\n\nfunction writeFixed32(val, buf, pos) {\n    buf[pos    ] =  val         & 255;\n    buf[pos + 1] =  val >>> 8   & 255;\n    buf[pos + 2] =  val >>> 16  & 255;\n    buf[pos + 3] =  val >>> 24;\n}\n\n/**\n * Writes an unsigned 32 bit value as fixed 32 bits.\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.fixed32 = function write_fixed32(value) {\n    return this._push(writeFixed32, 4, value >>> 0);\n};\n\n/**\n * Writes a signed 32 bit value as fixed 32 bits.\n * @function\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.sfixed32 = Writer.prototype.fixed32;\n\n/**\n * Writes an unsigned 64 bit value as fixed 64 bits.\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.fixed64 = function write_fixed64(value) {\n    var bits = LongBits.from(value);\n    return this._push(writeFixed32, 4, bits.lo)._push(writeFixed32, 4, bits.hi);\n};\n\n/**\n * Writes a signed 64 bit value as fixed 64 bits.\n * @function\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.sfixed64 = Writer.prototype.fixed64;\n\n/**\n * Writes a float (32 bit).\n * @function\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.float = function write_float(value) {\n    return this._push(util.float.writeFloatLE, 4, value);\n};\n\n/**\n * Writes a double (64 bit float).\n * @function\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.double = function write_double(value) {\n    return this._push(util.float.writeDoubleLE, 8, value);\n};\n\nvar writeBytes = util.Array.prototype.set\n    ? function writeBytes_set(val, buf, pos) {\n        buf.set(val, pos); // also works for plain array values\n    }\n    /* istanbul ignore next */\n    : function writeBytes_for(val, buf, pos) {\n        for (var i = 0; i < val.length; ++i)\n            buf[pos + i] = val[i];\n    };\n\n/**\n * Writes a sequence of bytes.\n * @param {Uint8Array|string} value Buffer or base64 encoded string to write\n * @returns {Writer} `this`\n */\nWriter.prototype.bytes = function write_bytes(value) {\n    var len = value.length >>> 0;\n    if (!len)\n        return this._push(writeByte, 1, 0);\n    if (util.isString(value)) {\n        var buf = Writer.alloc(len = base64.length(value));\n        base64.decode(value, buf, 0);\n        value = buf;\n    }\n    return this.uint32(len)._push(writeBytes, len, value);\n};\n\n/**\n * Writes a string.\n * @param {string} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.string = function write_string(value) {\n    var len = utf8.length(value);\n    return len\n        ? this.uint32(len)._push(utf8.write, len, value)\n        : this._push(writeByte, 1, 0);\n};\n\n/**\n * Forks this writer's state by pushing it to a stack.\n * Calling {@link Writer#reset|reset} or {@link Writer#ldelim|ldelim} resets the writer to the previous state.\n * @returns {Writer} `this`\n */\nWriter.prototype.fork = function fork() {\n    this.states = new State(this);\n    this.head = this.tail = new Op(noop, 0, 0);\n    this.len = 0;\n    return this;\n};\n\n/**\n * Resets this instance to the last state.\n * @returns {Writer} `this`\n */\nWriter.prototype.reset = function reset() {\n    if (this.states) {\n        this.head   = this.states.head;\n        this.tail   = this.states.tail;\n        this.len    = this.states.len;\n        this.states = this.states.next;\n    } else {\n        this.head = this.tail = new Op(noop, 0, 0);\n        this.len  = 0;\n    }\n    return this;\n};\n\n/**\n * Resets to the last state and appends the fork state's current write length as a varint followed by its operations.\n * @returns {Writer} `this`\n */\nWriter.prototype.ldelim = function ldelim() {\n    var head = this.head,\n        tail = this.tail,\n        len  = this.len;\n    this.reset().uint32(len);\n    if (len) {\n        this.tail.next = head.next; // skip noop\n        this.tail = tail;\n        this.len += len;\n    }\n    return this;\n};\n\n/**\n * Finishes the write operation.\n * @returns {Uint8Array} Finished buffer\n */\nWriter.prototype.finish = function finish() {\n    var head = this.head.next, // skip noop\n        buf  = this.constructor.alloc(this.len),\n        pos  = 0;\n    while (head) {\n        head.fn(head.val, buf, pos);\n        pos += head.len;\n        head = head.next;\n    }\n    // this.head = this.tail = null;\n    return buf;\n};\n\nWriter._configure = function(BufferWriter_) {\n    BufferWriter = BufferWriter_;\n    Writer.create = create();\n    BufferWriter._configure();\n};\n","\"use strict\";\nmodule.exports = BufferWriter;\n\n// extends Writer\nvar Writer = require(\"./writer\");\n(BufferWriter.prototype = Object.create(Writer.prototype)).constructor = BufferWriter;\n\nvar util = require(\"./util/minimal\");\n\n/**\n * Constructs a new buffer writer instance.\n * @classdesc Wire format writer using node buffers.\n * @extends Writer\n * @constructor\n */\nfunction BufferWriter() {\n    Writer.call(this);\n}\n\nBufferWriter._configure = function () {\n    /**\n     * Allocates a buffer of the specified size.\n     * @function\n     * @param {number} size Buffer size\n     * @returns {Buffer} Buffer\n     */\n    BufferWriter.alloc = util._Buffer_allocUnsafe;\n\n    BufferWriter.writeBytesBuffer = util.Buffer && util.Buffer.prototype instanceof Uint8Array && util.Buffer.prototype.set.name === \"set\"\n        ? function writeBytesBuffer_set(val, buf, pos) {\n          buf.set(val, pos); // faster than copy (requires node >= 4 where Buffers extend Uint8Array and set is properly inherited)\n          // also works for plain array values\n        }\n        /* istanbul ignore next */\n        : function writeBytesBuffer_copy(val, buf, pos) {\n          if (val.copy) // Buffer values\n            val.copy(buf, pos, 0, val.length);\n          else for (var i = 0; i < val.length;) // plain array values\n            buf[pos++] = val[i++];\n        };\n};\n\n\n/**\n * @override\n */\nBufferWriter.prototype.bytes = function write_bytes_buffer(value) {\n    if (util.isString(value))\n        value = util._Buffer_from(value, \"base64\");\n    var len = value.length >>> 0;\n    this.uint32(len);\n    if (len)\n        this._push(BufferWriter.writeBytesBuffer, len, value);\n    return this;\n};\n\nfunction writeStringBuffer(val, buf, pos) {\n    if (val.length < 40) // plain js is faster for short strings (probably due to redundant assertions)\n        util.utf8.write(val, buf, pos);\n    else if (buf.utf8Write)\n        buf.utf8Write(val, pos);\n    else\n        buf.write(val, pos);\n}\n\n/**\n * @override\n */\nBufferWriter.prototype.string = function write_string_buffer(value) {\n    var len = util.Buffer.byteLength(value);\n    this.uint32(len);\n    if (len)\n        this._push(writeStringBuffer, len, value);\n    return this;\n};\n\n\n/**\n * Finishes the write operation.\n * @name BufferWriter#finish\n * @function\n * @returns {Buffer} Finished buffer\n */\n\nBufferWriter._configure();\n","\"use strict\";\nmodule.exports = Reader;\n\nvar util      = require(\"./util/minimal\");\n\nvar BufferReader; // cyclic\n\nvar LongBits  = util.LongBits,\n    utf8      = util.utf8;\n\n/* istanbul ignore next */\nfunction indexOutOfRange(reader, writeLength) {\n    return RangeError(\"index out of range: \" + reader.pos + \" + \" + (writeLength || 1) + \" > \" + reader.len);\n}\n\n/**\n * Constructs a new reader instance using the specified buffer.\n * @classdesc Wire format reader using `Uint8Array` if available, otherwise `Array`.\n * @constructor\n * @param {Uint8Array} buffer Buffer to read from\n */\nfunction Reader(buffer) {\n\n    /**\n     * Read buffer.\n     * @type {Uint8Array}\n     */\n    this.buf = buffer;\n\n    /**\n     * Read buffer position.\n     * @type {number}\n     */\n    this.pos = 0;\n\n    /**\n     * Read buffer length.\n     * @type {number}\n     */\n    this.len = buffer.length;\n}\n\nvar create_array = typeof Uint8Array !== \"undefined\"\n    ? function create_typed_array(buffer) {\n        if (buffer instanceof Uint8Array || Array.isArray(buffer))\n            return new Reader(buffer);\n        throw Error(\"illegal buffer\");\n    }\n    /* istanbul ignore next */\n    : function create_array(buffer) {\n        if (Array.isArray(buffer))\n            return new Reader(buffer);\n        throw Error(\"illegal buffer\");\n    };\n\nvar create = function create() {\n    return util.Buffer\n        ? function create_buffer_setup(buffer) {\n            return (Reader.create = function create_buffer(buffer) {\n                return util.Buffer.isBuffer(buffer)\n                    ? new BufferReader(buffer)\n                    /* istanbul ignore next */\n                    : create_array(buffer);\n            })(buffer);\n        }\n        /* istanbul ignore next */\n        : create_array;\n};\n\n/**\n * Creates a new reader using the specified buffer.\n * @function\n * @param {Uint8Array|Buffer} buffer Buffer to read from\n * @returns {Reader|BufferReader} A {@link BufferReader} if `buffer` is a Buffer, otherwise a {@link Reader}\n * @throws {Error} If `buffer` is not a valid buffer\n */\nReader.create = create();\n\nReader.prototype._slice = util.Array.prototype.subarray || /* istanbul ignore next */ util.Array.prototype.slice;\n\n/**\n * Reads a varint as an unsigned 32 bit value.\n * @function\n * @returns {number} Value read\n */\nReader.prototype.uint32 = (function read_uint32_setup() {\n    var value = 4294967295; // optimizer type-hint, tends to deopt otherwise (?!)\n    return function read_uint32() {\n        value = (         this.buf[this.pos] & 127       ) >>> 0; if (this.buf[this.pos++] < 128) return value;\n        value = (value | (this.buf[this.pos] & 127) <<  7) >>> 0; if (this.buf[this.pos++] < 128) return value;\n        value = (value | (this.buf[this.pos] & 127) << 14) >>> 0; if (this.buf[this.pos++] < 128) return value;\n        value = (value | (this.buf[this.pos] & 127) << 21) >>> 0; if (this.buf[this.pos++] < 128) return value;\n        value = (value | (this.buf[this.pos] &  15) << 28) >>> 0; if (this.buf[this.pos++] < 128) return value;\n\n        /* istanbul ignore if */\n        if ((this.pos += 5) > this.len) {\n            this.pos = this.len;\n            throw indexOutOfRange(this, 10);\n        }\n        return value;\n    };\n})();\n\n/**\n * Reads a varint as a signed 32 bit value.\n * @returns {number} Value read\n */\nReader.prototype.int32 = function read_int32() {\n    return this.uint32() | 0;\n};\n\n/**\n * Reads a zig-zag encoded varint as a signed 32 bit value.\n * @returns {number} Value read\n */\nReader.prototype.sint32 = function read_sint32() {\n    var value = this.uint32();\n    return value >>> 1 ^ -(value & 1) | 0;\n};\n\n/* eslint-disable no-invalid-this */\n\nfunction readLongVarint() {\n    // tends to deopt with local vars for octet etc.\n    var bits = new LongBits(0, 0);\n    var i = 0;\n    if (this.len - this.pos > 4) { // fast route (lo)\n        for (; i < 4; ++i) {\n            // 1st..4th\n            bits.lo = (bits.lo | (this.buf[this.pos] & 127) << i * 7) >>> 0;\n            if (this.buf[this.pos++] < 128)\n                return bits;\n        }\n        // 5th\n        bits.lo = (bits.lo | (this.buf[this.pos] & 127) << 28) >>> 0;\n        bits.hi = (bits.hi | (this.buf[this.pos] & 127) >>  4) >>> 0;\n        if (this.buf[this.pos++] < 128)\n            return bits;\n        i = 0;\n    } else {\n        for (; i < 3; ++i) {\n            /* istanbul ignore if */\n            if (this.pos >= this.len)\n                throw indexOutOfRange(this);\n            // 1st..3th\n            bits.lo = (bits.lo | (this.buf[this.pos] & 127) << i * 7) >>> 0;\n            if (this.buf[this.pos++] < 128)\n                return bits;\n        }\n        // 4th\n        bits.lo = (bits.lo | (this.buf[this.pos++] & 127) << i * 7) >>> 0;\n        return bits;\n    }\n    if (this.len - this.pos > 4) { // fast route (hi)\n        for (; i < 5; ++i) {\n            // 6th..10th\n            bits.hi = (bits.hi | (this.buf[this.pos] & 127) << i * 7 + 3) >>> 0;\n            if (this.buf[this.pos++] < 128)\n                return bits;\n        }\n    } else {\n        for (; i < 5; ++i) {\n            /* istanbul ignore if */\n            if (this.pos >= this.len)\n                throw indexOutOfRange(this);\n            // 6th..10th\n            bits.hi = (bits.hi | (this.buf[this.pos] & 127) << i * 7 + 3) >>> 0;\n            if (this.buf[this.pos++] < 128)\n                return bits;\n        }\n    }\n    /* istanbul ignore next */\n    throw Error(\"invalid varint encoding\");\n}\n\n/* eslint-enable no-invalid-this */\n\n/**\n * Reads a varint as a signed 64 bit value.\n * @name Reader#int64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads a varint as an unsigned 64 bit value.\n * @name Reader#uint64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads a zig-zag encoded varint as a signed 64 bit value.\n * @name Reader#sint64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads a varint as a boolean.\n * @returns {boolean} Value read\n */\nReader.prototype.bool = function read_bool() {\n    return this.uint32() !== 0;\n};\n\nfunction readFixed32_end(buf, end) { // note that this uses `end`, not `pos`\n    return (buf[end - 4]\n          | buf[end - 3] << 8\n          | buf[end - 2] << 16\n          | buf[end - 1] << 24) >>> 0;\n}\n\n/**\n * Reads fixed 32 bits as an unsigned 32 bit integer.\n * @returns {number} Value read\n */\nReader.prototype.fixed32 = function read_fixed32() {\n\n    /* istanbul ignore if */\n    if (this.pos + 4 > this.len)\n        throw indexOutOfRange(this, 4);\n\n    return readFixed32_end(this.buf, this.pos += 4);\n};\n\n/**\n * Reads fixed 32 bits as a signed 32 bit integer.\n * @returns {number} Value read\n */\nReader.prototype.sfixed32 = function read_sfixed32() {\n\n    /* istanbul ignore if */\n    if (this.pos + 4 > this.len)\n        throw indexOutOfRange(this, 4);\n\n    return readFixed32_end(this.buf, this.pos += 4) | 0;\n};\n\n/* eslint-disable no-invalid-this */\n\nfunction readFixed64(/* this: Reader */) {\n\n    /* istanbul ignore if */\n    if (this.pos + 8 > this.len)\n        throw indexOutOfRange(this, 8);\n\n    return new LongBits(readFixed32_end(this.buf, this.pos += 4), readFixed32_end(this.buf, this.pos += 4));\n}\n\n/* eslint-enable no-invalid-this */\n\n/**\n * Reads fixed 64 bits.\n * @name Reader#fixed64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads zig-zag encoded fixed 64 bits.\n * @name Reader#sfixed64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads a float (32 bit) as a number.\n * @function\n * @returns {number} Value read\n */\nReader.prototype.float = function read_float() {\n\n    /* istanbul ignore if */\n    if (this.pos + 4 > this.len)\n        throw indexOutOfRange(this, 4);\n\n    var value = util.float.readFloatLE(this.buf, this.pos);\n    this.pos += 4;\n    return value;\n};\n\n/**\n * Reads a double (64 bit float) as a number.\n * @function\n * @returns {number} Value read\n */\nReader.prototype.double = function read_double() {\n\n    /* istanbul ignore if */\n    if (this.pos + 8 > this.len)\n        throw indexOutOfRange(this, 4);\n\n    var value = util.float.readDoubleLE(this.buf, this.pos);\n    this.pos += 8;\n    return value;\n};\n\n/**\n * Reads a sequence of bytes preceeded by its length as a varint.\n * @returns {Uint8Array} Value read\n */\nReader.prototype.bytes = function read_bytes() {\n    var length = this.uint32(),\n        start  = this.pos,\n        end    = this.pos + length;\n\n    /* istanbul ignore if */\n    if (end > this.len)\n        throw indexOutOfRange(this, length);\n\n    this.pos += length;\n    if (Array.isArray(this.buf)) // plain array\n        return this.buf.slice(start, end);\n    return start === end // fix for IE 10/Win8 and others' subarray returning array of size 1\n        ? new this.buf.constructor(0)\n        : this._slice.call(this.buf, start, end);\n};\n\n/**\n * Reads a string preceeded by its byte length as a varint.\n * @returns {string} Value read\n */\nReader.prototype.string = function read_string() {\n    var bytes = this.bytes();\n    return utf8.read(bytes, 0, bytes.length);\n};\n\n/**\n * Skips the specified number of bytes if specified, otherwise skips a varint.\n * @param {number} [length] Length if known, otherwise a varint is assumed\n * @returns {Reader} `this`\n */\nReader.prototype.skip = function skip(length) {\n    if (typeof length === \"number\") {\n        /* istanbul ignore if */\n        if (this.pos + length > this.len)\n            throw indexOutOfRange(this, length);\n        this.pos += length;\n    } else {\n        do {\n            /* istanbul ignore if */\n            if (this.pos >= this.len)\n                throw indexOutOfRange(this);\n        } while (this.buf[this.pos++] & 128);\n    }\n    return this;\n};\n\n/**\n * Skips the next element of the specified wire type.\n * @param {number} wireType Wire type received\n * @returns {Reader} `this`\n */\nReader.prototype.skipType = function(wireType) {\n    switch (wireType) {\n        case 0:\n            this.skip();\n            break;\n        case 1:\n            this.skip(8);\n            break;\n        case 2:\n            this.skip(this.uint32());\n            break;\n        case 3:\n            while ((wireType = this.uint32() & 7) !== 4) {\n                this.skipType(wireType);\n            }\n            break;\n        case 5:\n            this.skip(4);\n            break;\n\n        /* istanbul ignore next */\n        default:\n            throw Error(\"invalid wire type \" + wireType + \" at offset \" + this.pos);\n    }\n    return this;\n};\n\nReader._configure = function(BufferReader_) {\n    BufferReader = BufferReader_;\n    Reader.create = create();\n    BufferReader._configure();\n\n    var fn = util.Long ? \"toLong\" : /* istanbul ignore next */ \"toNumber\";\n    util.merge(Reader.prototype, {\n\n        int64: function read_int64() {\n            return readLongVarint.call(this)[fn](false);\n        },\n\n        uint64: function read_uint64() {\n            return readLongVarint.call(this)[fn](true);\n        },\n\n        sint64: function read_sint64() {\n            return readLongVarint.call(this).zzDecode()[fn](false);\n        },\n\n        fixed64: function read_fixed64() {\n            return readFixed64.call(this)[fn](true);\n        },\n\n        sfixed64: function read_sfixed64() {\n            return readFixed64.call(this)[fn](false);\n        }\n\n    });\n};\n","\"use strict\";\nmodule.exports = BufferReader;\n\n// extends Reader\nvar Reader = require(\"./reader\");\n(BufferReader.prototype = Object.create(Reader.prototype)).constructor = BufferReader;\n\nvar util = require(\"./util/minimal\");\n\n/**\n * Constructs a new buffer reader instance.\n * @classdesc Wire format reader using node buffers.\n * @extends Reader\n * @constructor\n * @param {Buffer} buffer Buffer to read from\n */\nfunction BufferReader(buffer) {\n    Reader.call(this, buffer);\n\n    /**\n     * Read buffer.\n     * @name BufferReader#buf\n     * @type {Buffer}\n     */\n}\n\nBufferReader._configure = function () {\n    /* istanbul ignore else */\n    if (util.Buffer)\n        BufferReader.prototype._slice = util.Buffer.prototype.slice;\n};\n\n\n/**\n * @override\n */\nBufferReader.prototype.string = function read_string_buffer() {\n    var len = this.uint32(); // modifies pos\n    return this.buf.utf8Slice\n        ? this.buf.utf8Slice(this.pos, this.pos = Math.min(this.pos + len, this.len))\n        : this.buf.toString(\"utf-8\", this.pos, this.pos = Math.min(this.pos + len, this.len));\n};\n\n/**\n * Reads a sequence of bytes preceeded by its length as a varint.\n * @name BufferReader#bytes\n * @function\n * @returns {Buffer} Value read\n */\n\nBufferReader._configure();\n","\"use strict\";\nmodule.exports = Service;\n\nvar util = require(\"../util/minimal\");\n\n// Extends EventEmitter\n(Service.prototype = Object.create(util.EventEmitter.prototype)).constructor = Service;\n\n/**\n * A service method callback as used by {@link rpc.ServiceMethod|ServiceMethod}.\n *\n * Differs from {@link RPCImplCallback} in that it is an actual callback of a service method which may not return `response = null`.\n * @typedef rpc.ServiceMethodCallback\n * @template TRes extends Message<TRes>\n * @type {function}\n * @param {Error|null} error Error, if any\n * @param {TRes} [response] Response message\n * @returns {undefined}\n */\n\n/**\n * A service method part of a {@link rpc.Service} as created by {@link Service.create}.\n * @typedef rpc.ServiceMethod\n * @template TReq extends Message<TReq>\n * @template TRes extends Message<TRes>\n * @type {function}\n * @param {TReq|Properties<TReq>} request Request message or plain object\n * @param {rpc.ServiceMethodCallback<TRes>} [callback] Node-style callback called with the error, if any, and the response message\n * @returns {Promise<Message<TRes>>} Promise if `callback` has been omitted, otherwise `undefined`\n */\n\n/**\n * Constructs a new RPC service instance.\n * @classdesc An RPC service as returned by {@link Service#create}.\n * @exports rpc.Service\n * @extends util.EventEmitter\n * @constructor\n * @param {RPCImpl} rpcImpl RPC implementation\n * @param {boolean} [requestDelimited=false] Whether requests are length-delimited\n * @param {boolean} [responseDelimited=false] Whether responses are length-delimited\n */\nfunction Service(rpcImpl, requestDelimited, responseDelimited) {\n\n    if (typeof rpcImpl !== \"function\")\n        throw TypeError(\"rpcImpl must be a function\");\n\n    util.EventEmitter.call(this);\n\n    /**\n     * RPC implementation. Becomes `null` once the service is ended.\n     * @type {RPCImpl|null}\n     */\n    this.rpcImpl = rpcImpl;\n\n    /**\n     * Whether requests are length-delimited.\n     * @type {boolean}\n     */\n    this.requestDelimited = Boolean(requestDelimited);\n\n    /**\n     * Whether responses are length-delimited.\n     * @type {boolean}\n     */\n    this.responseDelimited = Boolean(responseDelimited);\n}\n\n/**\n * Calls a service method through {@link rpc.Service#rpcImpl|rpcImpl}.\n * @param {Method|rpc.ServiceMethod<TReq,TRes>} method Reflected or static method\n * @param {Constructor<TReq>} requestCtor Request constructor\n * @param {Constructor<TRes>} responseCtor Response constructor\n * @param {TReq|Properties<TReq>} request Request message or plain object\n * @param {rpc.ServiceMethodCallback<TRes>} callback Service callback\n * @returns {undefined}\n * @template TReq extends Message<TReq>\n * @template TRes extends Message<TRes>\n */\nService.prototype.rpcCall = function rpcCall(method, requestCtor, responseCtor, request, callback) {\n\n    if (!request)\n        throw TypeError(\"request must be specified\");\n\n    var self = this;\n    if (!callback)\n        return util.asPromise(rpcCall, self, method, requestCtor, responseCtor, request);\n\n    if (!self.rpcImpl) {\n        setTimeout(function() { callback(Error(\"already ended\")); }, 0);\n        return undefined;\n    }\n\n    try {\n        return self.rpcImpl(\n            method,\n            requestCtor[self.requestDelimited ? \"encodeDelimited\" : \"encode\"](request).finish(),\n            function rpcCallback(err, response) {\n\n                if (err) {\n                    self.emit(\"error\", err, method);\n                    return callback(err);\n                }\n\n                if (response === null) {\n                    self.end(/* endedByRPC */ true);\n                    return undefined;\n                }\n\n                if (!(response instanceof responseCtor)) {\n                    try {\n                        response = responseCtor[self.responseDelimited ? \"decodeDelimited\" : \"decode\"](response);\n                    } catch (err) {\n                        self.emit(\"error\", err, method);\n                        return callback(err);\n                    }\n                }\n\n                self.emit(\"data\", response, method);\n                return callback(null, response);\n            }\n        );\n    } catch (err) {\n        self.emit(\"error\", err, method);\n        setTimeout(function() { callback(err); }, 0);\n        return undefined;\n    }\n};\n\n/**\n * Ends this service and emits the `end` event.\n * @param {boolean} [endedByRPC=false] Whether the service has been ended by the RPC implementation.\n * @returns {rpc.Service} `this`\n */\nService.prototype.end = function end(endedByRPC) {\n    if (this.rpcImpl) {\n        if (!endedByRPC) // signal end to rpcImpl\n            this.rpcImpl(null, null, null);\n        this.rpcImpl = null;\n        this.emit(\"end\").off();\n    }\n    return this;\n};\n","\"use strict\";\n\n/**\n * Streaming RPC helpers.\n * @namespace\n */\nvar rpc = exports;\n\n/**\n * RPC implementation passed to {@link Service#create} performing a service request on network level, i.e. by utilizing http requests or websockets.\n * @typedef RPCImpl\n * @type {function}\n * @param {Method|rpc.ServiceMethod<Message<{}>,Message<{}>>} method Reflected or static method being called\n * @param {Uint8Array} requestData Request data\n * @param {RPCImplCallback} callback Callback function\n * @returns {undefined}\n * @example\n * function rpcImpl(method, requestData, callback) {\n *     if (protobuf.util.lcFirst(method.name) !== \"myMethod\") // compatible with static code\n *         throw Error(\"no such method\");\n *     asynchronouslyObtainAResponse(requestData, function(err, responseData) {\n *         callback(err, responseData);\n *     });\n * }\n */\n\n/**\n * Node-style callback as used by {@link RPCImpl}.\n * @typedef RPCImplCallback\n * @type {function}\n * @param {Error|null} error Error, if any, otherwise `null`\n * @param {Uint8Array|null} [response] Response data or `null` to signal end of stream, if there hasn't been an error\n * @returns {undefined}\n */\n\nrpc.Service = require(\"./rpc/service\");\n","\"use strict\";\nmodule.exports = {};\n\n/**\n * Named roots.\n * This is where pbjs stores generated structures (the option `-r, --root` specifies a name).\n * Can also be used manually to make roots available across modules.\n * @name roots\n * @type {Object.<string,Root>}\n * @example\n * // pbjs -r myroot -o compiled.js ...\n *\n * // in another module:\n * require(\"./compiled.js\");\n *\n * // in any subsequent module:\n * var root = protobuf.roots[\"myroot\"];\n */\n","\"use strict\";\nvar protobuf = exports;\n\n/**\n * Build type, one of `\"full\"`, `\"light\"` or `\"minimal\"`.\n * @name build\n * @type {string}\n * @const\n */\nprotobuf.build = \"minimal\";\n\n// Serialization\nprotobuf.Writer       = require(\"./writer\");\nprotobuf.BufferWriter = require(\"./writer_buffer\");\nprotobuf.Reader       = require(\"./reader\");\nprotobuf.BufferReader = require(\"./reader_buffer\");\n\n// Utility\nprotobuf.util         = require(\"./util/minimal\");\nprotobuf.rpc          = require(\"./rpc\");\nprotobuf.roots        = require(\"./roots\");\nprotobuf.configure    = configure;\n\n/* istanbul ignore next */\n/**\n * Reconfigures the library according to the environment.\n * @returns {undefined}\n */\nfunction configure() {\n    protobuf.util._configure();\n    protobuf.Writer._configure(protobuf.BufferWriter);\n    protobuf.Reader._configure(protobuf.BufferReader);\n}\n\n// Set up buffer utility according to the environment\nconfigure();\n","// minimal library entry point.\n\n\"use strict\";\nmodule.exports = require(\"./src/index-minimal\");\n","/*eslint-disable*/\nimport $protobuf from \"protobufjs/minimal.js\";\n\n// Common aliases\nconst $Reader = $protobuf.Reader, $Writer = $protobuf.Writer, $util = $protobuf.util;\n\n// Exported root namespace\nconst $root = $protobuf.roots[\"default\"] || ($protobuf.roots[\"default\"] = {});\n\nexport const ipfs = $root.ipfs = (() => {\n\n    /**\n     * Namespace ipfs.\n     * @exports ipfs\n     * @namespace\n     */\n    const ipfs = {};\n\n    ipfs.pin = (function() {\n\n        /**\n         * Namespace pin.\n         * @memberof ipfs\n         * @namespace\n         */\n        const pin = {};\n\n        pin.Set = (function() {\n\n            /**\n             * Properties of a Set.\n             * @memberof ipfs.pin\n             * @interface ISet\n             * @property {number|null} [version] Set version\n             * @property {number|null} [fanout] Set fanout\n             * @property {number|null} [seed] Set seed\n             */\n\n            /**\n             * Constructs a new Set.\n             * @memberof ipfs.pin\n             * @classdesc Represents a Set.\n             * @implements ISet\n             * @constructor\n             * @param {ipfs.pin.ISet=} [p] Properties to set\n             */\n            function Set(p) {\n                if (p)\n                    for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)\n                        if (p[ks[i]] != null)\n                            this[ks[i]] = p[ks[i]];\n            }\n\n            /**\n             * Set version.\n             * @member {number} version\n             * @memberof ipfs.pin.Set\n             * @instance\n             */\n            Set.prototype.version = 0;\n\n            /**\n             * Set fanout.\n             * @member {number} fanout\n             * @memberof ipfs.pin.Set\n             * @instance\n             */\n            Set.prototype.fanout = 0;\n\n            /**\n             * Set seed.\n             * @member {number} seed\n             * @memberof ipfs.pin.Set\n             * @instance\n             */\n            Set.prototype.seed = 0;\n\n            /**\n             * Encodes the specified Set message. Does not implicitly {@link ipfs.pin.Set.verify|verify} messages.\n             * @function encode\n             * @memberof ipfs.pin.Set\n             * @static\n             * @param {ipfs.pin.ISet} m Set message or plain object to encode\n             * @param {$protobuf.Writer} [w] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            Set.encode = function encode(m, w) {\n                if (!w)\n                    w = $Writer.create();\n                if (m.version != null && Object.hasOwnProperty.call(m, \"version\"))\n                    w.uint32(8).uint32(m.version);\n                if (m.fanout != null && Object.hasOwnProperty.call(m, \"fanout\"))\n                    w.uint32(16).uint32(m.fanout);\n                if (m.seed != null && Object.hasOwnProperty.call(m, \"seed\"))\n                    w.uint32(29).fixed32(m.seed);\n                return w;\n            };\n\n            /**\n             * Decodes a Set message from the specified reader or buffer.\n             * @function decode\n             * @memberof ipfs.pin.Set\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from\n             * @param {number} [l] Message length if known beforehand\n             * @returns {ipfs.pin.Set} Set\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            Set.decode = function decode(r, l) {\n                if (!(r instanceof $Reader))\n                    r = $Reader.create(r);\n                var c = l === undefined ? r.len : r.pos + l, m = new $root.ipfs.pin.Set();\n                while (r.pos < c) {\n                    var t = r.uint32();\n                    switch (t >>> 3) {\n                    case 1:\n                        m.version = r.uint32();\n                        break;\n                    case 2:\n                        m.fanout = r.uint32();\n                        break;\n                    case 3:\n                        m.seed = r.fixed32();\n                        break;\n                    default:\n                        r.skipType(t & 7);\n                        break;\n                    }\n                }\n                return m;\n            };\n\n            /**\n             * Creates a Set message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof ipfs.pin.Set\n             * @static\n             * @param {Object.<string,*>} d Plain object\n             * @returns {ipfs.pin.Set} Set\n             */\n            Set.fromObject = function fromObject(d) {\n                if (d instanceof $root.ipfs.pin.Set)\n                    return d;\n                var m = new $root.ipfs.pin.Set();\n                if (d.version != null) {\n                    m.version = d.version >>> 0;\n                }\n                if (d.fanout != null) {\n                    m.fanout = d.fanout >>> 0;\n                }\n                if (d.seed != null) {\n                    m.seed = d.seed >>> 0;\n                }\n                return m;\n            };\n\n            /**\n             * Creates a plain object from a Set message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof ipfs.pin.Set\n             * @static\n             * @param {ipfs.pin.Set} m Set\n             * @param {$protobuf.IConversionOptions} [o] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            Set.toObject = function toObject(m, o) {\n                if (!o)\n                    o = {};\n                var d = {};\n                if (o.defaults) {\n                    d.version = 0;\n                    d.fanout = 0;\n                    d.seed = 0;\n                }\n                if (m.version != null && m.hasOwnProperty(\"version\")) {\n                    d.version = m.version;\n                }\n                if (m.fanout != null && m.hasOwnProperty(\"fanout\")) {\n                    d.fanout = m.fanout;\n                }\n                if (m.seed != null && m.hasOwnProperty(\"seed\")) {\n                    d.seed = m.seed;\n                }\n                return d;\n            };\n\n            /**\n             * Converts this Set to JSON.\n             * @function toJSON\n             * @memberof ipfs.pin.Set\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            Set.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n\n            return Set;\n        })();\n\n        return pin;\n    })();\n\n    return ipfs;\n})();\n\nexport { $root as default };\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * FNV-1a hash generation init value.\n * It's exposed, because this allows user to override it.\n * More info: https://en.wikipedia.org/wiki/Fowler%E2%80%93Noll%E2%80%93Vo_hash_function#FNV_hash_parameters\n *\n * @type {number}\n */\nhash.BASE = 0x811c9dc5;\n/**\n * Generates 32 bit FNV-1a hash from the given string.\n * As explained here: http://isthe.com/chongo/tech/comp/fnv/\n *\n * @param s {string} String to generate hash from.\n * @param [h] {number} FNV-1a hash generation init value.\n * @returns {number} The result integer hash.\n */\nfunction hash(s, h = hash.BASE) {\n    const l = s.length;\n    for (let i = 0; i < l; i++) {\n        h ^= s.charCodeAt(i);\n        h += (h << 1) + (h << 4) + (h << 7) + (h << 8) + (h << 24);\n    }\n    return h >>> 0;\n}\nexports.default = hash;\nmodule.exports = hash;\n","\nimport { Key } from 'interface-datastore/key'\nimport { base32 } from 'multiformats/bases/base32'\nimport { CID } from 'multiformats/cid'\n\nexport const PIN_DS_KEY = new Key('/local/pins')\nexport const DEFAULT_FANOUT = 256\nexport const MAX_ITEMS = 8192\nexport const EMPTY_KEY = CID.parse('QmdfTbBqBPQ7VNxZEYEj14VmRuZBkqFbiwReogJgS1zR1n')\n\nexport const PinTypes = {\n  direct: 'direct',\n  recursive: 'recursive'\n}\n\n/**\n * @param {import('multiformats').CID} cid\n */\n export function cidToKey (cid) {\n  return new Key(`/${base32.encode(cid.multihash.bytes).toUpperCase().substring(1)}`)\n}\n","import * as Digest from './digest.js';\nexport const from = ({name, code, encode}) => new Hasher(name, code, encode);\nexport class Hasher {\n  constructor(name, code, encode) {\n    this.name = name;\n    this.code = code;\n    this.encode = encode;\n  }\n  digest(input) {\n    if (input instanceof Uint8Array) {\n      const result = this.encode(input);\n      return result instanceof Uint8Array ? Digest.create(this.code, result) : result.then(digest => Digest.create(this.code, digest));\n    } else {\n      throw Error('Unknown type, must be binary type');\n    }\n  }\n}","import { from } from './hasher.js';\nconst sha = name => async data => new Uint8Array(await crypto.subtle.digest(name, data));\nexport const sha256 = from({\n  name: 'sha2-256',\n  code: 18,\n  encode: sha('SHA-256')\n});\nexport const sha512 = from({\n  name: 'sha2-512',\n  code: 19,\n  encode: sha('SHA-512')\n});","\nimport { CID } from 'multiformats/cid'\nimport { ipfs } from './pin.js'\n// @ts-ignore\nimport fnv1a from 'fnv1a'\nimport varint from 'varint'\nimport * as dagPb from '@ipld/dag-pb'\nimport { DEFAULT_FANOUT, MAX_ITEMS, EMPTY_KEY } from './utils.js'\nimport { concat as uint8ArrayConcat } from 'uint8arrays/concat'\nimport { compare as uint8ArrayCompare } from 'uint8arrays/compare'\nimport { toString as uint8ArrayToString } from 'uint8arrays/to-string'\nimport { fromString as uint8ArrayFromString } from 'uint8arrays/from-string'\nimport { sha256 } from 'multiformats/hashes/sha2'\n\nconst PinSet = ipfs.pin.Set\n\n/**\n * @typedef {import('interface-datastore').Datastore} Datastore\n * @typedef {import('interface-blockstore').Blockstore} Blockstore\n * @typedef {import('@ipld/dag-pb').PBNode} PBNode\n *\n * @typedef {object} Pin\n * @property {CID} key\n * @property {Uint8Array} [data]\n */\n\n/**\n * @param {PBNode} rootNode\n */\nfunction readHeader (rootNode) {\n  // rootNode.data should be a buffer of the format:\n  // < varint(headerLength) | header | itemData... >\n  const rootData = rootNode.Data\n\n  if (!rootData) {\n    throw new Error('No data present')\n  }\n\n  const hdrLength = varint.decode(rootData)\n  const vBytes = varint.decode.bytes\n\n  if (vBytes <= 0) {\n    throw new Error('Invalid Set header length')\n  }\n\n  if (vBytes + hdrLength > rootData.length) {\n    throw new Error('Impossibly large set header length')\n  }\n\n  const hdrSlice = rootData.slice(vBytes, hdrLength + vBytes)\n  const header = PinSet.toObject(PinSet.decode(hdrSlice), {\n    defaults: false,\n    arrays: true,\n    longs: Number,\n    objects: false\n  })\n\n  if (header.version !== 1) {\n    throw new Error(`Unsupported Set version: ${header.version}`)\n  }\n\n  if (header.fanout > rootNode.Links.length) {\n    throw new Error('Impossibly large fanout')\n  }\n\n  return {\n    header: header,\n    data: rootData.slice(hdrLength + vBytes)\n  }\n}\n\n/**\n * @param {number} seed\n * @param {CID} key\n */\nfunction hash (seed, key) {\n  const buffer = new Uint8Array(4)\n  const dataView = new DataView(buffer.buffer)\n  dataView.setUint32(0, seed, true)\n  const encodedKey = uint8ArrayFromString(key.toString())\n  const data = uint8ArrayConcat([buffer, encodedKey], buffer.byteLength + encodedKey.byteLength)\n\n  return fnv1a(uint8ArrayToString(data))\n}\n\n/**\n * @param {Blockstore} blockstore\n * @param {PBNode} node\n * @returns {AsyncGenerator<CID, void, undefined>}\n */\nasync function * walkItems (blockstore, node) {\n  const pbh = readHeader(node)\n  let idx = 0\n\n  for (const link of node.Links) {\n    if (idx < pbh.header.fanout) {\n      // the first pbh.header.fanout links are fanout bins\n      // if a fanout bin is not 'empty', dig into and walk its DAGLinks\n      const linkHash = link.Hash\n\n      if (!EMPTY_KEY.equals(linkHash)) {\n        // walk the links of this fanout bin\n        const buf = await blockstore.get(linkHash)\n        const node = dagPb.decode(buf)\n\n        yield * walkItems(blockstore, node)\n      }\n    } else {\n      // otherwise, the link is a pin\n      yield link.Hash\n    }\n\n    idx++\n  }\n}\n\n/**\n * @param {Blockstore} blockstore\n * @param {PBNode} rootNode\n * @param {string} name\n */\nexport async function * loadSet (blockstore, rootNode, name) {\n  const link = rootNode.Links.find(l => l.Name === name)\n\n  if (!link) {\n    throw new Error('No link found with name ' + name)\n  }\n\n  const buf = await blockstore.get(link.Hash)\n  const node = dagPb.decode(buf)\n\n  yield * walkItems(blockstore, node)\n}\n\n/**\n * @param {Blockstore} blockstore\n * @param {Pin[]} items\n */\nfunction storeItems (blockstore, items) {\n  return storePins(items, 0)\n\n  /**\n   * @param {Pin[]} pins\n   * @param {number} depth\n   */\n  async function storePins (pins, depth) {\n    const pbHeader = PinSet.encode({\n      version: 1,\n      fanout: DEFAULT_FANOUT,\n      seed: depth\n    }).finish()\n\n    const header = varint.encode(pbHeader.length)\n    const headerBuf = uint8ArrayConcat([header, pbHeader])\n    const fanoutLinks = []\n\n    for (let i = 0; i < DEFAULT_FANOUT; i++) {\n      fanoutLinks.push({\n        Name: '',\n        Tsize: 1,\n        Hash: EMPTY_KEY\n      })\n    }\n\n    if (pins.length <= MAX_ITEMS) {\n      const nodes = pins\n        .map(item => {\n          return ({\n            link: {\n              Name: '',\n              Tsize: 1,\n              Hash: item.key\n            },\n            data: item.data || new Uint8Array()\n          })\n        })\n        // sorting makes any ordering of `pins` produce the same DAGNode\n        .sort((a, b) => {\n          return uint8ArrayCompare(a.link.Hash.bytes, b.link.Hash.bytes)\n        })\n\n      const rootLinks = fanoutLinks.concat(nodes.map(item => item.link))\n      const rootData = uint8ArrayConcat([headerBuf, ...nodes.map(item => item.data)])\n\n      return {\n        Data: rootData,\n        Links: rootLinks\n      }\n    } else {\n      // If the array of pins is > MAX_ITEMS, we:\n      //  - distribute the pins among `DEFAULT_FANOUT` bins\n      //    - create a DAGNode for each bin\n      //      - add each pin as a DAGLink to that bin\n      //  - create a root DAGNode\n      //    - add each bin as a DAGLink\n      //  - send that root DAGNode via callback\n      // (using go-ipfs' \"wasteful but simple\" approach for consistency)\n      // https://github.com/ipfs/go-ipfs/blob/master/pin/set.go#L57\n\n      /** @type {Pin[][]} */\n      const bins = pins.reduce((bins, pin) => {\n        const n = hash(depth, pin.key) % DEFAULT_FANOUT\n        // @ts-ignore\n        bins[n] = n in bins ? bins[n].concat([pin]) : [pin]\n        return bins\n      }, [])\n\n      let idx = 0\n      for (const bin of bins) {\n        const child = await storePins(bin, depth + 1)\n\n        await storeChild(child, idx)\n\n        idx++\n      }\n\n      return {\n        Data: headerBuf,\n        Links: fanoutLinks\n      }\n    }\n\n    /**\n     * @param {PBNode} child\n     * @param {number} binIdx\n     */\n    async function storeChild (child, binIdx) {\n      const buf = dagPb.encode(child)\n      const digest = await sha256.digest(buf)\n      const cid = CID.createV0(digest)\n\n      await blockstore.put(cid, buf)\n\n      const size = child.Links.reduce((acc, curr) => acc + (curr.Tsize || 0), 0) + buf.length\n\n      fanoutLinks[binIdx] = {\n        Name: '',\n        Tsize: size,\n        Hash: cid\n      }\n    }\n  }\n}\n\n/**\n * @param {Blockstore} blockstore\n * @param {string} type\n * @param {CID[]} cids\n */\nexport async function storeSet (blockstore, type, cids) {\n  const rootNode = await storeItems(blockstore, cids.map(cid => {\n    return {\n      key: cid\n    }\n  }))\n  const buf = dagPb.encode(rootNode)\n  const digest = await sha256.digest(buf)\n  const cid = CID.createV0(digest)\n\n  await blockstore.put(cid, buf)\n\n  const size = rootNode.Links.reduce((acc, curr) => acc + curr.Tsize, 0) + buf.length\n\n  return {\n    Name: type,\n    Tsize: size,\n    Hash: cid\n  }\n}\n","\nimport { CID } from 'multiformats/cid'\nimport * as dagPb from '@ipld/dag-pb'\nimport * as cbor from 'cborg'\nimport * as pinset from './pin-set.js'\nimport { cidToKey, PIN_DS_KEY, PinTypes } from './utils.js'\nimport length from 'it-length'\nimport { sha256 } from 'multiformats/hashes/sha2'\nimport * as mhd from 'multiformats/hashes/digest'\nimport { base32 } from 'multiformats/bases/base32'\n\n/**\n * @typedef {import('../../src/types').Migration} Migration\n * @typedef {import('../../src/types').MigrationProgressCallback} MigrationProgressCallback\n * @typedef {import('interface-datastore').Datastore} Datastore\n * @typedef {import('interface-blockstore').Blockstore} Blockstore\n * @typedef {import('multiformats/cid').CIDVersion} CIDVersion\n */\n\n/**\n * @param {Blockstore} blockstore\n * @param {Datastore} datastore\n * @param {Datastore} pinstore\n * @param {MigrationProgressCallback} onProgress\n */\nasync function pinsToDatastore (blockstore, datastore, pinstore, onProgress) {\n  if (!await datastore.has(PIN_DS_KEY)) {\n    return\n  }\n\n  const mh = await datastore.get(PIN_DS_KEY)\n  const cid = CID.decode(mh)\n  const pinRootBuf = await blockstore.get(cid)\n  const pinRoot = dagPb.decode(pinRootBuf)\n  let counter = 0\n  const pinCount = (await length(pinset.loadSet(blockstore, pinRoot, PinTypes.recursive))) + (await length(pinset.loadSet(blockstore, pinRoot, PinTypes.direct)))\n\n  for await (const cid of pinset.loadSet(blockstore, pinRoot, PinTypes.recursive)) {\n    counter++\n\n    /** @type {{ depth: number, version?: CIDVersion, codec?: number }} */\n    const pin = {\n      depth: Infinity\n    }\n\n    if (cid.version !== 0) {\n      pin.version = cid.version\n    }\n\n    if (cid.code !== dagPb.code) {\n      pin.codec = cid.code\n    }\n\n    await pinstore.put(cidToKey(cid), cbor.encode(pin))\n\n    onProgress((counter / pinCount) * 100, `Migrated recursive pin ${cid}`)\n  }\n\n  for await (const cid of pinset.loadSet(blockstore, pinRoot, PinTypes.direct)) {\n    counter++\n\n    /** @type {{ depth: number, version?: CIDVersion, codec?: number }} */\n    const pin = {\n      depth: 0\n    }\n\n    if (cid.version !== 0) {\n      pin.version = cid.version\n    }\n\n    if (cid.code !== dagPb.code) {\n      pin.codec = cid.code\n    }\n\n    await pinstore.put(cidToKey(cid), cbor.encode(pin))\n\n    onProgress((counter / pinCount) * 100, `Migrated direct pin ${cid}`)\n  }\n\n  await blockstore.delete(cid)\n  await datastore.delete(PIN_DS_KEY)\n}\n\n/**\n * @param {Blockstore} blockstore\n * @param {Datastore} datastore\n * @param {Datastore} pinstore\n * @param {MigrationProgressCallback} onProgress\n */\nasync function pinsToDAG (blockstore, datastore, pinstore, onProgress) {\n  const recursivePins = []\n  const directPins = []\n  let counter = 0\n  const pinCount = await length(pinstore.queryKeys({}))\n\n  for await (const { key, value } of pinstore.query({})) {\n    counter++\n    const pin = cbor.decode(value)\n    const cid = CID.create(\n      pin.version || 0,\n      pin.codec || dagPb.code,\n      mhd.decode(base32.decode('b' + key.toString().toLowerCase().split('/').pop()))\n    )\n\n    if (pin.depth === 0) {\n      onProgress((counter / pinCount) * 100, `Reverted direct pin ${cid}`)\n\n      directPins.push(cid)\n    } else {\n      onProgress((counter / pinCount) * 100, `Reverted recursive pin ${cid}`)\n\n      recursivePins.push(cid)\n    }\n  }\n\n  onProgress(100, 'Updating pin root')\n  const pinRoot = {\n    Links: [\n      await pinset.storeSet(blockstore, PinTypes.direct, directPins),\n      await pinset.storeSet(blockstore, PinTypes.recursive, recursivePins)\n    ]\n  }\n  const buf = dagPb.encode(pinRoot)\n  const digest = await sha256.digest(buf)\n  const cid = CID.createV0(digest)\n\n  await blockstore.put(cid, buf)\n  await datastore.put(PIN_DS_KEY, cid.bytes)\n}\n\n/**\n * @param {import('../../src/types').Backends} backends\n * @param {MigrationProgressCallback} onProgress\n * @param {*} fn\n */\nasync function process (backends, onProgress, fn) {\n  const blockstore = backends.blocks\n  const datastore = backends.datastore\n  const pinstore = backends.pins\n\n  await blockstore.open()\n  await datastore.open()\n  await pinstore.open()\n\n  try {\n    await fn(blockstore, datastore, pinstore, onProgress)\n  } finally {\n    await pinstore.close()\n    await datastore.close()\n    await blockstore.close()\n  }\n}\n\n/** @type {Migration} */\nexport const migration = {\n  version: 9,\n  description: 'Migrates pins to datastore',\n  migrate: (backends, onProgress = () => {}) => {\n    return process(backends, onProgress, pinsToDatastore)\n  },\n  revert: (backends, onProgress = () => {}) => {\n    return process(backends, onProgress, pinsToDAG)\n  }\n}\n","import errCode from 'err-code'\n\n/**\n * @param {Error} [err]\n */\nexport function dbOpenFailedError (err) {\n  err = err || new Error('Cannot open database')\n  return errCode(err, 'ERR_DB_OPEN_FAILED')\n}\n\n/**\n * @param {Error} [err]\n */\nexport function dbDeleteFailedError (err) {\n  err = err || new Error('Delete failed')\n  return errCode(err, 'ERR_DB_DELETE_FAILED')\n}\n\n/**\n * @param {Error} [err]\n */\nexport function dbWriteFailedError (err) {\n  err = err || new Error('Write failed')\n  return errCode(err, 'ERR_DB_WRITE_FAILED')\n}\n\n/**\n * @param {Error} [err]\n */\nexport function notFoundError (err) {\n  err = err || new Error('Not Found')\n  return errCode(err, 'ERR_NOT_FOUND')\n}\n\n/**\n * @param {Error} [err]\n */\nexport function abortedError (err) {\n  err = err || new Error('Aborted')\n  return errCode(err, 'ERR_ABORTED')\n}\n","\nimport { Key } from 'interface-datastore/key'\nimport { notFoundError } from 'datastore-core/errors'\n\n/**\n * @typedef {import('interface-datastore').Datastore} Datastore\n */\n\nexport const CONFIG_KEY = new Key('/config')\nexport const VERSION_KEY = new Key('/version')\n\n/**\n * Level dbs wrap level dbs that wrap level dbs. Find a level-js\n * instance in the chain if one exists.\n *\n * @param {Datastore} store\n * @returns {Datastore | undefined}\n */\nexport function findLevelJs (store) {\n  let db = store\n\n  // @ts-ignore\n  while (db.db || db.child) {\n    // @ts-ignore\n    db = db.db || db.child\n\n    // `Level` is only present in the browser, in node it is LevelDOWN\n    // @ts-ignore\n    if (db.type === 'level-js' || db.constructor.name === 'Level') {\n      return db\n    }\n  }\n}\n\n/**\n * @param {Key} key\n * @param {function (Key): Promise<boolean>} has\n * @param {Datastore} store\n * @returns {Promise<boolean>}\n */\nexport async function hasWithFallback (key, has, store) {\n  const result = await has(key)\n\n  if (result) {\n    return result\n  }\n\n  // Newer versions of level.js changed the key type from Uint8Array|string\n  // to Uint8Array  so fall back to trying Uint8Arrays if we are using level.js\n  // and the string version of the key did not work\n  const levelJs = findLevelJs(store)\n\n  if (!levelJs) {\n    return false\n  }\n\n  return new Promise((resolve, reject) => {\n    // drop down to IndexDB API, otherwise level-js will monkey around with the keys/values\n    // @ts-ignore\n    const req = levelJs.store('readonly').get(key.toString())\n    req.transaction.onabort = () => {\n      reject(req.transaction.error)\n    }\n    req.transaction.oncomplete = () => {\n      resolve(Boolean(req.result))\n    }\n  })\n}\n\n/**\n * @param {import('interface-datastore').Key} key\n * @param {function (Key): Promise<Uint8Array>} get\n * @param {function (Key): Promise<boolean>} has\n * @param {import('interface-datastore').Datastore} store\n * @returns {Promise<Uint8Array>}\n */\nasync function getWithFallback (key, get, has, store) {\n  if (await has(key)) {\n    return get(key)\n  }\n\n  // Newer versions of level.js changed the key type from Uint8Array|string\n  // to Uint8Array so fall back to trying Uint8Arrays if we are using level.js\n  // and the string version of the key did not work\n  const levelJs = findLevelJs(store)\n\n  if (!levelJs) {\n    throw notFoundError()\n  }\n\n  return new Promise((resolve, reject) => {\n    // drop down to IndexDB API, otherwise level-js will monkey around with the keys/values\n    // @ts-ignore\n    const req = levelJs.store('readonly').get(key.toString())\n    req.transaction.onabort = () => {\n      reject(req.transaction.error)\n    }\n    req.transaction.oncomplete = () => {\n      if (req.result) {\n        return resolve(req.result)\n      }\n\n      reject(notFoundError())\n    }\n  })\n}\n\n/**\n * @param {Datastore} store\n */\nfunction wrapStore (store) {\n  // necessary since level-js@5 cannot read keys from level-js@4 and earlier\n  const originalGet = store.get.bind(store)\n  const originalHas = store.has.bind(store)\n  /**\n   * @param {Key} key\n   */\n  store.get = (key) => getWithFallback(key, originalGet, originalHas, store)\n  /**\n   * @param {Key} key\n   */\n  store.has = (key) => hasWithFallback(key, originalHas, store)\n\n  return store\n}\n\n/**\n * @param {import('./types').Backends} backends\n */\nexport function wrapBackends (backends) {\n  return {\n    ...backends,\n    root: wrapStore(backends.root),\n    datastore: wrapStore(backends.datastore),\n    pins: wrapStore(backends.pins),\n    keys: wrapStore(backends.keys)\n  }\n}\n","\nimport { findLevelJs } from '../../src/utils.js'\nimport { fromString } from 'uint8arrays/from-string'\nimport { toString } from 'uint8arrays/to-string'\n\n/**\n * @typedef {import('../../src/types').Migration} Migration\n * @typedef {import('interface-datastore').Datastore} Datastore\n * @typedef {import('interface-blockstore').Blockstore} Blockstore\n * @typedef {import('../../src/types').MigrationProgressCallback} MigrationProgressCallback\n *\n * @typedef {{ type: 'del', key: string | Uint8Array } | { type: 'put', key: string | Uint8Array, value: Uint8Array }} Operation\n * @typedef {function (string, Uint8Array): Operation[]} UpgradeFunction\n * @typedef {function (Uint8Array, Uint8Array): Operation[]} DowngradeFunction\n */\n\n/**\n * @param {string} name\n * @param {Datastore} store\n * @param {(message: string) => void} onProgress\n */\nasync function keysToBinary (name, store, onProgress = () => {}) {\n  const db = findLevelJs(store)\n\n  // only interested in level-js\n  if (!db) {\n    onProgress(`${name} did not need an upgrade`)\n\n    return\n  }\n\n  onProgress(`Upgrading ${name}`)\n\n  /**\n   * @type {UpgradeFunction}\n   */\n  const upgrade = (key, value) => {\n    return [\n      { type: 'del', key: key },\n      { type: 'put', key: fromString(key), value: value }\n    ]\n  }\n\n  await withEach(db, upgrade)\n}\n\n/**\n * @param {string} name\n * @param {Datastore} store\n * @param {(message: string) => void} onProgress\n */\nasync function keysToStrings (name, store, onProgress = () => {}) {\n  const db = findLevelJs(store)\n\n  // only interested in level-js\n  if (!db) {\n    onProgress(`${name} did not need a downgrade`)\n\n    return\n  }\n\n  onProgress(`Downgrading ${name}`)\n\n  /**\n   * @type {DowngradeFunction}\n   */\n  const downgrade = (key, value) => {\n    return [\n      { type: 'del', key: key },\n      { type: 'put', key: toString(key), value: value }\n    ]\n  }\n\n  await withEach(db, downgrade)\n}\n\n/**\n * @param {any} store\n * @returns {Datastore}\n */\nfunction unwrap (store) {\n  if (store.child) {\n    return unwrap(store.child)\n  }\n\n  return store\n}\n\n/**\n * @param {import('../../src/types').Backends} backends\n * @param {MigrationProgressCallback} onProgress\n * @param {*} fn\n */\nasync function process (backends, onProgress, fn) {\n  /**\n   * @type {{ name: string, store: Datastore }[]}\n   */\n  const datastores = Object.entries(backends)\n    .map(([key, backend]) => ({ key, backend: unwrap(backend) }))\n    .filter(({ key, backend }) => backend.constructor.name === 'LevelDatastore')\n    .map(({ key, backend }) => ({\n      name: key,\n      store: backend\n    }))\n\n  onProgress(0, `Migrating ${datastores.length} dbs`)\n  let migrated = 0\n\n  /**\n   * @param {string} message\n   */\n  const progress = (message) => {\n    onProgress(Math.round((migrated / datastores.length) * 100), message)\n  }\n\n  for (const { name, store } of datastores) {\n    await store.open()\n\n    try {\n      await fn(name, store, progress)\n    } finally {\n      migrated++\n      await store.close()\n    }\n  }\n\n  onProgress(100, `Migrated ${datastores.length} dbs`)\n}\n\n/** @type {Migration} */\nexport const migration = {\n  version: 10,\n  description: 'Migrates datastore-level keys to binary',\n  migrate: (backends, onProgress = () => {}) => {\n    return process(backends, onProgress, keysToBinary)\n  },\n  revert: (backends, onProgress = () => {}) => {\n    return process(backends, onProgress, keysToStrings)\n  }\n}\n\n/**\n * Uses the upgrade strategy from level-js@5.x.x - note we can't call the `.upgrade` command\n * directly because it will be removed in level-js@6.x.x and we can't guarantee users will\n * have migrated by then - e.g. they may jump from level-js@4.x.x straight to level-js@6.x.x\n * so we have to duplicate the code here.\n *\n * @param {any} db\n * @param {UpgradeFunction | DowngradeFunction} fn\n * @returns {Promise<void>}\n */\nfunction withEach (db, fn) {\n  /**\n   * @param {Operation[]} operations\n   * @param {(error?: Error) => void} next\n   */\n  function batch (operations, next) {\n    const store = db.store('readwrite')\n    const transaction = store.transaction\n    let index = 0\n    /** @type {Error | undefined} */\n    let error\n\n    transaction.onabort = () => next(error || transaction.error || new Error('aborted by user'))\n    transaction.oncomplete = () => next()\n\n    function loop () {\n      const op = operations[index++]\n      const key = op.key\n      let req\n\n      try {\n        req = op.type === 'del' ? store.delete(key) : store.put(op.value, key)\n      } catch (/** @type {any} */ err) {\n        error = err\n        transaction.abort()\n        return\n      }\n\n      if (index < operations.length) {\n        req.onsuccess = loop\n      }\n    }\n\n    loop()\n  }\n\n  return new Promise((resolve, reject) => {\n    const it = db.iterator()\n    // raw keys and values only\n    /**\n     * @template T\n     * @param {T} data\n     */\n    const id = (data) => data\n    it._deserializeKey = it._deserializeValue = id\n    next()\n\n    function next () {\n      /**\n       * @param {Error | undefined} err\n       * @param {string | undefined} key\n       * @param {Uint8Array} value\n       */\n      const handleNext = (err, key, value) => {\n        if (err || key === undefined) {\n          /**\n           * @param {Error | undefined} err2\n           */\n          const handleEnd = (err2) => {\n            if (err2) {\n              reject(err2)\n              return\n            }\n\n            resolve()\n          }\n\n          it.end(handleEnd)\n\n          return\n        }\n\n        // @ts-ignore\n        batch(fn(key, value), next)\n      }\n      it.next(handleNext)\n    }\n  })\n}\n","\nimport { Key } from 'interface-datastore/key'\n\nconst MFS_ROOT_KEY = new Key('/local/filesroot')\n\n/**\n * @param {import('../../src/types').Backends} backends\n * @param {import('../../src/types').MigrationProgressCallback} onProgress\n */\nasync function storeMfsRootInDatastore (backends, onProgress = () => {}) {\n  onProgress(100, 'Migrating MFS root to repo datastore')\n\n  await backends.root.open()\n  await backends.datastore.open()\n\n  if (await backends.root.has(MFS_ROOT_KEY)) {\n    const root = await backends.root.get(MFS_ROOT_KEY)\n    await backends.datastore.put(MFS_ROOT_KEY, root)\n    await backends.root.delete(MFS_ROOT_KEY)\n  }\n\n  await backends.datastore.close()\n  await backends.root.close()\n\n  onProgress(100, 'Stored MFS root in repo datastore')\n}\n\n/**\n * @param {import('../../src/types').Backends} backends\n * @param {import('../../src/types').MigrationProgressCallback} onProgress\n */\nasync function storeMfsRootInRoot (backends, onProgress = () => {}) {\n  onProgress(100, 'Migrating MFS root to repo root datastore')\n\n  await backends.root.open()\n  await backends.datastore.open()\n\n  if (await backends.datastore.has(MFS_ROOT_KEY)) {\n    const root = await backends.datastore.get(MFS_ROOT_KEY)\n    await backends.root.put(MFS_ROOT_KEY, root)\n    await backends.datastore.delete(MFS_ROOT_KEY)\n  }\n\n  await backends.datastore.close()\n  await backends.root.close()\n\n  onProgress(100, 'Stored MFS root in repo root datastore')\n}\n\n/** @type {import('../../src/types').Migration} */\nexport const migration = {\n  version: 11,\n  description: 'Store mfs root in the datastore',\n  migrate: storeMfsRootInDatastore,\n  revert: storeMfsRootInRoot\n}\n","/*eslint-disable*/\nimport $protobuf from \"protobufjs/minimal.js\";\n\n// Common aliases\nconst $Reader = $protobuf.Reader, $Writer = $protobuf.Writer, $util = $protobuf.util;\n\n// Exported root namespace\nconst $root = $protobuf.roots[\"default\"] || ($protobuf.roots[\"default\"] = {});\n\nexport const Protocols = $root.Protocols = (() => {\n\n    /**\n     * Properties of a Protocols.\n     * @exports IProtocols\n     * @interface IProtocols\n     * @property {Array.<string>|null} [protocols] Protocols protocols\n     */\n\n    /**\n     * Constructs a new Protocols.\n     * @exports Protocols\n     * @classdesc Represents a Protocols.\n     * @implements IProtocols\n     * @constructor\n     * @param {IProtocols=} [p] Properties to set\n     */\n    function Protocols(p) {\n        this.protocols = [];\n        if (p)\n            for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)\n                if (p[ks[i]] != null)\n                    this[ks[i]] = p[ks[i]];\n    }\n\n    /**\n     * Protocols protocols.\n     * @member {Array.<string>} protocols\n     * @memberof Protocols\n     * @instance\n     */\n    Protocols.prototype.protocols = $util.emptyArray;\n\n    /**\n     * Encodes the specified Protocols message. Does not implicitly {@link Protocols.verify|verify} messages.\n     * @function encode\n     * @memberof Protocols\n     * @static\n     * @param {IProtocols} m Protocols message or plain object to encode\n     * @param {$protobuf.Writer} [w] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    Protocols.encode = function encode(m, w) {\n        if (!w)\n            w = $Writer.create();\n        if (m.protocols != null && m.protocols.length) {\n            for (var i = 0; i < m.protocols.length; ++i)\n                w.uint32(10).string(m.protocols[i]);\n        }\n        return w;\n    };\n\n    /**\n     * Decodes a Protocols message from the specified reader or buffer.\n     * @function decode\n     * @memberof Protocols\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from\n     * @param {number} [l] Message length if known beforehand\n     * @returns {Protocols} Protocols\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    Protocols.decode = function decode(r, l) {\n        if (!(r instanceof $Reader))\n            r = $Reader.create(r);\n        var c = l === undefined ? r.len : r.pos + l, m = new $root.Protocols();\n        while (r.pos < c) {\n            var t = r.uint32();\n            switch (t >>> 3) {\n            case 1:\n                if (!(m.protocols && m.protocols.length))\n                    m.protocols = [];\n                m.protocols.push(r.string());\n                break;\n            default:\n                r.skipType(t & 7);\n                break;\n            }\n        }\n        return m;\n    };\n\n    /**\n     * Creates a Protocols message from a plain object. Also converts values to their respective internal types.\n     * @function fromObject\n     * @memberof Protocols\n     * @static\n     * @param {Object.<string,*>} d Plain object\n     * @returns {Protocols} Protocols\n     */\n    Protocols.fromObject = function fromObject(d) {\n        if (d instanceof $root.Protocols)\n            return d;\n        var m = new $root.Protocols();\n        if (d.protocols) {\n            if (!Array.isArray(d.protocols))\n                throw TypeError(\".Protocols.protocols: array expected\");\n            m.protocols = [];\n            for (var i = 0; i < d.protocols.length; ++i) {\n                m.protocols[i] = String(d.protocols[i]);\n            }\n        }\n        return m;\n    };\n\n    /**\n     * Creates a plain object from a Protocols message. Also converts values to other types if specified.\n     * @function toObject\n     * @memberof Protocols\n     * @static\n     * @param {Protocols} m Protocols\n     * @param {$protobuf.IConversionOptions} [o] Conversion options\n     * @returns {Object.<string,*>} Plain object\n     */\n    Protocols.toObject = function toObject(m, o) {\n        if (!o)\n            o = {};\n        var d = {};\n        if (o.arrays || o.defaults) {\n            d.protocols = [];\n        }\n        if (m.protocols && m.protocols.length) {\n            d.protocols = [];\n            for (var j = 0; j < m.protocols.length; ++j) {\n                d.protocols[j] = m.protocols[j];\n            }\n        }\n        return d;\n    };\n\n    /**\n     * Converts this Protocols to JSON.\n     * @function toJSON\n     * @memberof Protocols\n     * @instance\n     * @returns {Object.<string,*>} JSON object\n     */\n    Protocols.prototype.toJSON = function toJSON() {\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n    };\n\n    return Protocols;\n})();\n\nexport { $root as default };\n","/*eslint-disable*/\nimport $protobuf from \"protobufjs/minimal.js\";\n\n// Common aliases\nconst $Reader = $protobuf.Reader, $Writer = $protobuf.Writer, $util = $protobuf.util;\n\n// Exported root namespace\nconst $root = $protobuf.roots[\"default\"] || ($protobuf.roots[\"default\"] = {});\n\nexport const Addresses = $root.Addresses = (() => {\n\n    /**\n     * Properties of an Addresses.\n     * @exports IAddresses\n     * @interface IAddresses\n     * @property {Array.<Addresses.IAddress>|null} [addrs] Addresses addrs\n     * @property {Addresses.ICertifiedRecord|null} [certifiedRecord] Addresses certifiedRecord\n     */\n\n    /**\n     * Constructs a new Addresses.\n     * @exports Addresses\n     * @classdesc Represents an Addresses.\n     * @implements IAddresses\n     * @constructor\n     * @param {IAddresses=} [p] Properties to set\n     */\n    function Addresses(p) {\n        this.addrs = [];\n        if (p)\n            for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)\n                if (p[ks[i]] != null)\n                    this[ks[i]] = p[ks[i]];\n    }\n\n    /**\n     * Addresses addrs.\n     * @member {Array.<Addresses.IAddress>} addrs\n     * @memberof Addresses\n     * @instance\n     */\n    Addresses.prototype.addrs = $util.emptyArray;\n\n    /**\n     * Addresses certifiedRecord.\n     * @member {Addresses.ICertifiedRecord|null|undefined} certifiedRecord\n     * @memberof Addresses\n     * @instance\n     */\n    Addresses.prototype.certifiedRecord = null;\n\n    /**\n     * Encodes the specified Addresses message. Does not implicitly {@link Addresses.verify|verify} messages.\n     * @function encode\n     * @memberof Addresses\n     * @static\n     * @param {IAddresses} m Addresses message or plain object to encode\n     * @param {$protobuf.Writer} [w] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    Addresses.encode = function encode(m, w) {\n        if (!w)\n            w = $Writer.create();\n        if (m.addrs != null && m.addrs.length) {\n            for (var i = 0; i < m.addrs.length; ++i)\n                $root.Addresses.Address.encode(m.addrs[i], w.uint32(10).fork()).ldelim();\n        }\n        if (m.certifiedRecord != null && Object.hasOwnProperty.call(m, \"certifiedRecord\"))\n            $root.Addresses.CertifiedRecord.encode(m.certifiedRecord, w.uint32(18).fork()).ldelim();\n        return w;\n    };\n\n    /**\n     * Decodes an Addresses message from the specified reader or buffer.\n     * @function decode\n     * @memberof Addresses\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from\n     * @param {number} [l] Message length if known beforehand\n     * @returns {Addresses} Addresses\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    Addresses.decode = function decode(r, l) {\n        if (!(r instanceof $Reader))\n            r = $Reader.create(r);\n        var c = l === undefined ? r.len : r.pos + l, m = new $root.Addresses();\n        while (r.pos < c) {\n            var t = r.uint32();\n            switch (t >>> 3) {\n            case 1:\n                if (!(m.addrs && m.addrs.length))\n                    m.addrs = [];\n                m.addrs.push($root.Addresses.Address.decode(r, r.uint32()));\n                break;\n            case 2:\n                m.certifiedRecord = $root.Addresses.CertifiedRecord.decode(r, r.uint32());\n                break;\n            default:\n                r.skipType(t & 7);\n                break;\n            }\n        }\n        return m;\n    };\n\n    /**\n     * Creates an Addresses message from a plain object. Also converts values to their respective internal types.\n     * @function fromObject\n     * @memberof Addresses\n     * @static\n     * @param {Object.<string,*>} d Plain object\n     * @returns {Addresses} Addresses\n     */\n    Addresses.fromObject = function fromObject(d) {\n        if (d instanceof $root.Addresses)\n            return d;\n        var m = new $root.Addresses();\n        if (d.addrs) {\n            if (!Array.isArray(d.addrs))\n                throw TypeError(\".Addresses.addrs: array expected\");\n            m.addrs = [];\n            for (var i = 0; i < d.addrs.length; ++i) {\n                if (typeof d.addrs[i] !== \"object\")\n                    throw TypeError(\".Addresses.addrs: object expected\");\n                m.addrs[i] = $root.Addresses.Address.fromObject(d.addrs[i]);\n            }\n        }\n        if (d.certifiedRecord != null) {\n            if (typeof d.certifiedRecord !== \"object\")\n                throw TypeError(\".Addresses.certifiedRecord: object expected\");\n            m.certifiedRecord = $root.Addresses.CertifiedRecord.fromObject(d.certifiedRecord);\n        }\n        return m;\n    };\n\n    /**\n     * Creates a plain object from an Addresses message. Also converts values to other types if specified.\n     * @function toObject\n     * @memberof Addresses\n     * @static\n     * @param {Addresses} m Addresses\n     * @param {$protobuf.IConversionOptions} [o] Conversion options\n     * @returns {Object.<string,*>} Plain object\n     */\n    Addresses.toObject = function toObject(m, o) {\n        if (!o)\n            o = {};\n        var d = {};\n        if (o.arrays || o.defaults) {\n            d.addrs = [];\n        }\n        if (o.defaults) {\n            d.certifiedRecord = null;\n        }\n        if (m.addrs && m.addrs.length) {\n            d.addrs = [];\n            for (var j = 0; j < m.addrs.length; ++j) {\n                d.addrs[j] = $root.Addresses.Address.toObject(m.addrs[j], o);\n            }\n        }\n        if (m.certifiedRecord != null && m.hasOwnProperty(\"certifiedRecord\")) {\n            d.certifiedRecord = $root.Addresses.CertifiedRecord.toObject(m.certifiedRecord, o);\n        }\n        return d;\n    };\n\n    /**\n     * Converts this Addresses to JSON.\n     * @function toJSON\n     * @memberof Addresses\n     * @instance\n     * @returns {Object.<string,*>} JSON object\n     */\n    Addresses.prototype.toJSON = function toJSON() {\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n    };\n\n    Addresses.Address = (function() {\n\n        /**\n         * Properties of an Address.\n         * @memberof Addresses\n         * @interface IAddress\n         * @property {Uint8Array|null} [multiaddr] Address multiaddr\n         * @property {boolean|null} [isCertified] Address isCertified\n         */\n\n        /**\n         * Constructs a new Address.\n         * @memberof Addresses\n         * @classdesc Represents an Address.\n         * @implements IAddress\n         * @constructor\n         * @param {Addresses.IAddress=} [p] Properties to set\n         */\n        function Address(p) {\n            if (p)\n                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)\n                    if (p[ks[i]] != null)\n                        this[ks[i]] = p[ks[i]];\n        }\n\n        /**\n         * Address multiaddr.\n         * @member {Uint8Array} multiaddr\n         * @memberof Addresses.Address\n         * @instance\n         */\n        Address.prototype.multiaddr = $util.newBuffer([]);\n\n        /**\n         * Address isCertified.\n         * @member {boolean|null|undefined} isCertified\n         * @memberof Addresses.Address\n         * @instance\n         */\n        Address.prototype.isCertified = null;\n\n        // OneOf field names bound to virtual getters and setters\n        let $oneOfFields;\n\n        /**\n         * Address _isCertified.\n         * @member {\"isCertified\"|undefined} _isCertified\n         * @memberof Addresses.Address\n         * @instance\n         */\n        Object.defineProperty(Address.prototype, \"_isCertified\", {\n            get: $util.oneOfGetter($oneOfFields = [\"isCertified\"]),\n            set: $util.oneOfSetter($oneOfFields)\n        });\n\n        /**\n         * Encodes the specified Address message. Does not implicitly {@link Addresses.Address.verify|verify} messages.\n         * @function encode\n         * @memberof Addresses.Address\n         * @static\n         * @param {Addresses.IAddress} m Address message or plain object to encode\n         * @param {$protobuf.Writer} [w] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        Address.encode = function encode(m, w) {\n            if (!w)\n                w = $Writer.create();\n            if (m.multiaddr != null && Object.hasOwnProperty.call(m, \"multiaddr\"))\n                w.uint32(10).bytes(m.multiaddr);\n            if (m.isCertified != null && Object.hasOwnProperty.call(m, \"isCertified\"))\n                w.uint32(16).bool(m.isCertified);\n            return w;\n        };\n\n        /**\n         * Decodes an Address message from the specified reader or buffer.\n         * @function decode\n         * @memberof Addresses.Address\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from\n         * @param {number} [l] Message length if known beforehand\n         * @returns {Addresses.Address} Address\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        Address.decode = function decode(r, l) {\n            if (!(r instanceof $Reader))\n                r = $Reader.create(r);\n            var c = l === undefined ? r.len : r.pos + l, m = new $root.Addresses.Address();\n            while (r.pos < c) {\n                var t = r.uint32();\n                switch (t >>> 3) {\n                case 1:\n                    m.multiaddr = r.bytes();\n                    break;\n                case 2:\n                    m.isCertified = r.bool();\n                    break;\n                default:\n                    r.skipType(t & 7);\n                    break;\n                }\n            }\n            return m;\n        };\n\n        /**\n         * Creates an Address message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof Addresses.Address\n         * @static\n         * @param {Object.<string,*>} d Plain object\n         * @returns {Addresses.Address} Address\n         */\n        Address.fromObject = function fromObject(d) {\n            if (d instanceof $root.Addresses.Address)\n                return d;\n            var m = new $root.Addresses.Address();\n            if (d.multiaddr != null) {\n                if (typeof d.multiaddr === \"string\")\n                    $util.base64.decode(d.multiaddr, m.multiaddr = $util.newBuffer($util.base64.length(d.multiaddr)), 0);\n                else if (d.multiaddr.length)\n                    m.multiaddr = d.multiaddr;\n            }\n            if (d.isCertified != null) {\n                m.isCertified = Boolean(d.isCertified);\n            }\n            return m;\n        };\n\n        /**\n         * Creates a plain object from an Address message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof Addresses.Address\n         * @static\n         * @param {Addresses.Address} m Address\n         * @param {$protobuf.IConversionOptions} [o] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        Address.toObject = function toObject(m, o) {\n            if (!o)\n                o = {};\n            var d = {};\n            if (o.defaults) {\n                if (o.bytes === String)\n                    d.multiaddr = \"\";\n                else {\n                    d.multiaddr = [];\n                    if (o.bytes !== Array)\n                        d.multiaddr = $util.newBuffer(d.multiaddr);\n                }\n            }\n            if (m.multiaddr != null && m.hasOwnProperty(\"multiaddr\")) {\n                d.multiaddr = o.bytes === String ? $util.base64.encode(m.multiaddr, 0, m.multiaddr.length) : o.bytes === Array ? Array.prototype.slice.call(m.multiaddr) : m.multiaddr;\n            }\n            if (m.isCertified != null && m.hasOwnProperty(\"isCertified\")) {\n                d.isCertified = m.isCertified;\n                if (o.oneofs)\n                    d._isCertified = \"isCertified\";\n            }\n            return d;\n        };\n\n        /**\n         * Converts this Address to JSON.\n         * @function toJSON\n         * @memberof Addresses.Address\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        Address.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        return Address;\n    })();\n\n    Addresses.CertifiedRecord = (function() {\n\n        /**\n         * Properties of a CertifiedRecord.\n         * @memberof Addresses\n         * @interface ICertifiedRecord\n         * @property {number|null} [seq] CertifiedRecord seq\n         * @property {Uint8Array|null} [raw] CertifiedRecord raw\n         */\n\n        /**\n         * Constructs a new CertifiedRecord.\n         * @memberof Addresses\n         * @classdesc Represents a CertifiedRecord.\n         * @implements ICertifiedRecord\n         * @constructor\n         * @param {Addresses.ICertifiedRecord=} [p] Properties to set\n         */\n        function CertifiedRecord(p) {\n            if (p)\n                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)\n                    if (p[ks[i]] != null)\n                        this[ks[i]] = p[ks[i]];\n        }\n\n        /**\n         * CertifiedRecord seq.\n         * @member {number} seq\n         * @memberof Addresses.CertifiedRecord\n         * @instance\n         */\n        CertifiedRecord.prototype.seq = $util.Long ? $util.Long.fromBits(0,0,true) : 0;\n\n        /**\n         * CertifiedRecord raw.\n         * @member {Uint8Array} raw\n         * @memberof Addresses.CertifiedRecord\n         * @instance\n         */\n        CertifiedRecord.prototype.raw = $util.newBuffer([]);\n\n        /**\n         * Encodes the specified CertifiedRecord message. Does not implicitly {@link Addresses.CertifiedRecord.verify|verify} messages.\n         * @function encode\n         * @memberof Addresses.CertifiedRecord\n         * @static\n         * @param {Addresses.ICertifiedRecord} m CertifiedRecord message or plain object to encode\n         * @param {$protobuf.Writer} [w] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        CertifiedRecord.encode = function encode(m, w) {\n            if (!w)\n                w = $Writer.create();\n            if (m.seq != null && Object.hasOwnProperty.call(m, \"seq\"))\n                w.uint32(8).uint64(m.seq);\n            if (m.raw != null && Object.hasOwnProperty.call(m, \"raw\"))\n                w.uint32(18).bytes(m.raw);\n            return w;\n        };\n\n        /**\n         * Decodes a CertifiedRecord message from the specified reader or buffer.\n         * @function decode\n         * @memberof Addresses.CertifiedRecord\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from\n         * @param {number} [l] Message length if known beforehand\n         * @returns {Addresses.CertifiedRecord} CertifiedRecord\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        CertifiedRecord.decode = function decode(r, l) {\n            if (!(r instanceof $Reader))\n                r = $Reader.create(r);\n            var c = l === undefined ? r.len : r.pos + l, m = new $root.Addresses.CertifiedRecord();\n            while (r.pos < c) {\n                var t = r.uint32();\n                switch (t >>> 3) {\n                case 1:\n                    m.seq = r.uint64();\n                    break;\n                case 2:\n                    m.raw = r.bytes();\n                    break;\n                default:\n                    r.skipType(t & 7);\n                    break;\n                }\n            }\n            return m;\n        };\n\n        /**\n         * Creates a CertifiedRecord message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof Addresses.CertifiedRecord\n         * @static\n         * @param {Object.<string,*>} d Plain object\n         * @returns {Addresses.CertifiedRecord} CertifiedRecord\n         */\n        CertifiedRecord.fromObject = function fromObject(d) {\n            if (d instanceof $root.Addresses.CertifiedRecord)\n                return d;\n            var m = new $root.Addresses.CertifiedRecord();\n            if (d.seq != null) {\n                if ($util.Long)\n                    (m.seq = $util.Long.fromValue(d.seq)).unsigned = true;\n                else if (typeof d.seq === \"string\")\n                    m.seq = parseInt(d.seq, 10);\n                else if (typeof d.seq === \"number\")\n                    m.seq = d.seq;\n                else if (typeof d.seq === \"object\")\n                    m.seq = new $util.LongBits(d.seq.low >>> 0, d.seq.high >>> 0).toNumber(true);\n            }\n            if (d.raw != null) {\n                if (typeof d.raw === \"string\")\n                    $util.base64.decode(d.raw, m.raw = $util.newBuffer($util.base64.length(d.raw)), 0);\n                else if (d.raw.length)\n                    m.raw = d.raw;\n            }\n            return m;\n        };\n\n        /**\n         * Creates a plain object from a CertifiedRecord message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof Addresses.CertifiedRecord\n         * @static\n         * @param {Addresses.CertifiedRecord} m CertifiedRecord\n         * @param {$protobuf.IConversionOptions} [o] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        CertifiedRecord.toObject = function toObject(m, o) {\n            if (!o)\n                o = {};\n            var d = {};\n            if (o.defaults) {\n                if ($util.Long) {\n                    var n = new $util.Long(0, 0, true);\n                    d.seq = o.longs === String ? n.toString() : o.longs === Number ? n.toNumber() : n;\n                } else\n                    d.seq = o.longs === String ? \"0\" : 0;\n                if (o.bytes === String)\n                    d.raw = \"\";\n                else {\n                    d.raw = [];\n                    if (o.bytes !== Array)\n                        d.raw = $util.newBuffer(d.raw);\n                }\n            }\n            if (m.seq != null && m.hasOwnProperty(\"seq\")) {\n                if (typeof m.seq === \"number\")\n                    d.seq = o.longs === String ? String(m.seq) : m.seq;\n                else\n                    d.seq = o.longs === String ? $util.Long.prototype.toString.call(m.seq) : o.longs === Number ? new $util.LongBits(m.seq.low >>> 0, m.seq.high >>> 0).toNumber(true) : m.seq;\n            }\n            if (m.raw != null && m.hasOwnProperty(\"raw\")) {\n                d.raw = o.bytes === String ? $util.base64.encode(m.raw, 0, m.raw.length) : o.bytes === Array ? Array.prototype.slice.call(m.raw) : m.raw;\n            }\n            return d;\n        };\n\n        /**\n         * Converts this CertifiedRecord to JSON.\n         * @function toJSON\n         * @memberof Addresses.CertifiedRecord\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        CertifiedRecord.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        return CertifiedRecord;\n    })();\n\n    return Addresses;\n})();\n\nexport { $root as default };\n","/*eslint-disable*/\nimport $protobuf from \"protobufjs/minimal.js\";\n\n// Common aliases\nconst $Reader = $protobuf.Reader, $Writer = $protobuf.Writer, $util = $protobuf.util;\n\n// Exported root namespace\nconst $root = $protobuf.roots[\"default\"] || ($protobuf.roots[\"default\"] = {});\n\nexport const Peer = $root.Peer = (() => {\n\n    /**\n     * Properties of a Peer.\n     * @exports IPeer\n     * @interface IPeer\n     * @property {Array.<IAddress>|null} [addresses] Peer addresses\n     * @property {Array.<string>|null} [protocols] Peer protocols\n     * @property {Array.<IMetadata>|null} [metadata] Peer metadata\n     * @property {Uint8Array|null} [pubKey] Peer pubKey\n     * @property {Uint8Array|null} [peerRecordEnvelope] Peer peerRecordEnvelope\n     */\n\n    /**\n     * Constructs a new Peer.\n     * @exports Peer\n     * @classdesc Represents a Peer.\n     * @implements IPeer\n     * @constructor\n     * @param {IPeer=} [p] Properties to set\n     */\n    function Peer(p) {\n        this.addresses = [];\n        this.protocols = [];\n        this.metadata = [];\n        if (p)\n            for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)\n                if (p[ks[i]] != null)\n                    this[ks[i]] = p[ks[i]];\n    }\n\n    /**\n     * Peer addresses.\n     * @member {Array.<IAddress>} addresses\n     * @memberof Peer\n     * @instance\n     */\n    Peer.prototype.addresses = $util.emptyArray;\n\n    /**\n     * Peer protocols.\n     * @member {Array.<string>} protocols\n     * @memberof Peer\n     * @instance\n     */\n    Peer.prototype.protocols = $util.emptyArray;\n\n    /**\n     * Peer metadata.\n     * @member {Array.<IMetadata>} metadata\n     * @memberof Peer\n     * @instance\n     */\n    Peer.prototype.metadata = $util.emptyArray;\n\n    /**\n     * Peer pubKey.\n     * @member {Uint8Array|null|undefined} pubKey\n     * @memberof Peer\n     * @instance\n     */\n    Peer.prototype.pubKey = null;\n\n    /**\n     * Peer peerRecordEnvelope.\n     * @member {Uint8Array|null|undefined} peerRecordEnvelope\n     * @memberof Peer\n     * @instance\n     */\n    Peer.prototype.peerRecordEnvelope = null;\n\n    // OneOf field names bound to virtual getters and setters\n    let $oneOfFields;\n\n    /**\n     * Peer _pubKey.\n     * @member {\"pubKey\"|undefined} _pubKey\n     * @memberof Peer\n     * @instance\n     */\n    Object.defineProperty(Peer.prototype, \"_pubKey\", {\n        get: $util.oneOfGetter($oneOfFields = [\"pubKey\"]),\n        set: $util.oneOfSetter($oneOfFields)\n    });\n\n    /**\n     * Peer _peerRecordEnvelope.\n     * @member {\"peerRecordEnvelope\"|undefined} _peerRecordEnvelope\n     * @memberof Peer\n     * @instance\n     */\n    Object.defineProperty(Peer.prototype, \"_peerRecordEnvelope\", {\n        get: $util.oneOfGetter($oneOfFields = [\"peerRecordEnvelope\"]),\n        set: $util.oneOfSetter($oneOfFields)\n    });\n\n    /**\n     * Encodes the specified Peer message. Does not implicitly {@link Peer.verify|verify} messages.\n     * @function encode\n     * @memberof Peer\n     * @static\n     * @param {IPeer} m Peer message or plain object to encode\n     * @param {$protobuf.Writer} [w] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    Peer.encode = function encode(m, w) {\n        if (!w)\n            w = $Writer.create();\n        if (m.addresses != null && m.addresses.length) {\n            for (var i = 0; i < m.addresses.length; ++i)\n                $root.Address.encode(m.addresses[i], w.uint32(10).fork()).ldelim();\n        }\n        if (m.protocols != null && m.protocols.length) {\n            for (var i = 0; i < m.protocols.length; ++i)\n                w.uint32(18).string(m.protocols[i]);\n        }\n        if (m.metadata != null && m.metadata.length) {\n            for (var i = 0; i < m.metadata.length; ++i)\n                $root.Metadata.encode(m.metadata[i], w.uint32(26).fork()).ldelim();\n        }\n        if (m.pubKey != null && Object.hasOwnProperty.call(m, \"pubKey\"))\n            w.uint32(34).bytes(m.pubKey);\n        if (m.peerRecordEnvelope != null && Object.hasOwnProperty.call(m, \"peerRecordEnvelope\"))\n            w.uint32(42).bytes(m.peerRecordEnvelope);\n        return w;\n    };\n\n    /**\n     * Decodes a Peer message from the specified reader or buffer.\n     * @function decode\n     * @memberof Peer\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from\n     * @param {number} [l] Message length if known beforehand\n     * @returns {Peer} Peer\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    Peer.decode = function decode(r, l) {\n        if (!(r instanceof $Reader))\n            r = $Reader.create(r);\n        var c = l === undefined ? r.len : r.pos + l, m = new $root.Peer();\n        while (r.pos < c) {\n            var t = r.uint32();\n            switch (t >>> 3) {\n            case 1:\n                if (!(m.addresses && m.addresses.length))\n                    m.addresses = [];\n                m.addresses.push($root.Address.decode(r, r.uint32()));\n                break;\n            case 2:\n                if (!(m.protocols && m.protocols.length))\n                    m.protocols = [];\n                m.protocols.push(r.string());\n                break;\n            case 3:\n                if (!(m.metadata && m.metadata.length))\n                    m.metadata = [];\n                m.metadata.push($root.Metadata.decode(r, r.uint32()));\n                break;\n            case 4:\n                m.pubKey = r.bytes();\n                break;\n            case 5:\n                m.peerRecordEnvelope = r.bytes();\n                break;\n            default:\n                r.skipType(t & 7);\n                break;\n            }\n        }\n        return m;\n    };\n\n    /**\n     * Creates a Peer message from a plain object. Also converts values to their respective internal types.\n     * @function fromObject\n     * @memberof Peer\n     * @static\n     * @param {Object.<string,*>} d Plain object\n     * @returns {Peer} Peer\n     */\n    Peer.fromObject = function fromObject(d) {\n        if (d instanceof $root.Peer)\n            return d;\n        var m = new $root.Peer();\n        if (d.addresses) {\n            if (!Array.isArray(d.addresses))\n                throw TypeError(\".Peer.addresses: array expected\");\n            m.addresses = [];\n            for (var i = 0; i < d.addresses.length; ++i) {\n                if (typeof d.addresses[i] !== \"object\")\n                    throw TypeError(\".Peer.addresses: object expected\");\n                m.addresses[i] = $root.Address.fromObject(d.addresses[i]);\n            }\n        }\n        if (d.protocols) {\n            if (!Array.isArray(d.protocols))\n                throw TypeError(\".Peer.protocols: array expected\");\n            m.protocols = [];\n            for (var i = 0; i < d.protocols.length; ++i) {\n                m.protocols[i] = String(d.protocols[i]);\n            }\n        }\n        if (d.metadata) {\n            if (!Array.isArray(d.metadata))\n                throw TypeError(\".Peer.metadata: array expected\");\n            m.metadata = [];\n            for (var i = 0; i < d.metadata.length; ++i) {\n                if (typeof d.metadata[i] !== \"object\")\n                    throw TypeError(\".Peer.metadata: object expected\");\n                m.metadata[i] = $root.Metadata.fromObject(d.metadata[i]);\n            }\n        }\n        if (d.pubKey != null) {\n            if (typeof d.pubKey === \"string\")\n                $util.base64.decode(d.pubKey, m.pubKey = $util.newBuffer($util.base64.length(d.pubKey)), 0);\n            else if (d.pubKey.length)\n                m.pubKey = d.pubKey;\n        }\n        if (d.peerRecordEnvelope != null) {\n            if (typeof d.peerRecordEnvelope === \"string\")\n                $util.base64.decode(d.peerRecordEnvelope, m.peerRecordEnvelope = $util.newBuffer($util.base64.length(d.peerRecordEnvelope)), 0);\n            else if (d.peerRecordEnvelope.length)\n                m.peerRecordEnvelope = d.peerRecordEnvelope;\n        }\n        return m;\n    };\n\n    /**\n     * Creates a plain object from a Peer message. Also converts values to other types if specified.\n     * @function toObject\n     * @memberof Peer\n     * @static\n     * @param {Peer} m Peer\n     * @param {$protobuf.IConversionOptions} [o] Conversion options\n     * @returns {Object.<string,*>} Plain object\n     */\n    Peer.toObject = function toObject(m, o) {\n        if (!o)\n            o = {};\n        var d = {};\n        if (o.arrays || o.defaults) {\n            d.addresses = [];\n            d.protocols = [];\n            d.metadata = [];\n        }\n        if (m.addresses && m.addresses.length) {\n            d.addresses = [];\n            for (var j = 0; j < m.addresses.length; ++j) {\n                d.addresses[j] = $root.Address.toObject(m.addresses[j], o);\n            }\n        }\n        if (m.protocols && m.protocols.length) {\n            d.protocols = [];\n            for (var j = 0; j < m.protocols.length; ++j) {\n                d.protocols[j] = m.protocols[j];\n            }\n        }\n        if (m.metadata && m.metadata.length) {\n            d.metadata = [];\n            for (var j = 0; j < m.metadata.length; ++j) {\n                d.metadata[j] = $root.Metadata.toObject(m.metadata[j], o);\n            }\n        }\n        if (m.pubKey != null && m.hasOwnProperty(\"pubKey\")) {\n            d.pubKey = o.bytes === String ? $util.base64.encode(m.pubKey, 0, m.pubKey.length) : o.bytes === Array ? Array.prototype.slice.call(m.pubKey) : m.pubKey;\n            if (o.oneofs)\n                d._pubKey = \"pubKey\";\n        }\n        if (m.peerRecordEnvelope != null && m.hasOwnProperty(\"peerRecordEnvelope\")) {\n            d.peerRecordEnvelope = o.bytes === String ? $util.base64.encode(m.peerRecordEnvelope, 0, m.peerRecordEnvelope.length) : o.bytes === Array ? Array.prototype.slice.call(m.peerRecordEnvelope) : m.peerRecordEnvelope;\n            if (o.oneofs)\n                d._peerRecordEnvelope = \"peerRecordEnvelope\";\n        }\n        return d;\n    };\n\n    /**\n     * Converts this Peer to JSON.\n     * @function toJSON\n     * @memberof Peer\n     * @instance\n     * @returns {Object.<string,*>} JSON object\n     */\n    Peer.prototype.toJSON = function toJSON() {\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n    };\n\n    return Peer;\n})();\n\nexport const Address = $root.Address = (() => {\n\n    /**\n     * Properties of an Address.\n     * @exports IAddress\n     * @interface IAddress\n     * @property {Uint8Array|null} [multiaddr] Address multiaddr\n     * @property {boolean|null} [isCertified] Address isCertified\n     */\n\n    /**\n     * Constructs a new Address.\n     * @exports Address\n     * @classdesc Represents an Address.\n     * @implements IAddress\n     * @constructor\n     * @param {IAddress=} [p] Properties to set\n     */\n    function Address(p) {\n        if (p)\n            for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)\n                if (p[ks[i]] != null)\n                    this[ks[i]] = p[ks[i]];\n    }\n\n    /**\n     * Address multiaddr.\n     * @member {Uint8Array} multiaddr\n     * @memberof Address\n     * @instance\n     */\n    Address.prototype.multiaddr = $util.newBuffer([]);\n\n    /**\n     * Address isCertified.\n     * @member {boolean|null|undefined} isCertified\n     * @memberof Address\n     * @instance\n     */\n    Address.prototype.isCertified = null;\n\n    // OneOf field names bound to virtual getters and setters\n    let $oneOfFields;\n\n    /**\n     * Address _isCertified.\n     * @member {\"isCertified\"|undefined} _isCertified\n     * @memberof Address\n     * @instance\n     */\n    Object.defineProperty(Address.prototype, \"_isCertified\", {\n        get: $util.oneOfGetter($oneOfFields = [\"isCertified\"]),\n        set: $util.oneOfSetter($oneOfFields)\n    });\n\n    /**\n     * Encodes the specified Address message. Does not implicitly {@link Address.verify|verify} messages.\n     * @function encode\n     * @memberof Address\n     * @static\n     * @param {IAddress} m Address message or plain object to encode\n     * @param {$protobuf.Writer} [w] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    Address.encode = function encode(m, w) {\n        if (!w)\n            w = $Writer.create();\n        if (m.multiaddr != null && Object.hasOwnProperty.call(m, \"multiaddr\"))\n            w.uint32(10).bytes(m.multiaddr);\n        if (m.isCertified != null && Object.hasOwnProperty.call(m, \"isCertified\"))\n            w.uint32(16).bool(m.isCertified);\n        return w;\n    };\n\n    /**\n     * Decodes an Address message from the specified reader or buffer.\n     * @function decode\n     * @memberof Address\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from\n     * @param {number} [l] Message length if known beforehand\n     * @returns {Address} Address\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    Address.decode = function decode(r, l) {\n        if (!(r instanceof $Reader))\n            r = $Reader.create(r);\n        var c = l === undefined ? r.len : r.pos + l, m = new $root.Address();\n        while (r.pos < c) {\n            var t = r.uint32();\n            switch (t >>> 3) {\n            case 1:\n                m.multiaddr = r.bytes();\n                break;\n            case 2:\n                m.isCertified = r.bool();\n                break;\n            default:\n                r.skipType(t & 7);\n                break;\n            }\n        }\n        return m;\n    };\n\n    /**\n     * Creates an Address message from a plain object. Also converts values to their respective internal types.\n     * @function fromObject\n     * @memberof Address\n     * @static\n     * @param {Object.<string,*>} d Plain object\n     * @returns {Address} Address\n     */\n    Address.fromObject = function fromObject(d) {\n        if (d instanceof $root.Address)\n            return d;\n        var m = new $root.Address();\n        if (d.multiaddr != null) {\n            if (typeof d.multiaddr === \"string\")\n                $util.base64.decode(d.multiaddr, m.multiaddr = $util.newBuffer($util.base64.length(d.multiaddr)), 0);\n            else if (d.multiaddr.length)\n                m.multiaddr = d.multiaddr;\n        }\n        if (d.isCertified != null) {\n            m.isCertified = Boolean(d.isCertified);\n        }\n        return m;\n    };\n\n    /**\n     * Creates a plain object from an Address message. Also converts values to other types if specified.\n     * @function toObject\n     * @memberof Address\n     * @static\n     * @param {Address} m Address\n     * @param {$protobuf.IConversionOptions} [o] Conversion options\n     * @returns {Object.<string,*>} Plain object\n     */\n    Address.toObject = function toObject(m, o) {\n        if (!o)\n            o = {};\n        var d = {};\n        if (o.defaults) {\n            if (o.bytes === String)\n                d.multiaddr = \"\";\n            else {\n                d.multiaddr = [];\n                if (o.bytes !== Array)\n                    d.multiaddr = $util.newBuffer(d.multiaddr);\n            }\n        }\n        if (m.multiaddr != null && m.hasOwnProperty(\"multiaddr\")) {\n            d.multiaddr = o.bytes === String ? $util.base64.encode(m.multiaddr, 0, m.multiaddr.length) : o.bytes === Array ? Array.prototype.slice.call(m.multiaddr) : m.multiaddr;\n        }\n        if (m.isCertified != null && m.hasOwnProperty(\"isCertified\")) {\n            d.isCertified = m.isCertified;\n            if (o.oneofs)\n                d._isCertified = \"isCertified\";\n        }\n        return d;\n    };\n\n    /**\n     * Converts this Address to JSON.\n     * @function toJSON\n     * @memberof Address\n     * @instance\n     * @returns {Object.<string,*>} JSON object\n     */\n    Address.prototype.toJSON = function toJSON() {\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n    };\n\n    return Address;\n})();\n\nexport const Metadata = $root.Metadata = (() => {\n\n    /**\n     * Properties of a Metadata.\n     * @exports IMetadata\n     * @interface IMetadata\n     * @property {string|null} [key] Metadata key\n     * @property {Uint8Array|null} [value] Metadata value\n     */\n\n    /**\n     * Constructs a new Metadata.\n     * @exports Metadata\n     * @classdesc Represents a Metadata.\n     * @implements IMetadata\n     * @constructor\n     * @param {IMetadata=} [p] Properties to set\n     */\n    function Metadata(p) {\n        if (p)\n            for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)\n                if (p[ks[i]] != null)\n                    this[ks[i]] = p[ks[i]];\n    }\n\n    /**\n     * Metadata key.\n     * @member {string} key\n     * @memberof Metadata\n     * @instance\n     */\n    Metadata.prototype.key = \"\";\n\n    /**\n     * Metadata value.\n     * @member {Uint8Array} value\n     * @memberof Metadata\n     * @instance\n     */\n    Metadata.prototype.value = $util.newBuffer([]);\n\n    /**\n     * Encodes the specified Metadata message. Does not implicitly {@link Metadata.verify|verify} messages.\n     * @function encode\n     * @memberof Metadata\n     * @static\n     * @param {IMetadata} m Metadata message or plain object to encode\n     * @param {$protobuf.Writer} [w] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    Metadata.encode = function encode(m, w) {\n        if (!w)\n            w = $Writer.create();\n        if (m.key != null && Object.hasOwnProperty.call(m, \"key\"))\n            w.uint32(10).string(m.key);\n        if (m.value != null && Object.hasOwnProperty.call(m, \"value\"))\n            w.uint32(18).bytes(m.value);\n        return w;\n    };\n\n    /**\n     * Decodes a Metadata message from the specified reader or buffer.\n     * @function decode\n     * @memberof Metadata\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from\n     * @param {number} [l] Message length if known beforehand\n     * @returns {Metadata} Metadata\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    Metadata.decode = function decode(r, l) {\n        if (!(r instanceof $Reader))\n            r = $Reader.create(r);\n        var c = l === undefined ? r.len : r.pos + l, m = new $root.Metadata();\n        while (r.pos < c) {\n            var t = r.uint32();\n            switch (t >>> 3) {\n            case 1:\n                m.key = r.string();\n                break;\n            case 2:\n                m.value = r.bytes();\n                break;\n            default:\n                r.skipType(t & 7);\n                break;\n            }\n        }\n        return m;\n    };\n\n    /**\n     * Creates a Metadata message from a plain object. Also converts values to their respective internal types.\n     * @function fromObject\n     * @memberof Metadata\n     * @static\n     * @param {Object.<string,*>} d Plain object\n     * @returns {Metadata} Metadata\n     */\n    Metadata.fromObject = function fromObject(d) {\n        if (d instanceof $root.Metadata)\n            return d;\n        var m = new $root.Metadata();\n        if (d.key != null) {\n            m.key = String(d.key);\n        }\n        if (d.value != null) {\n            if (typeof d.value === \"string\")\n                $util.base64.decode(d.value, m.value = $util.newBuffer($util.base64.length(d.value)), 0);\n            else if (d.value.length)\n                m.value = d.value;\n        }\n        return m;\n    };\n\n    /**\n     * Creates a plain object from a Metadata message. Also converts values to other types if specified.\n     * @function toObject\n     * @memberof Metadata\n     * @static\n     * @param {Metadata} m Metadata\n     * @param {$protobuf.IConversionOptions} [o] Conversion options\n     * @returns {Object.<string,*>} Plain object\n     */\n    Metadata.toObject = function toObject(m, o) {\n        if (!o)\n            o = {};\n        var d = {};\n        if (o.defaults) {\n            d.key = \"\";\n            if (o.bytes === String)\n                d.value = \"\";\n            else {\n                d.value = [];\n                if (o.bytes !== Array)\n                    d.value = $util.newBuffer(d.value);\n            }\n        }\n        if (m.key != null && m.hasOwnProperty(\"key\")) {\n            d.key = m.key;\n        }\n        if (m.value != null && m.hasOwnProperty(\"value\")) {\n            d.value = o.bytes === String ? $util.base64.encode(m.value, 0, m.value.length) : o.bytes === Array ? Array.prototype.slice.call(m.value) : m.value;\n        }\n        return d;\n    };\n\n    /**\n     * Converts this Metadata to JSON.\n     * @function toJSON\n     * @memberof Metadata\n     * @instance\n     * @returns {Object.<string,*>} JSON object\n     */\n    Metadata.prototype.toJSON = function toJSON() {\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n    };\n\n    return Metadata;\n})();\n\nexport { $root as default };\n","/*eslint-disable*/\nimport $protobuf from \"protobufjs/minimal.js\";\n\n// Common aliases\nconst $Reader = $protobuf.Reader, $Writer = $protobuf.Writer, $util = $protobuf.util;\n\n// Exported root namespace\nconst $root = $protobuf.roots[\"default\"] || ($protobuf.roots[\"default\"] = {});\n\nexport const Envelope = $root.Envelope = (() => {\n\n    /**\n     * Properties of an Envelope.\n     * @exports IEnvelope\n     * @interface IEnvelope\n     * @property {Uint8Array|null} [publicKey] Envelope publicKey\n     * @property {Uint8Array|null} [payloadType] Envelope payloadType\n     * @property {Uint8Array|null} [payload] Envelope payload\n     * @property {Uint8Array|null} [signature] Envelope signature\n     */\n\n    /**\n     * Constructs a new Envelope.\n     * @exports Envelope\n     * @classdesc Represents an Envelope.\n     * @implements IEnvelope\n     * @constructor\n     * @param {IEnvelope=} [p] Properties to set\n     */\n    function Envelope(p) {\n        if (p)\n            for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)\n                if (p[ks[i]] != null)\n                    this[ks[i]] = p[ks[i]];\n    }\n\n    /**\n     * Envelope publicKey.\n     * @member {Uint8Array} publicKey\n     * @memberof Envelope\n     * @instance\n     */\n    Envelope.prototype.publicKey = $util.newBuffer([]);\n\n    /**\n     * Envelope payloadType.\n     * @member {Uint8Array} payloadType\n     * @memberof Envelope\n     * @instance\n     */\n    Envelope.prototype.payloadType = $util.newBuffer([]);\n\n    /**\n     * Envelope payload.\n     * @member {Uint8Array} payload\n     * @memberof Envelope\n     * @instance\n     */\n    Envelope.prototype.payload = $util.newBuffer([]);\n\n    /**\n     * Envelope signature.\n     * @member {Uint8Array} signature\n     * @memberof Envelope\n     * @instance\n     */\n    Envelope.prototype.signature = $util.newBuffer([]);\n\n    /**\n     * Encodes the specified Envelope message. Does not implicitly {@link Envelope.verify|verify} messages.\n     * @function encode\n     * @memberof Envelope\n     * @static\n     * @param {IEnvelope} m Envelope message or plain object to encode\n     * @param {$protobuf.Writer} [w] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    Envelope.encode = function encode(m, w) {\n        if (!w)\n            w = $Writer.create();\n        if (m.publicKey != null && Object.hasOwnProperty.call(m, \"publicKey\"))\n            w.uint32(10).bytes(m.publicKey);\n        if (m.payloadType != null && Object.hasOwnProperty.call(m, \"payloadType\"))\n            w.uint32(18).bytes(m.payloadType);\n        if (m.payload != null && Object.hasOwnProperty.call(m, \"payload\"))\n            w.uint32(26).bytes(m.payload);\n        if (m.signature != null && Object.hasOwnProperty.call(m, \"signature\"))\n            w.uint32(42).bytes(m.signature);\n        return w;\n    };\n\n    /**\n     * Decodes an Envelope message from the specified reader or buffer.\n     * @function decode\n     * @memberof Envelope\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from\n     * @param {number} [l] Message length if known beforehand\n     * @returns {Envelope} Envelope\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    Envelope.decode = function decode(r, l) {\n        if (!(r instanceof $Reader))\n            r = $Reader.create(r);\n        var c = l === undefined ? r.len : r.pos + l, m = new $root.Envelope();\n        while (r.pos < c) {\n            var t = r.uint32();\n            switch (t >>> 3) {\n            case 1:\n                m.publicKey = r.bytes();\n                break;\n            case 2:\n                m.payloadType = r.bytes();\n                break;\n            case 3:\n                m.payload = r.bytes();\n                break;\n            case 5:\n                m.signature = r.bytes();\n                break;\n            default:\n                r.skipType(t & 7);\n                break;\n            }\n        }\n        return m;\n    };\n\n    /**\n     * Creates an Envelope message from a plain object. Also converts values to their respective internal types.\n     * @function fromObject\n     * @memberof Envelope\n     * @static\n     * @param {Object.<string,*>} d Plain object\n     * @returns {Envelope} Envelope\n     */\n    Envelope.fromObject = function fromObject(d) {\n        if (d instanceof $root.Envelope)\n            return d;\n        var m = new $root.Envelope();\n        if (d.publicKey != null) {\n            if (typeof d.publicKey === \"string\")\n                $util.base64.decode(d.publicKey, m.publicKey = $util.newBuffer($util.base64.length(d.publicKey)), 0);\n            else if (d.publicKey.length)\n                m.publicKey = d.publicKey;\n        }\n        if (d.payloadType != null) {\n            if (typeof d.payloadType === \"string\")\n                $util.base64.decode(d.payloadType, m.payloadType = $util.newBuffer($util.base64.length(d.payloadType)), 0);\n            else if (d.payloadType.length)\n                m.payloadType = d.payloadType;\n        }\n        if (d.payload != null) {\n            if (typeof d.payload === \"string\")\n                $util.base64.decode(d.payload, m.payload = $util.newBuffer($util.base64.length(d.payload)), 0);\n            else if (d.payload.length)\n                m.payload = d.payload;\n        }\n        if (d.signature != null) {\n            if (typeof d.signature === \"string\")\n                $util.base64.decode(d.signature, m.signature = $util.newBuffer($util.base64.length(d.signature)), 0);\n            else if (d.signature.length)\n                m.signature = d.signature;\n        }\n        return m;\n    };\n\n    /**\n     * Creates a plain object from an Envelope message. Also converts values to other types if specified.\n     * @function toObject\n     * @memberof Envelope\n     * @static\n     * @param {Envelope} m Envelope\n     * @param {$protobuf.IConversionOptions} [o] Conversion options\n     * @returns {Object.<string,*>} Plain object\n     */\n    Envelope.toObject = function toObject(m, o) {\n        if (!o)\n            o = {};\n        var d = {};\n        if (o.defaults) {\n            if (o.bytes === String)\n                d.publicKey = \"\";\n            else {\n                d.publicKey = [];\n                if (o.bytes !== Array)\n                    d.publicKey = $util.newBuffer(d.publicKey);\n            }\n            if (o.bytes === String)\n                d.payloadType = \"\";\n            else {\n                d.payloadType = [];\n                if (o.bytes !== Array)\n                    d.payloadType = $util.newBuffer(d.payloadType);\n            }\n            if (o.bytes === String)\n                d.payload = \"\";\n            else {\n                d.payload = [];\n                if (o.bytes !== Array)\n                    d.payload = $util.newBuffer(d.payload);\n            }\n            if (o.bytes === String)\n                d.signature = \"\";\n            else {\n                d.signature = [];\n                if (o.bytes !== Array)\n                    d.signature = $util.newBuffer(d.signature);\n            }\n        }\n        if (m.publicKey != null && m.hasOwnProperty(\"publicKey\")) {\n            d.publicKey = o.bytes === String ? $util.base64.encode(m.publicKey, 0, m.publicKey.length) : o.bytes === Array ? Array.prototype.slice.call(m.publicKey) : m.publicKey;\n        }\n        if (m.payloadType != null && m.hasOwnProperty(\"payloadType\")) {\n            d.payloadType = o.bytes === String ? $util.base64.encode(m.payloadType, 0, m.payloadType.length) : o.bytes === Array ? Array.prototype.slice.call(m.payloadType) : m.payloadType;\n        }\n        if (m.payload != null && m.hasOwnProperty(\"payload\")) {\n            d.payload = o.bytes === String ? $util.base64.encode(m.payload, 0, m.payload.length) : o.bytes === Array ? Array.prototype.slice.call(m.payload) : m.payload;\n        }\n        if (m.signature != null && m.hasOwnProperty(\"signature\")) {\n            d.signature = o.bytes === String ? $util.base64.encode(m.signature, 0, m.signature.length) : o.bytes === Array ? Array.prototype.slice.call(m.signature) : m.signature;\n        }\n        return d;\n    };\n\n    /**\n     * Converts this Envelope to JSON.\n     * @function toJSON\n     * @memberof Envelope\n     * @instance\n     * @returns {Object.<string,*>} JSON object\n     */\n    Envelope.prototype.toJSON = function toJSON() {\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n    };\n\n    return Envelope;\n})();\n\nexport { $root as default };\n","/*eslint-disable*/\nimport $protobuf from \"protobufjs/minimal.js\";\n\n// Common aliases\nconst $Reader = $protobuf.Reader, $Writer = $protobuf.Writer, $util = $protobuf.util;\n\n// Exported root namespace\nconst $root = $protobuf.roots[\"default\"] || ($protobuf.roots[\"default\"] = {});\n\nexport const PeerRecord = $root.PeerRecord = (() => {\n\n    /**\n     * Properties of a PeerRecord.\n     * @exports IPeerRecord\n     * @interface IPeerRecord\n     * @property {Uint8Array|null} [peerId] PeerRecord peerId\n     * @property {number|null} [seq] PeerRecord seq\n     * @property {Array.<PeerRecord.IAddressInfo>|null} [addresses] PeerRecord addresses\n     */\n\n    /**\n     * Constructs a new PeerRecord.\n     * @exports PeerRecord\n     * @classdesc Represents a PeerRecord.\n     * @implements IPeerRecord\n     * @constructor\n     * @param {IPeerRecord=} [p] Properties to set\n     */\n    function PeerRecord(p) {\n        this.addresses = [];\n        if (p)\n            for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)\n                if (p[ks[i]] != null)\n                    this[ks[i]] = p[ks[i]];\n    }\n\n    /**\n     * PeerRecord peerId.\n     * @member {Uint8Array} peerId\n     * @memberof PeerRecord\n     * @instance\n     */\n    PeerRecord.prototype.peerId = $util.newBuffer([]);\n\n    /**\n     * PeerRecord seq.\n     * @member {number} seq\n     * @memberof PeerRecord\n     * @instance\n     */\n    PeerRecord.prototype.seq = $util.Long ? $util.Long.fromBits(0,0,true) : 0;\n\n    /**\n     * PeerRecord addresses.\n     * @member {Array.<PeerRecord.IAddressInfo>} addresses\n     * @memberof PeerRecord\n     * @instance\n     */\n    PeerRecord.prototype.addresses = $util.emptyArray;\n\n    /**\n     * Encodes the specified PeerRecord message. Does not implicitly {@link PeerRecord.verify|verify} messages.\n     * @function encode\n     * @memberof PeerRecord\n     * @static\n     * @param {IPeerRecord} m PeerRecord message or plain object to encode\n     * @param {$protobuf.Writer} [w] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    PeerRecord.encode = function encode(m, w) {\n        if (!w)\n            w = $Writer.create();\n        if (m.peerId != null && Object.hasOwnProperty.call(m, \"peerId\"))\n            w.uint32(10).bytes(m.peerId);\n        if (m.seq != null && Object.hasOwnProperty.call(m, \"seq\"))\n            w.uint32(16).uint64(m.seq);\n        if (m.addresses != null && m.addresses.length) {\n            for (var i = 0; i < m.addresses.length; ++i)\n                $root.PeerRecord.AddressInfo.encode(m.addresses[i], w.uint32(26).fork()).ldelim();\n        }\n        return w;\n    };\n\n    /**\n     * Decodes a PeerRecord message from the specified reader or buffer.\n     * @function decode\n     * @memberof PeerRecord\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from\n     * @param {number} [l] Message length if known beforehand\n     * @returns {PeerRecord} PeerRecord\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    PeerRecord.decode = function decode(r, l) {\n        if (!(r instanceof $Reader))\n            r = $Reader.create(r);\n        var c = l === undefined ? r.len : r.pos + l, m = new $root.PeerRecord();\n        while (r.pos < c) {\n            var t = r.uint32();\n            switch (t >>> 3) {\n            case 1:\n                m.peerId = r.bytes();\n                break;\n            case 2:\n                m.seq = r.uint64();\n                break;\n            case 3:\n                if (!(m.addresses && m.addresses.length))\n                    m.addresses = [];\n                m.addresses.push($root.PeerRecord.AddressInfo.decode(r, r.uint32()));\n                break;\n            default:\n                r.skipType(t & 7);\n                break;\n            }\n        }\n        return m;\n    };\n\n    /**\n     * Creates a PeerRecord message from a plain object. Also converts values to their respective internal types.\n     * @function fromObject\n     * @memberof PeerRecord\n     * @static\n     * @param {Object.<string,*>} d Plain object\n     * @returns {PeerRecord} PeerRecord\n     */\n    PeerRecord.fromObject = function fromObject(d) {\n        if (d instanceof $root.PeerRecord)\n            return d;\n        var m = new $root.PeerRecord();\n        if (d.peerId != null) {\n            if (typeof d.peerId === \"string\")\n                $util.base64.decode(d.peerId, m.peerId = $util.newBuffer($util.base64.length(d.peerId)), 0);\n            else if (d.peerId.length)\n                m.peerId = d.peerId;\n        }\n        if (d.seq != null) {\n            if ($util.Long)\n                (m.seq = $util.Long.fromValue(d.seq)).unsigned = true;\n            else if (typeof d.seq === \"string\")\n                m.seq = parseInt(d.seq, 10);\n            else if (typeof d.seq === \"number\")\n                m.seq = d.seq;\n            else if (typeof d.seq === \"object\")\n                m.seq = new $util.LongBits(d.seq.low >>> 0, d.seq.high >>> 0).toNumber(true);\n        }\n        if (d.addresses) {\n            if (!Array.isArray(d.addresses))\n                throw TypeError(\".PeerRecord.addresses: array expected\");\n            m.addresses = [];\n            for (var i = 0; i < d.addresses.length; ++i) {\n                if (typeof d.addresses[i] !== \"object\")\n                    throw TypeError(\".PeerRecord.addresses: object expected\");\n                m.addresses[i] = $root.PeerRecord.AddressInfo.fromObject(d.addresses[i]);\n            }\n        }\n        return m;\n    };\n\n    /**\n     * Creates a plain object from a PeerRecord message. Also converts values to other types if specified.\n     * @function toObject\n     * @memberof PeerRecord\n     * @static\n     * @param {PeerRecord} m PeerRecord\n     * @param {$protobuf.IConversionOptions} [o] Conversion options\n     * @returns {Object.<string,*>} Plain object\n     */\n    PeerRecord.toObject = function toObject(m, o) {\n        if (!o)\n            o = {};\n        var d = {};\n        if (o.arrays || o.defaults) {\n            d.addresses = [];\n        }\n        if (o.defaults) {\n            if (o.bytes === String)\n                d.peerId = \"\";\n            else {\n                d.peerId = [];\n                if (o.bytes !== Array)\n                    d.peerId = $util.newBuffer(d.peerId);\n            }\n            if ($util.Long) {\n                var n = new $util.Long(0, 0, true);\n                d.seq = o.longs === String ? n.toString() : o.longs === Number ? n.toNumber() : n;\n            } else\n                d.seq = o.longs === String ? \"0\" : 0;\n        }\n        if (m.peerId != null && m.hasOwnProperty(\"peerId\")) {\n            d.peerId = o.bytes === String ? $util.base64.encode(m.peerId, 0, m.peerId.length) : o.bytes === Array ? Array.prototype.slice.call(m.peerId) : m.peerId;\n        }\n        if (m.seq != null && m.hasOwnProperty(\"seq\")) {\n            if (typeof m.seq === \"number\")\n                d.seq = o.longs === String ? String(m.seq) : m.seq;\n            else\n                d.seq = o.longs === String ? $util.Long.prototype.toString.call(m.seq) : o.longs === Number ? new $util.LongBits(m.seq.low >>> 0, m.seq.high >>> 0).toNumber(true) : m.seq;\n        }\n        if (m.addresses && m.addresses.length) {\n            d.addresses = [];\n            for (var j = 0; j < m.addresses.length; ++j) {\n                d.addresses[j] = $root.PeerRecord.AddressInfo.toObject(m.addresses[j], o);\n            }\n        }\n        return d;\n    };\n\n    /**\n     * Converts this PeerRecord to JSON.\n     * @function toJSON\n     * @memberof PeerRecord\n     * @instance\n     * @returns {Object.<string,*>} JSON object\n     */\n    PeerRecord.prototype.toJSON = function toJSON() {\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n    };\n\n    PeerRecord.AddressInfo = (function() {\n\n        /**\n         * Properties of an AddressInfo.\n         * @memberof PeerRecord\n         * @interface IAddressInfo\n         * @property {Uint8Array|null} [multiaddr] AddressInfo multiaddr\n         */\n\n        /**\n         * Constructs a new AddressInfo.\n         * @memberof PeerRecord\n         * @classdesc Represents an AddressInfo.\n         * @implements IAddressInfo\n         * @constructor\n         * @param {PeerRecord.IAddressInfo=} [p] Properties to set\n         */\n        function AddressInfo(p) {\n            if (p)\n                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)\n                    if (p[ks[i]] != null)\n                        this[ks[i]] = p[ks[i]];\n        }\n\n        /**\n         * AddressInfo multiaddr.\n         * @member {Uint8Array} multiaddr\n         * @memberof PeerRecord.AddressInfo\n         * @instance\n         */\n        AddressInfo.prototype.multiaddr = $util.newBuffer([]);\n\n        /**\n         * Encodes the specified AddressInfo message. Does not implicitly {@link PeerRecord.AddressInfo.verify|verify} messages.\n         * @function encode\n         * @memberof PeerRecord.AddressInfo\n         * @static\n         * @param {PeerRecord.IAddressInfo} m AddressInfo message or plain object to encode\n         * @param {$protobuf.Writer} [w] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        AddressInfo.encode = function encode(m, w) {\n            if (!w)\n                w = $Writer.create();\n            if (m.multiaddr != null && Object.hasOwnProperty.call(m, \"multiaddr\"))\n                w.uint32(10).bytes(m.multiaddr);\n            return w;\n        };\n\n        /**\n         * Decodes an AddressInfo message from the specified reader or buffer.\n         * @function decode\n         * @memberof PeerRecord.AddressInfo\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from\n         * @param {number} [l] Message length if known beforehand\n         * @returns {PeerRecord.AddressInfo} AddressInfo\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        AddressInfo.decode = function decode(r, l) {\n            if (!(r instanceof $Reader))\n                r = $Reader.create(r);\n            var c = l === undefined ? r.len : r.pos + l, m = new $root.PeerRecord.AddressInfo();\n            while (r.pos < c) {\n                var t = r.uint32();\n                switch (t >>> 3) {\n                case 1:\n                    m.multiaddr = r.bytes();\n                    break;\n                default:\n                    r.skipType(t & 7);\n                    break;\n                }\n            }\n            return m;\n        };\n\n        /**\n         * Creates an AddressInfo message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof PeerRecord.AddressInfo\n         * @static\n         * @param {Object.<string,*>} d Plain object\n         * @returns {PeerRecord.AddressInfo} AddressInfo\n         */\n        AddressInfo.fromObject = function fromObject(d) {\n            if (d instanceof $root.PeerRecord.AddressInfo)\n                return d;\n            var m = new $root.PeerRecord.AddressInfo();\n            if (d.multiaddr != null) {\n                if (typeof d.multiaddr === \"string\")\n                    $util.base64.decode(d.multiaddr, m.multiaddr = $util.newBuffer($util.base64.length(d.multiaddr)), 0);\n                else if (d.multiaddr.length)\n                    m.multiaddr = d.multiaddr;\n            }\n            return m;\n        };\n\n        /**\n         * Creates a plain object from an AddressInfo message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof PeerRecord.AddressInfo\n         * @static\n         * @param {PeerRecord.AddressInfo} m AddressInfo\n         * @param {$protobuf.IConversionOptions} [o] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        AddressInfo.toObject = function toObject(m, o) {\n            if (!o)\n                o = {};\n            var d = {};\n            if (o.defaults) {\n                if (o.bytes === String)\n                    d.multiaddr = \"\";\n                else {\n                    d.multiaddr = [];\n                    if (o.bytes !== Array)\n                        d.multiaddr = $util.newBuffer(d.multiaddr);\n                }\n            }\n            if (m.multiaddr != null && m.hasOwnProperty(\"multiaddr\")) {\n                d.multiaddr = o.bytes === String ? $util.base64.encode(m.multiaddr, 0, m.multiaddr.length) : o.bytes === Array ? Array.prototype.slice.call(m.multiaddr) : m.multiaddr;\n            }\n            return d;\n        };\n\n        /**\n         * Converts this AddressInfo to JSON.\n         * @function toJSON\n         * @memberof PeerRecord.AddressInfo\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        AddressInfo.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        return AddressInfo;\n    })();\n\n    return PeerRecord;\n})();\n\nexport { $root as default };\n","/* eslint-disable @typescript-eslint/no-unsafe-return */\nexport class Parser {\n    index = 0;\n    input = \"\";\n    new(input) {\n        this.index = 0;\n        this.input = input;\n        return this;\n    }\n    /** Run a parser, and restore the pre-parse state if it fails. */\n    readAtomically(fn) {\n        const index = this.index;\n        const result = fn();\n        if (result === undefined) {\n            this.index = index;\n        }\n        return result;\n    }\n    /** Run a parser, but fail if the entire input wasn't consumed. Doesn't run atomically. */\n    parseWith(fn) {\n        const result = fn();\n        if (this.index !== this.input.length) {\n            return undefined;\n        }\n        return result;\n    }\n    /** Peek the next character from the input */\n    peekChar() {\n        if (this.index >= this.input.length) {\n            return undefined;\n        }\n        return this.input[this.index];\n    }\n    /** Read the next character from the input */\n    readChar() {\n        if (this.index >= this.input.length) {\n            return undefined;\n        }\n        return this.input[this.index++];\n    }\n    /** Read the next character from the input if it matches the target. */\n    readGivenChar(target) {\n        return this.readAtomically(() => {\n            const char = this.readChar();\n            if (char !== target) {\n                return undefined;\n            }\n            return char;\n        });\n    }\n    /**\n     * Helper for reading separators in an indexed loop. Reads the separator\n     * character iff index > 0, then runs the parser. When used in a loop,\n     * the separator character will only be read on index > 0 (see\n     * readIPv4Addr for an example)\n     */\n    readSeparator(sep, index, inner) {\n        return this.readAtomically(() => {\n            if (index > 0) {\n                if (this.readGivenChar(sep) === undefined) {\n                    return undefined;\n                }\n            }\n            return inner();\n        });\n    }\n    /**\n     * Read a number off the front of the input in the given radix, stopping\n     * at the first non-digit character or eof. Fails if the number has more\n     * digits than max_digits or if there is no number.\n     */\n    readNumber(radix, maxDigits, allowZeroPrefix, maxBytes) {\n        return this.readAtomically(() => {\n            let result = 0;\n            let digitCount = 0;\n            const leadingChar = this.peekChar();\n            if (leadingChar === undefined) {\n                return undefined;\n            }\n            const hasLeadingZero = leadingChar === \"0\";\n            const maxValue = 2 ** (8 * maxBytes) - 1;\n            // eslint-disable-next-line no-constant-condition\n            while (true) {\n                const digit = this.readAtomically(() => {\n                    const char = this.readChar();\n                    if (char === undefined) {\n                        return undefined;\n                    }\n                    const num = Number.parseInt(char, radix);\n                    if (Number.isNaN(num)) {\n                        return undefined;\n                    }\n                    return num;\n                });\n                if (digit === undefined) {\n                    break;\n                }\n                result *= radix;\n                result += digit;\n                if (result > maxValue) {\n                    return undefined;\n                }\n                digitCount += 1;\n                if (maxDigits !== undefined) {\n                    if (digitCount > maxDigits) {\n                        return undefined;\n                    }\n                }\n            }\n            if (digitCount === 0) {\n                return undefined;\n            }\n            else if (!allowZeroPrefix && hasLeadingZero && digitCount > 1) {\n                return undefined;\n            }\n            else {\n                return result;\n            }\n        });\n    }\n    /** Read an IPv4 address. */\n    readIPv4Addr() {\n        return this.readAtomically(() => {\n            const out = new Uint8Array(4);\n            for (let i = 0; i < out.length; i++) {\n                const ix = this.readSeparator(\".\", i, () => this.readNumber(10, 3, false, 1));\n                if (ix === undefined) {\n                    return undefined;\n                }\n                out[i] = ix;\n            }\n            return out;\n        });\n    }\n    /** Read an IPv6 Address. */\n    readIPv6Addr() {\n        /**\n         * Read a chunk of an IPv6 address into `groups`. Returns the number\n         * of groups read, along with a bool indicating if an embedded\n         * trailing IPv4 address was read. Specifically, read a series of\n         * colon-separated IPv6 groups (0x0000 - 0xFFFF), with an optional\n         * trailing embedded IPv4 address.\n         */\n        const readGroups = (groups) => {\n            for (let i = 0; i < groups.length / 2; i++) {\n                const ix = i * 2;\n                // Try to read a trailing embedded IPv4 address. There must be at least 4 groups left.\n                if (i < groups.length - 3) {\n                    const ipv4 = this.readSeparator(\":\", i, () => this.readIPv4Addr());\n                    if (ipv4 !== undefined) {\n                        groups[ix] = ipv4[0];\n                        groups[ix + 1] = ipv4[1];\n                        groups[ix + 2] = ipv4[2];\n                        groups[ix + 3] = ipv4[3];\n                        return [ix + 4, true];\n                    }\n                }\n                const group = this.readSeparator(\":\", i, () => this.readNumber(16, 4, true, 2));\n                if (group === undefined) {\n                    return [ix, false];\n                }\n                groups[ix] = group >> 8;\n                groups[ix + 1] = group & 255;\n            }\n            return [groups.length, false];\n        };\n        return this.readAtomically(() => {\n            // Read the front part of the address; either the whole thing, or up to the first ::\n            const head = new Uint8Array(16);\n            const [headSize, headIp4] = readGroups(head);\n            if (headSize === 16) {\n                return head;\n            }\n            // IPv4 part is not allowed before `::`\n            if (headIp4) {\n                return undefined;\n            }\n            // Read `::` if previous code parsed less than 8 groups.\n            // `::` indicates one or more groups of 16 bits of zeros.\n            if (this.readGivenChar(\":\") === undefined) {\n                return undefined;\n            }\n            if (this.readGivenChar(\":\") === undefined) {\n                return undefined;\n            }\n            // Read the back part of the address. The :: must contain at least one\n            // set of zeroes, so our max length is 7.\n            const tail = new Uint8Array(14);\n            const limit = 16 - (headSize + 2);\n            const [tailSize] = readGroups(tail.subarray(0, limit));\n            // Concat the head and tail of the IP address\n            head.set(tail.subarray(0, tailSize), 16 - tailSize);\n            return head;\n        });\n    }\n    /** Read an IP Address, either IPv4 or IPv6. */\n    readIPAddr() {\n        return this.readIPv4Addr() ?? this.readIPv6Addr();\n    }\n}\n//# sourceMappingURL=parser.js.map","import { Parser } from \"./parser.js\";\n// See https://stackoverflow.com/questions/166132/maximum-length-of-the-textual-representation-of-an-ipv6-address\nconst MAX_IPV6_LENGTH = 45;\nconst MAX_IPV4_LENGTH = 15;\nconst parser = new Parser();\n/** Parse `input` into IPv4 bytes. */\nexport function parseIPv4(input) {\n    if (input.length > MAX_IPV4_LENGTH) {\n        return undefined;\n    }\n    return parser.new(input).parseWith(() => parser.readIPv4Addr());\n}\n/** Parse `input` into IPv6 bytes. */\nexport function parseIPv6(input) {\n    if (input.length > MAX_IPV6_LENGTH) {\n        return undefined;\n    }\n    return parser.new(input).parseWith(() => parser.readIPv6Addr());\n}\n/** Parse `input` into IPv4 or IPv6 bytes. */\nexport function parseIP(input) {\n    if (input.length > MAX_IPV6_LENGTH) {\n        return undefined;\n    }\n    return parser.new(input).parseWith(() => parser.readIPAddr());\n}\n//# sourceMappingURL=parse.js.map","import { parseIP, parseIPv4, parseIPv6 } from \"./parse.js\";\n/** Check if `input` is IPv4. */\nexport function isIPv4(input) {\n    return Boolean(parseIPv4(input));\n}\n/** Check if `input` is IPv6. */\nexport function isIPv6(input) {\n    return Boolean(parseIPv6(input));\n}\n/** Check if `input` is IPv4 or IPv6. */\nexport function isIP(input) {\n    return Boolean(parseIP(input));\n}\n/**\n * @returns `6` if `input` is IPv6, `4` if `input` is IPv4, or `undefined` if `input` is neither.\n */\nexport function ipVersion(input) {\n    if (isIPv4(input)) {\n        return 4;\n    }\n    else if (isIPv6(input)) {\n        return 6;\n    }\n    else {\n        return undefined;\n    }\n}\n//# sourceMappingURL=is-ip.js.map","// base-x encoding / decoding\n// Copyright (c) 2018 base-x contributors\n// Copyright (c) 2014-2018 The Bitcoin Core developers (base58.cpp)\n// Distributed under the MIT software license, see the accompanying\n// file LICENSE or http://www.opensource.org/licenses/mit-license.php.\nfunction base (ALPHABET, name) {\n  if (ALPHABET.length >= 255) { throw new TypeError('Alphabet too long') }\n  var BASE_MAP = new Uint8Array(256);\n  for (var j = 0; j < BASE_MAP.length; j++) {\n    BASE_MAP[j] = 255;\n  }\n  for (var i = 0; i < ALPHABET.length; i++) {\n    var x = ALPHABET.charAt(i);\n    var xc = x.charCodeAt(0);\n    if (BASE_MAP[xc] !== 255) { throw new TypeError(x + ' is ambiguous') }\n    BASE_MAP[xc] = i;\n  }\n  var BASE = ALPHABET.length;\n  var LEADER = ALPHABET.charAt(0);\n  var FACTOR = Math.log(BASE) / Math.log(256); // log(BASE) / log(256), rounded up\n  var iFACTOR = Math.log(256) / Math.log(BASE); // log(256) / log(BASE), rounded up\n  function encode (source) {\n    if (source instanceof Uint8Array) ; else if (ArrayBuffer.isView(source)) {\n      source = new Uint8Array(source.buffer, source.byteOffset, source.byteLength);\n    } else if (Array.isArray(source)) {\n      source = Uint8Array.from(source);\n    }\n    if (!(source instanceof Uint8Array)) { throw new TypeError('Expected Uint8Array') }\n    if (source.length === 0) { return '' }\n        // Skip & count leading zeroes.\n    var zeroes = 0;\n    var length = 0;\n    var pbegin = 0;\n    var pend = source.length;\n    while (pbegin !== pend && source[pbegin] === 0) {\n      pbegin++;\n      zeroes++;\n    }\n        // Allocate enough space in big-endian base58 representation.\n    var size = ((pend - pbegin) * iFACTOR + 1) >>> 0;\n    var b58 = new Uint8Array(size);\n        // Process the bytes.\n    while (pbegin !== pend) {\n      var carry = source[pbegin];\n            // Apply \"b58 = b58 * 256 + ch\".\n      var i = 0;\n      for (var it1 = size - 1; (carry !== 0 || i < length) && (it1 !== -1); it1--, i++) {\n        carry += (256 * b58[it1]) >>> 0;\n        b58[it1] = (carry % BASE) >>> 0;\n        carry = (carry / BASE) >>> 0;\n      }\n      if (carry !== 0) { throw new Error('Non-zero carry') }\n      length = i;\n      pbegin++;\n    }\n        // Skip leading zeroes in base58 result.\n    var it2 = size - length;\n    while (it2 !== size && b58[it2] === 0) {\n      it2++;\n    }\n        // Translate the result into a string.\n    var str = LEADER.repeat(zeroes);\n    for (; it2 < size; ++it2) { str += ALPHABET.charAt(b58[it2]); }\n    return str\n  }\n  function decodeUnsafe (source) {\n    if (typeof source !== 'string') { throw new TypeError('Expected String') }\n    if (source.length === 0) { return new Uint8Array() }\n    var psz = 0;\n        // Skip leading spaces.\n    if (source[psz] === ' ') { return }\n        // Skip and count leading '1's.\n    var zeroes = 0;\n    var length = 0;\n    while (source[psz] === LEADER) {\n      zeroes++;\n      psz++;\n    }\n        // Allocate enough space in big-endian base256 representation.\n    var size = (((source.length - psz) * FACTOR) + 1) >>> 0; // log(58) / log(256), rounded up.\n    var b256 = new Uint8Array(size);\n        // Process the characters.\n    while (source[psz]) {\n            // Decode character\n      var carry = BASE_MAP[source.charCodeAt(psz)];\n            // Invalid character\n      if (carry === 255) { return }\n      var i = 0;\n      for (var it3 = size - 1; (carry !== 0 || i < length) && (it3 !== -1); it3--, i++) {\n        carry += (BASE * b256[it3]) >>> 0;\n        b256[it3] = (carry % 256) >>> 0;\n        carry = (carry / 256) >>> 0;\n      }\n      if (carry !== 0) { throw new Error('Non-zero carry') }\n      length = i;\n      psz++;\n    }\n        // Skip trailing spaces.\n    if (source[psz] === ' ') { return }\n        // Skip leading zeroes in b256.\n    var it4 = size - length;\n    while (it4 !== size && b256[it4] === 0) {\n      it4++;\n    }\n    var vch = new Uint8Array(zeroes + (size - it4));\n    var j = zeroes;\n    while (it4 !== size) {\n      vch[j++] = b256[it4++];\n    }\n    return vch\n  }\n  function decode (string) {\n    var buffer = decodeUnsafe(string);\n    if (buffer) { return buffer }\n    throw new Error(`Non-${name} character`)\n  }\n  return {\n    encode: encode,\n    decodeUnsafe: decodeUnsafe,\n    decode: decode\n  }\n}\nvar src = base;\n\nvar _brrp__multiformats_scope_baseX = src;\n\nexport default _brrp__multiformats_scope_baseX;\n","const empty = new Uint8Array(0)\n\n/**\n * @param {Uint8Array} d\n */\nconst toHex = d => d.reduce((hex, byte) => hex + byte.toString(16).padStart(2, '0'), '')\n\n/**\n * @param {string} hex\n */\nconst fromHex = hex => {\n  const hexes = hex.match(/../g)\n  return hexes ? new Uint8Array(hexes.map(b => parseInt(b, 16))) : empty\n}\n\n/**\n * @param {Uint8Array} aa\n * @param {Uint8Array} bb\n */\nconst equals = (aa, bb) => {\n  if (aa === bb) return true\n  if (aa.byteLength !== bb.byteLength) {\n    return false\n  }\n\n  for (let ii = 0; ii < aa.byteLength; ii++) {\n    if (aa[ii] !== bb[ii]) {\n      return false\n    }\n  }\n\n  return true\n}\n\n/**\n * @param {ArrayBufferView|ArrayBuffer|Uint8Array} o\n * @returns {Uint8Array}\n */\nconst coerce = o => {\n  if (o instanceof Uint8Array && o.constructor.name === 'Uint8Array') return o\n  if (o instanceof ArrayBuffer) return new Uint8Array(o)\n  if (ArrayBuffer.isView(o)) {\n    return new Uint8Array(o.buffer, o.byteOffset, o.byteLength)\n  }\n  throw new Error('Unknown type, must be binary type')\n}\n\n/**\n * @param {any} o\n * @returns {o is ArrayBuffer|ArrayBufferView}\n */\nconst isBinary = o =>\n  o instanceof ArrayBuffer || ArrayBuffer.isView(o)\n\n/**\n * @param {string} str\n * @returns {Uint8Array}\n */\nconst fromString = str => (new TextEncoder()).encode(str)\n\n/**\n * @param {Uint8Array} b\n * @returns {string}\n */\nconst toString = b => (new TextDecoder()).decode(b)\n\nexport { equals, coerce, isBinary, fromHex, toHex, fromString, toString, empty }\n","import basex from '../../vendor/base-x.js'\nimport { coerce } from '../bytes.js'\n// Linter can't see that API is used in types.\n// eslint-disable-next-line\nimport * as API from './interface.js'\n\n/**\n * Class represents both BaseEncoder and MultibaseEncoder meaning it\n * can be used to encode to multibase or base encode without multibase\n * prefix.\n *\n * @class\n * @template {string} Base\n * @template {string} Prefix\n * @implements {API.MultibaseEncoder<Prefix>}\n * @implements {API.BaseEncoder}\n */\nclass Encoder {\n  /**\n   * @param {Base} name\n   * @param {Prefix} prefix\n   * @param {(bytes:Uint8Array) => string} baseEncode\n   */\n  constructor (name, prefix, baseEncode) {\n    this.name = name\n    this.prefix = prefix\n    this.baseEncode = baseEncode\n  }\n\n  /**\n   * @param {Uint8Array} bytes\n   * @returns {API.Multibase<Prefix>}\n   */\n  encode (bytes) {\n    if (bytes instanceof Uint8Array) {\n      return `${this.prefix}${this.baseEncode(bytes)}`\n    } else {\n      throw Error('Unknown type, must be binary type')\n    }\n  }\n}\n\n/**\n * @template {string} Prefix\n */\n/**\n * Class represents both BaseDecoder and MultibaseDecoder so it could be used\n * to decode multibases (with matching prefix) or just base decode strings\n * with corresponding base encoding.\n *\n * @class\n * @template {string} Base\n * @template {string} Prefix\n * @implements {API.MultibaseDecoder<Prefix>}\n * @implements {API.UnibaseDecoder<Prefix>}\n * @implements {API.BaseDecoder}\n */\nclass Decoder {\n  /**\n   * @param {Base} name\n   * @param {Prefix} prefix\n   * @param {(text:string) => Uint8Array} baseDecode\n   */\n  constructor (name, prefix, baseDecode) {\n    this.name = name\n    this.prefix = prefix\n    /* c8 ignore next 3 */\n    if (prefix.codePointAt(0) === undefined) {\n      throw new Error('Invalid prefix character')\n    }\n    /** @private */\n    this.prefixCodePoint = /** @type {number} */ (prefix.codePointAt(0))\n    this.baseDecode = baseDecode\n  }\n\n  /**\n   * @param {string} text\n   */\n  decode (text) {\n    if (typeof text === 'string') {\n      if (text.codePointAt(0) !== this.prefixCodePoint) {\n        throw Error(`Unable to decode multibase string ${JSON.stringify(text)}, ${this.name} decoder only supports inputs prefixed with ${this.prefix}`)\n      }\n      return this.baseDecode(text.slice(this.prefix.length))\n    } else {\n      throw Error('Can only multibase decode strings')\n    }\n  }\n\n  /**\n   * @template {string} OtherPrefix\n   * @param {API.UnibaseDecoder<OtherPrefix>|ComposedDecoder<OtherPrefix>} decoder\n   * @returns {ComposedDecoder<Prefix|OtherPrefix>}\n   */\n  or (decoder) {\n    return or(this, decoder)\n  }\n}\n\n/**\n * @template {string} Prefix\n * @typedef {Record<Prefix, API.UnibaseDecoder<Prefix>>} Decoders\n */\n\n/**\n * @template {string} Prefix\n * @implements {API.MultibaseDecoder<Prefix>}\n * @implements {API.CombobaseDecoder<Prefix>}\n */\nclass ComposedDecoder {\n  /**\n   * @param {Decoders<Prefix>} decoders\n   */\n  constructor (decoders) {\n    this.decoders = decoders\n  }\n\n  /**\n   * @template {string} OtherPrefix\n   * @param {API.UnibaseDecoder<OtherPrefix>|ComposedDecoder<OtherPrefix>} decoder\n   * @returns {ComposedDecoder<Prefix|OtherPrefix>}\n   */\n  or (decoder) {\n    return or(this, decoder)\n  }\n\n  /**\n   * @param {string} input\n   * @returns {Uint8Array}\n   */\n  decode (input) {\n    const prefix = /** @type {Prefix} */ (input[0])\n    const decoder = this.decoders[prefix]\n    if (decoder) {\n      return decoder.decode(input)\n    } else {\n      throw RangeError(`Unable to decode multibase string ${JSON.stringify(input)}, only inputs prefixed with ${Object.keys(this.decoders)} are supported`)\n    }\n  }\n}\n\n/**\n * @template {string} L\n * @template {string} R\n * @param {API.UnibaseDecoder<L>|API.CombobaseDecoder<L>} left\n * @param {API.UnibaseDecoder<R>|API.CombobaseDecoder<R>} right\n * @returns {ComposedDecoder<L|R>}\n */\nexport const or = (left, right) => new ComposedDecoder(/** @type {Decoders<L|R>} */({\n  ...(left.decoders || { [/** @type API.UnibaseDecoder<L> */(left).prefix]: left }),\n  ...(right.decoders || { [/** @type API.UnibaseDecoder<R> */(right).prefix]: right })\n}))\n\n/**\n * @class\n * @template {string} Base\n * @template {string} Prefix\n * @implements {API.MultibaseCodec<Prefix>}\n * @implements {API.MultibaseEncoder<Prefix>}\n * @implements {API.MultibaseDecoder<Prefix>}\n * @implements {API.BaseCodec}\n * @implements {API.BaseEncoder}\n * @implements {API.BaseDecoder}\n */\nexport class Codec {\n  /**\n   * @param {Base} name\n   * @param {Prefix} prefix\n   * @param {(bytes:Uint8Array) => string} baseEncode\n   * @param {(text:string) => Uint8Array} baseDecode\n   */\n  constructor (name, prefix, baseEncode, baseDecode) {\n    this.name = name\n    this.prefix = prefix\n    this.baseEncode = baseEncode\n    this.baseDecode = baseDecode\n    this.encoder = new Encoder(name, prefix, baseEncode)\n    this.decoder = new Decoder(name, prefix, baseDecode)\n  }\n\n  /**\n   * @param {Uint8Array} input\n   */\n  encode (input) {\n    return this.encoder.encode(input)\n  }\n\n  /**\n   * @param {string} input\n   */\n  decode (input) {\n    return this.decoder.decode(input)\n  }\n}\n\n/**\n * @template {string} Base\n * @template {string} Prefix\n * @param {object} options\n * @param {Base} options.name\n * @param {Prefix} options.prefix\n * @param {(bytes:Uint8Array) => string} options.encode\n * @param {(input:string) => Uint8Array} options.decode\n * @returns {Codec<Base, Prefix>}\n */\nexport const from = ({ name, prefix, encode, decode }) =>\n  new Codec(name, prefix, encode, decode)\n\n/**\n * @template {string} Base\n * @template {string} Prefix\n * @param {object} options\n * @param {Base} options.name\n * @param {Prefix} options.prefix\n * @param {string} options.alphabet\n * @returns {Codec<Base, Prefix>}\n */\nexport const baseX = ({ prefix, name, alphabet }) => {\n  const { encode, decode } = basex(alphabet, name)\n  return from({\n    prefix,\n    name,\n    encode,\n    /**\n     * @param {string} text\n     */\n    decode: text => coerce(decode(text))\n  })\n}\n\n/**\n * @param {string} string\n * @param {string} alphabet\n * @param {number} bitsPerChar\n * @param {string} name\n * @returns {Uint8Array}\n */\nconst decode = (string, alphabet, bitsPerChar, name) => {\n  // Build the character lookup table:\n  /** @type {Record<string, number>} */\n  const codes = {}\n  for (let i = 0; i < alphabet.length; ++i) {\n    codes[alphabet[i]] = i\n  }\n\n  // Count the padding bytes:\n  let end = string.length\n  while (string[end - 1] === '=') {\n    --end\n  }\n\n  // Allocate the output:\n  const out = new Uint8Array((end * bitsPerChar / 8) | 0)\n\n  // Parse the data:\n  let bits = 0 // Number of bits currently in the buffer\n  let buffer = 0 // Bits waiting to be written out, MSB first\n  let written = 0 // Next byte to write\n  for (let i = 0; i < end; ++i) {\n    // Read one character from the string:\n    const value = codes[string[i]]\n    if (value === undefined) {\n      throw new SyntaxError(`Non-${name} character`)\n    }\n\n    // Append the bits to the buffer:\n    buffer = (buffer << bitsPerChar) | value\n    bits += bitsPerChar\n\n    // Write out some bits if the buffer has a byte's worth:\n    if (bits >= 8) {\n      bits -= 8\n      out[written++] = 0xff & (buffer >> bits)\n    }\n  }\n\n  // Verify that we have received just enough bits:\n  if (bits >= bitsPerChar || 0xff & (buffer << (8 - bits))) {\n    throw new SyntaxError('Unexpected end of data')\n  }\n\n  return out\n}\n\n/**\n * @param {Uint8Array} data\n * @param {string} alphabet\n * @param {number} bitsPerChar\n * @returns {string}\n */\nconst encode = (data, alphabet, bitsPerChar) => {\n  const pad = alphabet[alphabet.length - 1] === '='\n  const mask = (1 << bitsPerChar) - 1\n  let out = ''\n\n  let bits = 0 // Number of bits currently in the buffer\n  let buffer = 0 // Bits waiting to be written out, MSB first\n  for (let i = 0; i < data.length; ++i) {\n    // Slurp data into the buffer:\n    buffer = (buffer << 8) | data[i]\n    bits += 8\n\n    // Write out as much as we can:\n    while (bits > bitsPerChar) {\n      bits -= bitsPerChar\n      out += alphabet[mask & (buffer >> bits)]\n    }\n  }\n\n  // Partial character:\n  if (bits) {\n    out += alphabet[mask & (buffer << (bitsPerChar - bits))]\n  }\n\n  // Add padding characters until we hit a byte boundary:\n  if (pad) {\n    while ((out.length * bitsPerChar) & 7) {\n      out += '='\n    }\n  }\n\n  return out\n}\n\n/**\n * RFC4648 Factory\n *\n * @template {string} Base\n * @template {string} Prefix\n * @param {object} options\n * @param {Base} options.name\n * @param {Prefix} options.prefix\n * @param {string} options.alphabet\n * @param {number} options.bitsPerChar\n */\nexport const rfc4648 = ({ name, prefix, bitsPerChar, alphabet }) => {\n  return from({\n    prefix,\n    name,\n    encode (input) {\n      return encode(input, alphabet, bitsPerChar)\n    },\n    decode (input) {\n      return decode(input, alphabet, bitsPerChar, name)\n    }\n  })\n}\n","// @ts-check\n\nimport { from } from './base.js'\nimport { fromString, toString } from '../bytes.js'\n\nexport const identity = from({\n  prefix: '\\x00',\n  name: 'identity',\n  encode: (buf) => toString(buf),\n  decode: (str) => fromString(str)\n})\n","// @ts-check\n\nimport { rfc4648 } from './base.js'\n\nexport const base2 = rfc4648({\n  prefix: '0',\n  name: 'base2',\n  alphabet: '01',\n  bitsPerChar: 1\n})\n","// @ts-check\n\nimport { rfc4648 } from './base.js'\n\nexport const base8 = rfc4648({\n  prefix: '7',\n  name: 'base8',\n  alphabet: '01234567',\n  bitsPerChar: 3\n})\n","import { baseX } from './base.js'\n\nexport const base10 = baseX({\n  prefix: '9',\n  name: 'base10',\n  alphabet: '0123456789'\n})\n","// @ts-check\n\nimport { rfc4648 } from './base.js'\n\nexport const base16 = rfc4648({\n  prefix: 'f',\n  name: 'base16',\n  alphabet: '0123456789abcdef',\n  bitsPerChar: 4\n})\n\nexport const base16upper = rfc4648({\n  prefix: 'F',\n  name: 'base16upper',\n  alphabet: '0123456789ABCDEF',\n  bitsPerChar: 4\n})\n","import { rfc4648 } from './base.js'\n\nexport const base32 = rfc4648({\n  prefix: 'b',\n  name: 'base32',\n  alphabet: 'abcdefghijklmnopqrstuvwxyz234567',\n  bitsPerChar: 5\n})\n\nexport const base32upper = rfc4648({\n  prefix: 'B',\n  name: 'base32upper',\n  alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZ234567',\n  bitsPerChar: 5\n})\n\nexport const base32pad = rfc4648({\n  prefix: 'c',\n  name: 'base32pad',\n  alphabet: 'abcdefghijklmnopqrstuvwxyz234567=',\n  bitsPerChar: 5\n})\n\nexport const base32padupper = rfc4648({\n  prefix: 'C',\n  name: 'base32padupper',\n  alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZ234567=',\n  bitsPerChar: 5\n})\n\nexport const base32hex = rfc4648({\n  prefix: 'v',\n  name: 'base32hex',\n  alphabet: '0123456789abcdefghijklmnopqrstuv',\n  bitsPerChar: 5\n})\n\nexport const base32hexupper = rfc4648({\n  prefix: 'V',\n  name: 'base32hexupper',\n  alphabet: '0123456789ABCDEFGHIJKLMNOPQRSTUV',\n  bitsPerChar: 5\n})\n\nexport const base32hexpad = rfc4648({\n  prefix: 't',\n  name: 'base32hexpad',\n  alphabet: '0123456789abcdefghijklmnopqrstuv=',\n  bitsPerChar: 5\n})\n\nexport const base32hexpadupper = rfc4648({\n  prefix: 'T',\n  name: 'base32hexpadupper',\n  alphabet: '0123456789ABCDEFGHIJKLMNOPQRSTUV=',\n  bitsPerChar: 5\n})\n\nexport const base32z = rfc4648({\n  prefix: 'h',\n  name: 'base32z',\n  alphabet: 'ybndrfg8ejkmcpqxot1uwisza345h769',\n  bitsPerChar: 5\n})\n","import { baseX } from './base.js'\n\nexport const base36 = baseX({\n  prefix: 'k',\n  name: 'base36',\n  alphabet: '0123456789abcdefghijklmnopqrstuvwxyz'\n})\n\nexport const base36upper = baseX({\n  prefix: 'K',\n  name: 'base36upper',\n  alphabet: '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ'\n})\n","import { baseX } from './base.js'\n\nexport const base58btc = baseX({\n  name: 'base58btc',\n  prefix: 'z',\n  alphabet: '123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz'\n})\n\nexport const base58flickr = baseX({\n  name: 'base58flickr',\n  prefix: 'Z',\n  alphabet: '123456789abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ'\n})\n","// @ts-check\n\nimport { rfc4648 } from './base.js'\n\nexport const base64 = rfc4648({\n  prefix: 'm',\n  name: 'base64',\n  alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/',\n  bitsPerChar: 6\n})\n\nexport const base64pad = rfc4648({\n  prefix: 'M',\n  name: 'base64pad',\n  alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=',\n  bitsPerChar: 6\n})\n\nexport const base64url = rfc4648({\n  prefix: 'u',\n  name: 'base64url',\n  alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_',\n  bitsPerChar: 6\n})\n\nexport const base64urlpad = rfc4648({\n  prefix: 'U',\n  name: 'base64urlpad',\n  alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_=',\n  bitsPerChar: 6\n})\n","import { from } from './base.js'\n\nconst alphabet = Array.from('🚀🪐☄🛰🌌🌑🌒🌓🌔🌕🌖🌗🌘🌍🌏🌎🐉☀💻🖥💾💿😂❤😍🤣😊🙏💕😭😘👍😅👏😁🔥🥰💔💖💙😢🤔😆🙄💪😉☺👌🤗💜😔😎😇🌹🤦🎉💞✌✨🤷😱😌🌸🙌😋💗💚😏💛🙂💓🤩😄😀🖤😃💯🙈👇🎶😒🤭❣😜💋👀😪😑💥🙋😞😩😡🤪👊🥳😥🤤👉💃😳✋😚😝😴🌟😬🙃🍀🌷😻😓⭐✅🥺🌈😈🤘💦✔😣🏃💐☹🎊💘😠☝😕🌺🎂🌻😐🖕💝🙊😹🗣💫💀👑🎵🤞😛🔴😤🌼😫⚽🤙☕🏆🤫👈😮🙆🍻🍃🐶💁😲🌿🧡🎁⚡🌞🎈❌✊👋😰🤨😶🤝🚶💰🍓💢🤟🙁🚨💨🤬✈🎀🍺🤓😙💟🌱😖👶🥴▶➡❓💎💸⬇😨🌚🦋😷🕺⚠🙅😟😵👎🤲🤠🤧📌🔵💅🧐🐾🍒😗🤑🌊🤯🐷☎💧😯💆👆🎤🙇🍑❄🌴💣🐸💌📍🥀🤢👅💡💩👐📸👻🤐🤮🎼🥵🚩🍎🍊👼💍📣🥂')\nconst alphabetBytesToChars = /** @type {string[]} */ (alphabet.reduce((p, c, i) => { p[i] = c; return p }, /** @type {string[]} */([])))\nconst alphabetCharsToBytes = /** @type {number[]} */ (alphabet.reduce((p, c, i) => { p[/** @type {number} */ (c.codePointAt(0))] = i; return p }, /** @type {number[]} */([])))\n\n/**\n * @param {Uint8Array} data\n * @returns {string}\n */\nfunction encode (data) {\n  return data.reduce((p, c) => {\n    p += alphabetBytesToChars[c]\n    return p\n  }, '')\n}\n\n/**\n * @param {string} str\n * @returns {Uint8Array}\n */\nfunction decode (str) {\n  const byts = []\n  for (const char of str) {\n    const byt = alphabetCharsToBytes[/** @type {number} */ (char.codePointAt(0))]\n    if (byt === undefined) {\n      throw new Error(`Non-base256emoji character: ${char}`)\n    }\n    byts.push(byt)\n  }\n  return new Uint8Array(byts)\n}\n\nexport const base256emoji = from({\n  prefix: '🚀',\n  name: 'base256emoji',\n  encode,\n  decode\n})\n","var encode_1 = encode;\n\nvar MSB = 0x80\n  , REST = 0x7F\n  , MSBALL = ~REST\n  , INT = Math.pow(2, 31);\n\nfunction encode(num, out, offset) {\n  out = out || [];\n  offset = offset || 0;\n  var oldOffset = offset;\n\n  while(num >= INT) {\n    out[offset++] = (num & 0xFF) | MSB;\n    num /= 128;\n  }\n  while(num & MSBALL) {\n    out[offset++] = (num & 0xFF) | MSB;\n    num >>>= 7;\n  }\n  out[offset] = num | 0;\n  \n  encode.bytes = offset - oldOffset + 1;\n  \n  return out\n}\n\nvar decode = read;\n\nvar MSB$1 = 0x80\n  , REST$1 = 0x7F;\n\nfunction read(buf, offset) {\n  var res    = 0\n    , offset = offset || 0\n    , shift  = 0\n    , counter = offset\n    , b\n    , l = buf.length;\n\n  do {\n    if (counter >= l) {\n      read.bytes = 0;\n      throw new RangeError('Could not decode varint')\n    }\n    b = buf[counter++];\n    res += shift < 28\n      ? (b & REST$1) << shift\n      : (b & REST$1) * Math.pow(2, shift);\n    shift += 7;\n  } while (b >= MSB$1)\n\n  read.bytes = counter - offset;\n\n  return res\n}\n\nvar N1 = Math.pow(2,  7);\nvar N2 = Math.pow(2, 14);\nvar N3 = Math.pow(2, 21);\nvar N4 = Math.pow(2, 28);\nvar N5 = Math.pow(2, 35);\nvar N6 = Math.pow(2, 42);\nvar N7 = Math.pow(2, 49);\nvar N8 = Math.pow(2, 56);\nvar N9 = Math.pow(2, 63);\n\nvar length = function (value) {\n  return (\n    value < N1 ? 1\n  : value < N2 ? 2\n  : value < N3 ? 3\n  : value < N4 ? 4\n  : value < N5 ? 5\n  : value < N6 ? 6\n  : value < N7 ? 7\n  : value < N8 ? 8\n  : value < N9 ? 9\n  :              10\n  )\n};\n\nvar varint = {\n    encode: encode_1\n  , decode: decode\n  , encodingLength: length\n};\n\nvar _brrp_varint = varint;\n\nexport default _brrp_varint;\n","import varint from '../vendor/varint.js'\n\n/**\n * @param {Uint8Array} data\n * @param {number} [offset=0]\n * @returns {[number, number]}\n */\nexport const decode = (data, offset = 0) => {\n  const code = varint.decode(data, offset)\n  return [code, varint.decode.bytes]\n}\n\n/**\n * @param {number} int\n * @param {Uint8Array} target\n * @param {number} [offset=0]\n */\nexport const encodeTo = (int, target, offset = 0) => {\n  varint.encode(int, target, offset)\n  return target\n}\n\n/**\n * @param {number} int\n * @returns {number}\n */\nexport const encodingLength = (int) => {\n  return varint.encodingLength(int)\n}\n","import { coerce, equals as equalBytes } from '../bytes.js'\nimport * as varint from '../varint.js'\n\n/**\n * Creates a multihash digest.\n *\n * @template {number} Code\n * @param {Code} code\n * @param {Uint8Array} digest\n */\nexport const create = (code, digest) => {\n  const size = digest.byteLength\n  const sizeOffset = varint.encodingLength(code)\n  const digestOffset = sizeOffset + varint.encodingLength(size)\n\n  const bytes = new Uint8Array(digestOffset + size)\n  varint.encodeTo(code, bytes, 0)\n  varint.encodeTo(size, bytes, sizeOffset)\n  bytes.set(digest, digestOffset)\n\n  return new Digest(code, size, digest, bytes)\n}\n\n/**\n * Turns bytes representation of multihash digest into an instance.\n *\n * @param {Uint8Array} multihash\n * @returns {MultihashDigest}\n */\nexport const decode = (multihash) => {\n  const bytes = coerce(multihash)\n  const [code, sizeOffset] = varint.decode(bytes)\n  const [size, digestOffset] = varint.decode(bytes.subarray(sizeOffset))\n  const digest = bytes.subarray(sizeOffset + digestOffset)\n\n  if (digest.byteLength !== size) {\n    throw new Error('Incorrect length')\n  }\n\n  return new Digest(code, size, digest, bytes)\n}\n\n/**\n * @param {MultihashDigest} a\n * @param {unknown} b\n * @returns {b is MultihashDigest}\n */\nexport const equals = (a, b) => {\n  if (a === b) {\n    return true\n  } else {\n    const data = /** @type {{code?:unknown, size?:unknown, bytes?:unknown}} */(b)\n\n    return (\n      a.code === data.code &&\n      a.size === data.size &&\n      data.bytes instanceof Uint8Array &&\n      equalBytes(a.bytes, data.bytes)\n    )\n  }\n}\n\n/**\n * @typedef {import('./interface.js').MultihashDigest} MultihashDigest\n */\n\n/**\n * Represents a multihash digest which carries information about the\n * hashing algorithm and an actual hash digest.\n *\n * @template {number} Code\n * @template {number} Size\n * @class\n * @implements {MultihashDigest}\n */\nexport class Digest {\n  /**\n   * Creates a multihash digest.\n   *\n   * @param {Code} code\n   * @param {Size} size\n   * @param {Uint8Array} digest\n   * @param {Uint8Array} bytes\n   */\n  constructor (code, size, digest, bytes) {\n    this.code = code\n    this.size = size\n    this.digest = digest\n    this.bytes = bytes\n  }\n}\n","// @ts-check\n\n/**\n * @template T\n * @typedef {import('./interface.js').ByteView<T>} ByteView\n */\n\nconst textEncoder = new TextEncoder()\nconst textDecoder = new TextDecoder()\n\nexport const name = 'json'\nexport const code = 0x0200\n\n/**\n * @template T\n * @param {T} node\n * @returns {ByteView<T>}\n */\nexport const encode = (node) => textEncoder.encode(JSON.stringify(node))\n\n/**\n * @template T\n * @param {ByteView<T>} data\n * @returns {T}\n */\nexport const decode = (data) => JSON.parse(textDecoder.decode(data))\n","import * as varint from './varint.js'\nimport * as Digest from './hashes/digest.js'\nimport { base58btc } from './bases/base58.js'\nimport { base32 } from './bases/base32.js'\nimport { coerce } from './bytes.js'\n// Linter can see that API is used in types.\n// eslint-disable-next-line\nimport * as API from \"./link/interface.js\"\n\n// This way TS will also expose all the types from module\nexport * from './link/interface.js'\n\n/**\n * @template {API.Link<unknown, number, number, API.Version>} T\n * @template {string} Prefix\n * @param {T} link\n * @param {API.MultibaseEncoder<Prefix>} [base]\n * @returns {API.ToString<T, Prefix>}\n */\nexport const format = (link, base) => {\n  const { bytes, version } = link\n  switch (version) {\n    case 0:\n      return toStringV0(\n        bytes,\n        baseCache(link),\n        /** @type {API.MultibaseEncoder<\"z\">} */ (base) || base58btc.encoder\n      )\n    default:\n      return toStringV1(\n        bytes,\n        baseCache(link),\n        /** @type {API.MultibaseEncoder<Prefix>} */ (base || base32.encoder)\n      )\n  }\n}\n\n/**\n * @template {API.UnknownLink} Link\n * @param {Link} link\n * @returns {API.LinkJSON<Link>}\n */\nexport const toJSON = (link) => ({\n  '/': format(link)\n})\n\n/**\n * @template {API.UnknownLink} Link\n * @param {API.LinkJSON<Link>} json\n */\nexport const fromJSON = (json) =>\n  CID.parse(json['/'])\n\n/** @type {WeakMap<API.UnknownLink, Map<string, string>>} */\nconst cache = new WeakMap()\n\n/**\n * @param {API.UnknownLink} cid\n * @returns {Map<string, string>}\n */\nconst baseCache = cid => {\n  const baseCache = cache.get(cid)\n  if (baseCache == null) {\n    const baseCache = new Map()\n    cache.set(cid, baseCache)\n    return baseCache\n  }\n  return baseCache\n}\n\n/**\n * @template {unknown} [Data=unknown]\n * @template {number} [Format=number]\n * @template {number} [Alg=number]\n * @template {API.Version} [Version=API.Version]\n * @implements {API.Link<Data, Format, Alg, Version>}\n */\n\nexport class CID {\n  /**\n   * @param {Version} version - Version of the CID\n   * @param {Format} code - Code of the codec content is encoded in, see https://github.com/multiformats/multicodec/blob/master/table.csv\n   * @param {API.MultihashDigest<Alg>} multihash - (Multi)hash of the of the content.\n   * @param {Uint8Array} bytes\n   *\n   */\n  constructor (version, code, multihash, bytes) {\n    /** @readonly */\n    this.code = code\n    /** @readonly */\n    this.version = version\n    /** @readonly */\n    this.multihash = multihash\n    /** @readonly */\n    this.bytes = bytes\n\n    // flag to serializers that this is a CID and\n    // should be treated specially\n    /** @readonly */\n    this['/'] = bytes\n  }\n\n  /**\n   * Signalling `cid.asCID === cid` has been replaced with `cid['/'] === cid.bytes`\n   * please either use `CID.asCID(cid)` or switch to new signalling mechanism\n   *\n   * @deprecated\n   */\n  get asCID () {\n    return this\n  }\n\n  // ArrayBufferView\n  get byteOffset () {\n    return this.bytes.byteOffset\n  }\n\n  // ArrayBufferView\n  get byteLength () {\n    return this.bytes.byteLength\n  }\n\n  /**\n   * @returns {CID<Data, API.DAG_PB, API.SHA_256, 0>}\n   */\n  toV0 () {\n    switch (this.version) {\n      case 0: {\n        return /** @type {CID<Data, API.DAG_PB, API.SHA_256, 0>} */ (this)\n      }\n      case 1: {\n        const { code, multihash } = this\n\n        if (code !== DAG_PB_CODE) {\n          throw new Error('Cannot convert a non dag-pb CID to CIDv0')\n        }\n\n        // sha2-256\n        if (multihash.code !== SHA_256_CODE) {\n          throw new Error('Cannot convert non sha2-256 multihash CID to CIDv0')\n        }\n\n        return /** @type {CID<Data, API.DAG_PB, API.SHA_256, 0>} */ (\n          CID.createV0(\n            /** @type {API.MultihashDigest<API.SHA_256>} */ (multihash)\n          )\n        )\n      }\n      default: {\n        throw Error(\n          `Can not convert CID version ${this.version} to version 0. This is a bug please report`\n        )\n      }\n    }\n  }\n\n  /**\n   * @returns {CID<Data, Format, Alg, 1>}\n   */\n  toV1 () {\n    switch (this.version) {\n      case 0: {\n        const { code, digest } = this.multihash\n        const multihash = Digest.create(code, digest)\n        return /** @type {CID<Data, Format, Alg, 1>} */ (\n          CID.createV1(this.code, multihash)\n        )\n      }\n      case 1: {\n        return /** @type {CID<Data, Format, Alg, 1>} */ (this)\n      }\n      default: {\n        throw Error(\n          `Can not convert CID version ${this.version} to version 1. This is a bug please report`\n        )\n      }\n    }\n  }\n\n  /**\n   * @param {unknown} other\n   * @returns {other is CID<Data, Format, Alg, Version>}\n   */\n  equals (other) {\n    return CID.equals(this, other)\n  }\n\n  /**\n   * @template {unknown} Data\n   * @template {number} Format\n   * @template {number} Alg\n   * @template {API.Version} Version\n   * @param {API.Link<Data, Format, Alg, Version>} self\n   * @param {unknown} other\n   * @returns {other is CID}\n   */\n  static equals (self, other) {\n    const unknown =\n      /** @type {{code?:unknown, version?:unknown, multihash?:unknown}} */ (\n        other\n      )\n    return (\n      unknown &&\n      self.code === unknown.code &&\n      self.version === unknown.version &&\n      Digest.equals(self.multihash, unknown.multihash)\n    )\n  }\n\n  /**\n   * @param {API.MultibaseEncoder<string>} [base]\n   * @returns {string}\n   */\n  toString (base) {\n    return format(this, base)\n  }\n\n  toJSON () {\n    return { '/': format(this) }\n  }\n\n  link () {\n    return this\n  }\n\n  get [Symbol.toStringTag] () {\n    return 'CID'\n  }\n\n  // Legacy\n\n  [Symbol.for('nodejs.util.inspect.custom')] () {\n    return `CID(${this.toString()})`\n  }\n\n  /**\n   * Takes any input `value` and returns a `CID` instance if it was\n   * a `CID` otherwise returns `null`. If `value` is instanceof `CID`\n   * it will return value back. If `value` is not instance of this CID\n   * class, but is compatible CID it will return new instance of this\n   * `CID` class. Otherwise returns null.\n   *\n   * This allows two different incompatible versions of CID library to\n   * co-exist and interop as long as binary interface is compatible.\n   *\n   * @template {unknown} Data\n   * @template {number} Format\n   * @template {number} Alg\n   * @template {API.Version} Version\n   * @template {unknown} U\n   * @param {API.Link<Data, Format, Alg, Version>|U} input\n   * @returns {CID<Data, Format, Alg, Version>|null}\n   */\n  static asCID (input) {\n    if (input == null) {\n      return null\n    }\n\n    const value = /** @type {any} */ (input)\n    if (value instanceof CID) {\n      // If value is instance of CID then we're all set.\n      return value\n    } else if ((value['/'] != null && value['/'] === value.bytes) || value.asCID === value) {\n      // If value isn't instance of this CID class but `this.asCID === this` or\n      // `value['/'] === value.bytes` is true it is CID instance coming from a\n      // different implementation (diff version or duplicate). In that case we\n      // rebase it to this `CID` implementation so caller is guaranteed to get\n      // instance with expected API.\n      const { version, code, multihash, bytes } = value\n      return new CID(\n        version,\n        code,\n        /** @type {API.MultihashDigest<Alg>} */ (multihash),\n        bytes || encodeCID(version, code, multihash.bytes)\n      )\n    } else if (value[cidSymbol] === true) {\n      // If value is a CID from older implementation that used to be tagged via\n      // symbol we still rebase it to the this `CID` implementation by\n      // delegating that to a constructor.\n      const { version, multihash, code } = value\n      const digest =\n        /** @type {API.MultihashDigest<Alg>} */\n        (Digest.decode(multihash))\n      return CID.create(version, code, digest)\n    } else {\n      // Otherwise value is not a CID (or an incompatible version of it) in\n      // which case we return `null`.\n      return null\n    }\n  }\n\n  /**\n   *\n   * @template {unknown} Data\n   * @template {number} Format\n   * @template {number} Alg\n   * @template {API.Version} Version\n   * @param {Version} version - Version of the CID\n   * @param {Format} code - Code of the codec content is encoded in, see https://github.com/multiformats/multicodec/blob/master/table.csv\n   * @param {API.MultihashDigest<Alg>} digest - (Multi)hash of the of the content.\n   * @returns {CID<Data, Format, Alg, Version>}\n   */\n  static create (version, code, digest) {\n    if (typeof code !== 'number') {\n      throw new Error('String codecs are no longer supported')\n    }\n\n    if (!(digest.bytes instanceof Uint8Array)) {\n      throw new Error('Invalid digest')\n    }\n\n    switch (version) {\n      case 0: {\n        if (code !== DAG_PB_CODE) {\n          throw new Error(\n            `Version 0 CID must use dag-pb (code: ${DAG_PB_CODE}) block encoding`\n          )\n        } else {\n          return new CID(version, code, digest, digest.bytes)\n        }\n      }\n      case 1: {\n        const bytes = encodeCID(version, code, digest.bytes)\n        return new CID(version, code, digest, bytes)\n      }\n      default: {\n        throw new Error('Invalid version')\n      }\n    }\n  }\n\n  /**\n   * Simplified version of `create` for CIDv0.\n   *\n   * @template {unknown} [T=unknown]\n   * @param {API.MultihashDigest<typeof SHA_256_CODE>} digest - Multihash.\n   * @returns {CID<T, typeof DAG_PB_CODE, typeof SHA_256_CODE, 0>}\n   */\n  static createV0 (digest) {\n    return CID.create(0, DAG_PB_CODE, digest)\n  }\n\n  /**\n   * Simplified version of `create` for CIDv1.\n   *\n   * @template {unknown} Data\n   * @template {number} Code\n   * @template {number} Alg\n   * @param {Code} code - Content encoding format code.\n   * @param {API.MultihashDigest<Alg>} digest - Miltihash of the content.\n   * @returns {CID<Data, Code, Alg, 1>}\n   */\n  static createV1 (code, digest) {\n    return CID.create(1, code, digest)\n  }\n\n  /**\n   * Decoded a CID from its binary representation. The byte array must contain\n   * only the CID with no additional bytes.\n   *\n   * An error will be thrown if the bytes provided do not contain a valid\n   * binary representation of a CID.\n   *\n   * @template {unknown} Data\n   * @template {number} Code\n   * @template {number} Alg\n   * @template {API.Version} Ver\n   * @param {API.ByteView<API.Link<Data, Code, Alg, Ver>>} bytes\n   * @returns {CID<Data, Code, Alg, Ver>}\n   */\n  static decode (bytes) {\n    const [cid, remainder] = CID.decodeFirst(bytes)\n    if (remainder.length) {\n      throw new Error('Incorrect length')\n    }\n    return cid\n  }\n\n  /**\n   * Decoded a CID from its binary representation at the beginning of a byte\n   * array.\n   *\n   * Returns an array with the first element containing the CID and the second\n   * element containing the remainder of the original byte array. The remainder\n   * will be a zero-length byte array if the provided bytes only contained a\n   * binary CID representation.\n   *\n   * @template {unknown} T\n   * @template {number} C\n   * @template {number} A\n   * @template {API.Version} V\n   * @param {API.ByteView<API.Link<T, C, A, V>>} bytes\n   * @returns {[CID<T, C, A, V>, Uint8Array]}\n   */\n  static decodeFirst (bytes) {\n    const specs = CID.inspectBytes(bytes)\n    const prefixSize = specs.size - specs.multihashSize\n    const multihashBytes = coerce(\n      bytes.subarray(prefixSize, prefixSize + specs.multihashSize)\n    )\n    if (multihashBytes.byteLength !== specs.multihashSize) {\n      throw new Error('Incorrect length')\n    }\n    const digestBytes = multihashBytes.subarray(\n      specs.multihashSize - specs.digestSize\n    )\n    const digest = new Digest.Digest(\n      specs.multihashCode,\n      specs.digestSize,\n      digestBytes,\n      multihashBytes\n    )\n    const cid =\n      specs.version === 0\n        ? CID.createV0(/** @type {API.MultihashDigest<API.SHA_256>} */ (digest))\n        : CID.createV1(specs.codec, digest)\n    return [/** @type {CID<T, C, A, V>} */(cid), bytes.subarray(specs.size)]\n  }\n\n  /**\n   * Inspect the initial bytes of a CID to determine its properties.\n   *\n   * Involves decoding up to 4 varints. Typically this will require only 4 to 6\n   * bytes but for larger multicodec code values and larger multihash digest\n   * lengths these varints can be quite large. It is recommended that at least\n   * 10 bytes be made available in the `initialBytes` argument for a complete\n   * inspection.\n   *\n   * @template {unknown} T\n   * @template {number} C\n   * @template {number} A\n   * @template {API.Version} V\n   * @param {API.ByteView<API.Link<T, C, A, V>>} initialBytes\n   * @returns {{ version:V, codec:C, multihashCode:A, digestSize:number, multihashSize:number, size:number }}\n   */\n  static inspectBytes (initialBytes) {\n    let offset = 0\n    const next = () => {\n      const [i, length] = varint.decode(initialBytes.subarray(offset))\n      offset += length\n      return i\n    }\n\n    let version = /** @type {V} */ (next())\n    let codec = /** @type {C} */ (DAG_PB_CODE)\n    if (/** @type {number} */(version) === 18) {\n      // CIDv0\n      version = /** @type {V} */ (0)\n      offset = 0\n    } else {\n      codec = /** @type {C} */ (next())\n    }\n\n    if (version !== 0 && version !== 1) {\n      throw new RangeError(`Invalid CID version ${version}`)\n    }\n\n    const prefixSize = offset\n    const multihashCode = /** @type {A} */ (next()) // multihash code\n    const digestSize = next() // multihash length\n    const size = offset + digestSize\n    const multihashSize = size - prefixSize\n\n    return { version, codec, multihashCode, digestSize, multihashSize, size }\n  }\n\n  /**\n   * Takes cid in a string representation and creates an instance. If `base`\n   * decoder is not provided will use a default from the configuration. It will\n   * throw an error if encoding of the CID is not compatible with supplied (or\n   * a default decoder).\n   *\n   * @template {string} Prefix\n   * @template {unknown} Data\n   * @template {number} Code\n   * @template {number} Alg\n   * @template {API.Version} Ver\n   * @param {API.ToString<API.Link<Data, Code, Alg, Ver>, Prefix>} source\n   * @param {API.MultibaseDecoder<Prefix>} [base]\n   * @returns {CID<Data, Code, Alg, Ver>}\n   */\n  static parse (source, base) {\n    const [prefix, bytes] = parseCIDtoBytes(source, base)\n\n    const cid = CID.decode(bytes)\n\n    if (cid.version === 0 && source[0] !== 'Q') {\n      throw Error('Version 0 CID string must not include multibase prefix')\n    }\n\n    // Cache string representation to avoid computing it on `this.toString()`\n    baseCache(cid).set(prefix, source)\n\n    return cid\n  }\n}\n\n/**\n * @template {string} Prefix\n * @template {unknown} Data\n * @template {number} Code\n * @template {number} Alg\n * @template {API.Version} Ver\n * @param {API.ToString<API.Link<Data, Code, Alg, Ver>, Prefix>} source\n * @param {API.MultibaseDecoder<Prefix>} [base]\n * @returns {[Prefix, API.ByteView<API.Link<Data, Code, Alg, Ver>>]}\n */\nconst parseCIDtoBytes = (source, base) => {\n  switch (source[0]) {\n    // CIDv0 is parsed differently\n    case 'Q': {\n      const decoder = base || base58btc\n      return [\n        /** @type {Prefix} */ (base58btc.prefix),\n        decoder.decode(`${base58btc.prefix}${source}`)\n      ]\n    }\n    case base58btc.prefix: {\n      const decoder = base || base58btc\n      return [/** @type {Prefix} */(base58btc.prefix), decoder.decode(source)]\n    }\n    case base32.prefix: {\n      const decoder = base || base32\n      return [/** @type {Prefix} */(base32.prefix), decoder.decode(source)]\n    }\n    default: {\n      if (base == null) {\n        throw Error(\n          'To parse non base32 or base58btc encoded CID multibase decoder must be provided'\n        )\n      }\n      return [/** @type {Prefix} */(source[0]), base.decode(source)]\n    }\n  }\n}\n\n/**\n *\n * @param {Uint8Array} bytes\n * @param {Map<string, string>} cache\n * @param {API.MultibaseEncoder<'z'>} base\n */\nconst toStringV0 = (bytes, cache, base) => {\n  const { prefix } = base\n  if (prefix !== base58btc.prefix) {\n    throw Error(`Cannot string encode V0 in ${base.name} encoding`)\n  }\n\n  const cid = cache.get(prefix)\n  if (cid == null) {\n    const cid = base.encode(bytes).slice(1)\n    cache.set(prefix, cid)\n    return cid\n  } else {\n    return cid\n  }\n}\n\n/**\n * @template {string} Prefix\n * @param {Uint8Array} bytes\n * @param {Map<string, string>} cache\n * @param {API.MultibaseEncoder<Prefix>} base\n */\nconst toStringV1 = (bytes, cache, base) => {\n  const { prefix } = base\n  const cid = cache.get(prefix)\n  if (cid == null) {\n    const cid = base.encode(bytes)\n    cache.set(prefix, cid)\n    return cid\n  } else {\n    return cid\n  }\n}\n\nconst DAG_PB_CODE = 0x70\nconst SHA_256_CODE = 0x12\n\n/**\n * @param {API.Version} version\n * @param {number} code\n * @param {Uint8Array} multihash\n * @returns {Uint8Array}\n */\nconst encodeCID = (version, code, multihash) => {\n  const codeOffset = varint.encodingLength(version)\n  const hashOffset = codeOffset + varint.encodingLength(code)\n  const bytes = new Uint8Array(hashOffset + multihash.byteLength)\n  varint.encodeTo(version, bytes, 0)\n  varint.encodeTo(code, bytes, codeOffset)\n  bytes.set(multihash, hashOffset)\n  return bytes\n}\n\nconst cidSymbol = Symbol.for('@ipld/js-cid/CID')\n","// @ts-check\n\nimport * as identityBase from './bases/identity.js'\nimport * as base2 from './bases/base2.js'\nimport * as base8 from './bases/base8.js'\nimport * as base10 from './bases/base10.js'\nimport * as base16 from './bases/base16.js'\nimport * as base32 from './bases/base32.js'\nimport * as base36 from './bases/base36.js'\nimport * as base58 from './bases/base58.js'\nimport * as base64 from './bases/base64.js'\nimport * as base256emoji from './bases/base256emoji.js'\nimport * as sha2 from './hashes/sha2.js'\nimport * as identity from './hashes/identity.js'\n\nimport * as raw from './codecs/raw.js'\nimport * as json from './codecs/json.js'\n\nimport { CID, hasher, digest, varint, bytes } from './index.js'\n\nconst bases = { ...identityBase, ...base2, ...base8, ...base10, ...base16, ...base32, ...base36, ...base58, ...base64, ...base256emoji }\nconst hashes = { ...sha2, ...identity }\nconst codecs = { raw, json }\n\nexport { CID, hasher, digest, varint, bytes, hashes, bases, codecs }\n","/**\n * To guarantee Uint8Array semantics, convert nodejs Buffers\n * into vanilla Uint8Arrays\n */\nexport function asUint8Array(buf) {\n    if (globalThis.Buffer != null) {\n        return new Uint8Array(buf.buffer, buf.byteOffset, buf.byteLength);\n    }\n    return buf;\n}\n//# sourceMappingURL=as-uint8array.js.map","import { asUint8Array } from './util/as-uint8array.js';\n/**\n * Returns a `Uint8Array` of the requested size. Referenced memory will\n * be initialized to 0.\n */\nexport function alloc(size = 0) {\n    if (globalThis.Buffer?.alloc != null) {\n        return asUint8Array(globalThis.Buffer.alloc(size));\n    }\n    return new Uint8Array(size);\n}\n/**\n * Where possible returns a Uint8Array of the requested size that references\n * uninitialized memory. Only use if you are certain you will immediately\n * overwrite every value in the returned `Uint8Array`.\n */\nexport function allocUnsafe(size = 0) {\n    if (globalThis.Buffer?.allocUnsafe != null) {\n        return asUint8Array(globalThis.Buffer.allocUnsafe(size));\n    }\n    return new Uint8Array(size);\n}\n//# sourceMappingURL=alloc.js.map","import { bases } from 'multiformats/basics';\nimport { allocUnsafe } from '../alloc.js';\nfunction createCodec(name, prefix, encode, decode) {\n    return {\n        name,\n        prefix,\n        encoder: {\n            name,\n            prefix,\n            encode\n        },\n        decoder: {\n            decode\n        }\n    };\n}\nconst string = createCodec('utf8', 'u', (buf) => {\n    const decoder = new TextDecoder('utf8');\n    return 'u' + decoder.decode(buf);\n}, (str) => {\n    const encoder = new TextEncoder();\n    return encoder.encode(str.substring(1));\n});\nconst ascii = createCodec('ascii', 'a', (buf) => {\n    let string = 'a';\n    for (let i = 0; i < buf.length; i++) {\n        string += String.fromCharCode(buf[i]);\n    }\n    return string;\n}, (str) => {\n    str = str.substring(1);\n    const buf = allocUnsafe(str.length);\n    for (let i = 0; i < str.length; i++) {\n        buf[i] = str.charCodeAt(i);\n    }\n    return buf;\n});\nconst BASES = {\n    utf8: string,\n    'utf-8': string,\n    hex: bases.base16,\n    latin1: ascii,\n    ascii: ascii,\n    binary: ascii,\n    ...bases\n};\nexport default BASES;\n//# sourceMappingURL=bases.js.map","import bases from './util/bases.js';\n/**\n * Turns a `Uint8Array` into a string.\n *\n * Supports `utf8`, `utf-8` and any encoding supported by the multibase module.\n *\n * Also `ascii` which is similar to node's 'binary' encoding.\n */\nexport function toString(array, encoding = 'utf8') {\n    const base = bases[encoding];\n    if (base == null) {\n        throw new Error(`Unsupported encoding \"${encoding}\"`);\n    }\n    if ((encoding === 'utf8' || encoding === 'utf-8') && globalThis.Buffer != null && globalThis.Buffer.from != null) {\n        return globalThis.Buffer.from(array.buffer, array.byteOffset, array.byteLength).toString('utf8');\n    }\n    // strip multibase prefix\n    return base.encoder.encode(array).substring(1);\n}\n//# sourceMappingURL=to-string.js.map","import { isIPv4, isIPv6 } from '@chainsafe/is-ip';\nimport { toString as uint8ArrayToString } from 'uint8arrays/to-string';\nexport { isIP } from '@chainsafe/is-ip';\nexport const isV4 = isIPv4;\nexport const isV6 = isIPv6;\n// Copied from https://github.com/indutny/node-ip/blob/master/lib/ip.js#L7\n// but with buf/offset args removed because we don't use them\nexport const toBytes = function (ip) {\n    let offset = 0;\n    ip = ip.toString().trim();\n    if (isV4(ip)) {\n        const bytes = new Uint8Array(offset + 4);\n        ip.split(/\\./g).forEach((byte) => {\n            bytes[offset++] = parseInt(byte, 10) & 0xff;\n        });\n        return bytes;\n    }\n    if (isV6(ip)) {\n        const sections = ip.split(':', 8);\n        let i;\n        for (i = 0; i < sections.length; i++) {\n            const isv4 = isV4(sections[i]);\n            let v4Buffer;\n            if (isv4) {\n                v4Buffer = toBytes(sections[i]);\n                sections[i] = uint8ArrayToString(v4Buffer.slice(0, 2), 'base16');\n            }\n            if (v4Buffer != null && ++i < 8) {\n                sections.splice(i, 0, uint8ArrayToString(v4Buffer.slice(2, 4), 'base16'));\n            }\n        }\n        if (sections[0] === '') {\n            while (sections.length < 8)\n                sections.unshift('0');\n        }\n        else if (sections[sections.length - 1] === '') {\n            while (sections.length < 8)\n                sections.push('0');\n        }\n        else if (sections.length < 8) {\n            for (i = 0; i < sections.length && sections[i] !== ''; i++)\n                ;\n            const argv = [i, 1];\n            for (i = 9 - sections.length; i > 0; i--) {\n                argv.push('0');\n            }\n            sections.splice.apply(sections, argv);\n        }\n        const bytes = new Uint8Array(offset + 16);\n        for (i = 0; i < sections.length; i++) {\n            const word = parseInt(sections[i], 16);\n            bytes[offset++] = (word >> 8) & 0xff;\n            bytes[offset++] = word & 0xff;\n        }\n        return bytes;\n    }\n    throw new Error('invalid ip address');\n};\n// Copied from https://github.com/indutny/node-ip/blob/master/lib/ip.js#L63\nexport const toString = function (buf, offset = 0, length) {\n    offset = ~~offset;\n    length = length ?? (buf.length - offset);\n    const view = new DataView(buf.buffer);\n    if (length === 4) {\n        const result = [];\n        // IPv4\n        for (let i = 0; i < length; i++) {\n            result.push(buf[offset + i]);\n        }\n        return result.join('.');\n    }\n    if (length === 16) {\n        const result = [];\n        // IPv6\n        for (let i = 0; i < length; i += 2) {\n            result.push(view.getUint16(offset + i).toString(16));\n        }\n        return result.join(':')\n            .replace(/(^|:)0(:0)*:0(:|$)/, '$1::$3')\n            .replace(/:{3,4}/, '::');\n    }\n    return '';\n};\n//# sourceMappingURL=ip.js.map","const V = -1;\nexport const names = {};\nexport const codes = {};\nexport const table = [\n    [4, 32, 'ip4'],\n    [6, 16, 'tcp'],\n    [33, 16, 'dccp'],\n    [41, 128, 'ip6'],\n    [42, V, 'ip6zone'],\n    [43, 8, 'ipcidr'],\n    [53, V, 'dns', true],\n    [54, V, 'dns4', true],\n    [55, V, 'dns6', true],\n    [56, V, 'dnsaddr', true],\n    [132, 16, 'sctp'],\n    [273, 16, 'udp'],\n    [275, 0, 'p2p-webrtc-star'],\n    [276, 0, 'p2p-webrtc-direct'],\n    [277, 0, 'p2p-stardust'],\n    [280, 0, 'webrtc'],\n    [290, 0, 'p2p-circuit'],\n    [301, 0, 'udt'],\n    [302, 0, 'utp'],\n    [400, V, 'unix', false, true],\n    // `ipfs` is added before `p2p` for legacy support.\n    // All text representations will default to `p2p`, but `ipfs` will\n    // still be supported\n    [421, V, 'ipfs'],\n    // `p2p` is the preferred name for 421, and is now the default\n    [421, V, 'p2p'],\n    [443, 0, 'https'],\n    [444, 96, 'onion'],\n    [445, 296, 'onion3'],\n    [446, V, 'garlic64'],\n    [460, 0, 'quic'],\n    [461, 0, 'quic-v1'],\n    [465, 0, 'webtransport'],\n    [466, V, 'certhash'],\n    [477, 0, 'ws'],\n    [478, 0, 'wss'],\n    [479, 0, 'p2p-websocket-star'],\n    [480, 0, 'http'],\n    [777, V, 'memory']\n];\n// populate tables\ntable.forEach(row => {\n    const proto = createProtocol(...row);\n    codes[proto.code] = proto;\n    names[proto.name] = proto;\n});\nexport function createProtocol(code, size, name, resolvable, path) {\n    return {\n        code,\n        size,\n        name,\n        resolvable: Boolean(resolvable),\n        path: Boolean(path)\n    };\n}\n/**\n * For the passed proto string or number, return a {@link Protocol}\n *\n * @example\n *\n * ```js\n * import { protocol } from '@multiformats/multiaddr'\n *\n * console.info(protocol(4))\n * // { code: 4, size: 32, name: 'ip4', resolvable: false, path: false }\n * ```\n */\nexport function getProtocol(proto) {\n    if (typeof proto === 'number') {\n        if (codes[proto] != null) {\n            return codes[proto];\n        }\n        throw new Error(`no protocol with code: ${proto}`);\n    }\n    else if (typeof proto === 'string') {\n        if (names[proto] != null) {\n            return names[proto];\n        }\n        throw new Error(`no protocol with name: ${proto}`);\n    }\n    throw new Error(`invalid protocol id type: ${typeof proto}`);\n}\n//# sourceMappingURL=protocols-table.js.map","import bases from './util/bases.js';\nimport { asUint8Array } from './util/as-uint8array.js';\n/**\n * Create a `Uint8Array` from the passed string\n *\n * Supports `utf8`, `utf-8`, `hex`, and any encoding supported by the multiformats module.\n *\n * Also `ascii` which is similar to node's 'binary' encoding.\n */\nexport function fromString(string, encoding = 'utf8') {\n    const base = bases[encoding];\n    if (base == null) {\n        throw new Error(`Unsupported encoding \"${encoding}\"`);\n    }\n    if ((encoding === 'utf8' || encoding === 'utf-8') && globalThis.Buffer != null && globalThis.Buffer.from != null) {\n        return asUint8Array(globalThis.Buffer.from(string, 'utf-8'));\n    }\n    // add multibase prefix\n    return base.decoder.decode(`${base.prefix}${string}`); // eslint-disable-line @typescript-eslint/restrict-template-expressions\n}\n//# sourceMappingURL=from-string.js.map","import { allocUnsafe } from './alloc.js';\nimport { asUint8Array } from './util/as-uint8array.js';\n/**\n * Returns a new Uint8Array created by concatenating the passed ArrayLikes\n */\nexport function concat(arrays, length) {\n    if (length == null) {\n        length = arrays.reduce((acc, curr) => acc + curr.length, 0);\n    }\n    const output = allocUnsafe(length);\n    let offset = 0;\n    for (const arr of arrays) {\n        output.set(arr, offset);\n        offset += arr.length;\n    }\n    return asUint8Array(output);\n}\n//# sourceMappingURL=concat.js.map","/**\n * @packageDocumentation\n *\n * Provides methods for converting\n */\nimport * as ip from './ip.js';\nimport { getProtocol } from './protocols-table.js';\nimport { CID } from 'multiformats/cid';\nimport { base32 } from 'multiformats/bases/base32';\nimport { base58btc } from 'multiformats/bases/base58';\nimport { bases } from 'multiformats/basics';\nimport * as Digest from 'multiformats/hashes/digest';\nimport varint from 'varint';\nimport { toString as uint8ArrayToString } from 'uint8arrays/to-string';\nimport { fromString as uint8ArrayFromString } from 'uint8arrays/from-string';\nimport { concat as uint8ArrayConcat } from 'uint8arrays/concat';\nexport function convert(proto, a) {\n    if (a instanceof Uint8Array) {\n        return convertToString(proto, a);\n    }\n    else {\n        return convertToBytes(proto, a);\n    }\n}\n/**\n * Convert [code,Uint8Array] to string\n */\nexport function convertToString(proto, buf) {\n    const protocol = getProtocol(proto);\n    switch (protocol.code) {\n        case 4: // ipv4\n        case 41: // ipv6\n            return bytes2ip(buf);\n        case 42: // ipv6zone\n            return bytes2str(buf);\n        case 6: // tcp\n        case 273: // udp\n        case 33: // dccp\n        case 132: // sctp\n            return bytes2port(buf).toString();\n        case 53: // dns\n        case 54: // dns4\n        case 55: // dns6\n        case 56: // dnsaddr\n        case 400: // unix\n        case 777: // memory\n            return bytes2str(buf);\n        case 421: // ipfs\n            return bytes2mh(buf);\n        case 444: // onion\n            return bytes2onion(buf);\n        case 445: // onion3\n            return bytes2onion(buf);\n        case 466: // certhash\n            return bytes2mb(buf);\n        default:\n            return uint8ArrayToString(buf, 'base16'); // no clue. convert to hex\n    }\n}\nexport function convertToBytes(proto, str) {\n    const protocol = getProtocol(proto);\n    switch (protocol.code) {\n        case 4: // ipv4\n            return ip2bytes(str);\n        case 41: // ipv6\n            return ip2bytes(str);\n        case 42: // ipv6zone\n            return str2bytes(str);\n        case 6: // tcp\n        case 273: // udp\n        case 33: // dccp\n        case 132: // sctp\n            return port2bytes(parseInt(str, 10));\n        case 53: // dns\n        case 54: // dns4\n        case 55: // dns6\n        case 56: // dnsaddr\n        case 400: // unix\n        case 777: // memory\n            return str2bytes(str);\n        case 421: // ipfs\n            return mh2bytes(str);\n        case 444: // onion\n            return onion2bytes(str);\n        case 445: // onion3\n            return onion32bytes(str);\n        case 466: // certhash\n            return mb2bytes(str);\n        default:\n            return uint8ArrayFromString(str, 'base16'); // no clue. convert from hex\n    }\n}\nconst decoders = Object.values(bases).map((c) => c.decoder);\nconst anybaseDecoder = (function () {\n    let acc = decoders[0].or(decoders[1]);\n    decoders.slice(2).forEach((d) => (acc = acc.or(d)));\n    return acc;\n})();\nfunction ip2bytes(ipString) {\n    if (!ip.isIP(ipString)) {\n        throw new Error('invalid ip address');\n    }\n    return ip.toBytes(ipString);\n}\nfunction bytes2ip(ipBuff) {\n    const ipString = ip.toString(ipBuff, 0, ipBuff.length);\n    if (ipString == null) {\n        throw new Error('ipBuff is required');\n    }\n    if (!ip.isIP(ipString)) {\n        throw new Error('invalid ip address');\n    }\n    return ipString;\n}\nfunction port2bytes(port) {\n    const buf = new ArrayBuffer(2);\n    const view = new DataView(buf);\n    view.setUint16(0, port);\n    return new Uint8Array(buf);\n}\nfunction bytes2port(buf) {\n    const view = new DataView(buf.buffer);\n    return view.getUint16(buf.byteOffset);\n}\nfunction str2bytes(str) {\n    const buf = uint8ArrayFromString(str);\n    const size = Uint8Array.from(varint.encode(buf.length));\n    return uint8ArrayConcat([size, buf], size.length + buf.length);\n}\nfunction bytes2str(buf) {\n    const size = varint.decode(buf);\n    buf = buf.slice(varint.decode.bytes);\n    if (buf.length !== size) {\n        throw new Error('inconsistent lengths');\n    }\n    return uint8ArrayToString(buf);\n}\nfunction mh2bytes(hash) {\n    let mh;\n    if (hash[0] === 'Q' || hash[0] === '1') {\n        mh = Digest.decode(base58btc.decode(`z${hash}`)).bytes;\n    }\n    else {\n        mh = CID.parse(hash).multihash.bytes;\n    }\n    // the address is a varint prefixed multihash string representation\n    const size = Uint8Array.from(varint.encode(mh.length));\n    return uint8ArrayConcat([size, mh], size.length + mh.length);\n}\nfunction mb2bytes(mbstr) {\n    const mb = anybaseDecoder.decode(mbstr);\n    const size = Uint8Array.from(varint.encode(mb.length));\n    return uint8ArrayConcat([size, mb], size.length + mb.length);\n}\nfunction bytes2mb(buf) {\n    const size = varint.decode(buf);\n    const hash = buf.slice(varint.decode.bytes);\n    if (hash.length !== size) {\n        throw new Error('inconsistent lengths');\n    }\n    return 'u' + uint8ArrayToString(hash, 'base64url');\n}\n/**\n * Converts bytes to bas58btc string\n */\nfunction bytes2mh(buf) {\n    const size = varint.decode(buf);\n    const address = buf.slice(varint.decode.bytes);\n    if (address.length !== size) {\n        throw new Error('inconsistent lengths');\n    }\n    return uint8ArrayToString(address, 'base58btc');\n}\nfunction onion2bytes(str) {\n    const addr = str.split(':');\n    if (addr.length !== 2) {\n        throw new Error(`failed to parse onion addr: [\"'${addr.join('\", \"')}'\"]' does not contain a port number`);\n    }\n    if (addr[0].length !== 16) {\n        throw new Error(`failed to parse onion addr: ${addr[0]} not a Tor onion address.`);\n    }\n    // onion addresses do not include the multibase prefix, add it before decoding\n    const buf = base32.decode('b' + addr[0]);\n    // onion port number\n    const port = parseInt(addr[1], 10);\n    if (port < 1 || port > 65536) {\n        throw new Error('Port number is not in range(1, 65536)');\n    }\n    const portBuf = port2bytes(port);\n    return uint8ArrayConcat([buf, portBuf], buf.length + portBuf.length);\n}\nfunction onion32bytes(str) {\n    const addr = str.split(':');\n    if (addr.length !== 2) {\n        throw new Error(`failed to parse onion addr: [\"'${addr.join('\", \"')}'\"]' does not contain a port number`);\n    }\n    if (addr[0].length !== 56) {\n        throw new Error(`failed to parse onion addr: ${addr[0]} not a Tor onion3 address.`);\n    }\n    // onion addresses do not include the multibase prefix, add it before decoding\n    const buf = base32.decode(`b${addr[0]}`);\n    // onion port number\n    const port = parseInt(addr[1], 10);\n    if (port < 1 || port > 65536) {\n        throw new Error('Port number is not in range(1, 65536)');\n    }\n    const portBuf = port2bytes(port);\n    return uint8ArrayConcat([buf, portBuf], buf.length + portBuf.length);\n}\nfunction bytes2onion(buf) {\n    const addrBytes = buf.slice(0, buf.length - 2);\n    const portBytes = buf.slice(buf.length - 2);\n    const addr = uint8ArrayToString(addrBytes, 'base32');\n    const port = bytes2port(portBytes);\n    return `${addr}:${port}`;\n}\n//# sourceMappingURL=convert.js.map","import { convertToBytes, convertToString } from './convert.js';\nimport { getProtocol } from './protocols-table.js';\nimport varint from 'varint';\nimport { concat as uint8ArrayConcat } from 'uint8arrays/concat';\nimport { toString as uint8ArrayToString } from 'uint8arrays/to-string';\n/**\n * string -> [[str name, str addr]... ]\n */\nexport function stringToStringTuples(str) {\n    const tuples = [];\n    const parts = str.split('/').slice(1); // skip first empty elem\n    if (parts.length === 1 && parts[0] === '') {\n        return [];\n    }\n    for (let p = 0; p < parts.length; p++) {\n        const part = parts[p];\n        const proto = getProtocol(part);\n        if (proto.size === 0) {\n            tuples.push([part]);\n            // eslint-disable-next-line no-continue\n            continue;\n        }\n        p++; // advance addr part\n        if (p >= parts.length) {\n            throw ParseError('invalid address: ' + str);\n        }\n        // if it's a path proto, take the rest\n        if (proto.path === true) {\n            tuples.push([\n                part,\n                // should we need to check each path part to see if it's a proto?\n                // This would allow for other protocols to be added after a unix path,\n                // however it would have issues if the path had a protocol name in the path\n                cleanPath(parts.slice(p).join('/'))\n            ]);\n            break;\n        }\n        tuples.push([part, parts[p]]);\n    }\n    return tuples;\n}\n/**\n * [[str name, str addr]... ] -> string\n */\nexport function stringTuplesToString(tuples) {\n    const parts = [];\n    tuples.map((tup) => {\n        const proto = protoFromTuple(tup);\n        parts.push(proto.name);\n        if (tup.length > 1 && tup[1] != null) {\n            parts.push(tup[1]);\n        }\n        return null;\n    });\n    return cleanPath(parts.join('/'));\n}\n/**\n * [[str name, str addr]... ] -> [[int code, Uint8Array]... ]\n */\nexport function stringTuplesToTuples(tuples) {\n    return tuples.map((tup) => {\n        if (!Array.isArray(tup)) {\n            tup = [tup];\n        }\n        const proto = protoFromTuple(tup);\n        if (tup.length > 1) {\n            return [proto.code, convertToBytes(proto.code, tup[1])];\n        }\n        return [proto.code];\n    });\n}\n/**\n * Convert tuples to string tuples\n *\n * [[int code, Uint8Array]... ] -> [[int code, str addr]... ]\n */\nexport function tuplesToStringTuples(tuples) {\n    return tuples.map(tup => {\n        const proto = protoFromTuple(tup);\n        if (tup[1] != null) {\n            return [proto.code, convertToString(proto.code, tup[1])];\n        }\n        return [proto.code];\n    });\n}\n/**\n * [[int code, Uint8Array ]... ] -> Uint8Array\n */\nexport function tuplesToBytes(tuples) {\n    return fromBytes(uint8ArrayConcat(tuples.map((tup) => {\n        const proto = protoFromTuple(tup);\n        let buf = Uint8Array.from(varint.encode(proto.code));\n        if (tup.length > 1 && tup[1] != null) {\n            buf = uint8ArrayConcat([buf, tup[1]]); // add address buffer\n        }\n        return buf;\n    })));\n}\n/**\n * For the passed address, return the serialized size\n */\nexport function sizeForAddr(p, addr) {\n    if (p.size > 0) {\n        return p.size / 8;\n    }\n    else if (p.size === 0) {\n        return 0;\n    }\n    else {\n        const size = varint.decode(addr);\n        return size + (varint.decode.bytes ?? 0);\n    }\n}\nexport function bytesToTuples(buf) {\n    const tuples = [];\n    let i = 0;\n    while (i < buf.length) {\n        const code = varint.decode(buf, i);\n        const n = varint.decode.bytes ?? 0;\n        const p = getProtocol(code);\n        const size = sizeForAddr(p, buf.slice(i + n));\n        if (size === 0) {\n            tuples.push([code]);\n            i += n;\n            // eslint-disable-next-line no-continue\n            continue;\n        }\n        const addr = buf.slice(i + n, i + n + size);\n        i += (size + n);\n        if (i > buf.length) { // did not end _exactly_ at buffer.length\n            throw ParseError('Invalid address Uint8Array: ' + uint8ArrayToString(buf, 'base16'));\n        }\n        // ok, tuple seems good.\n        tuples.push([code, addr]);\n    }\n    return tuples;\n}\n/**\n * Uint8Array -> String\n */\nexport function bytesToString(buf) {\n    const a = bytesToTuples(buf);\n    const b = tuplesToStringTuples(a);\n    return stringTuplesToString(b);\n}\n/**\n * String -> Uint8Array\n */\nexport function stringToBytes(str) {\n    str = cleanPath(str);\n    const a = stringToStringTuples(str);\n    const b = stringTuplesToTuples(a);\n    return tuplesToBytes(b);\n}\n/**\n * String -> Uint8Array\n */\nexport function fromString(str) {\n    return stringToBytes(str);\n}\n/**\n * Uint8Array -> Uint8Array\n */\nexport function fromBytes(buf) {\n    const err = validateBytes(buf);\n    if (err != null) {\n        throw err;\n    }\n    return Uint8Array.from(buf); // copy\n}\nexport function validateBytes(buf) {\n    try {\n        bytesToTuples(buf); // try to parse. will throw if breaks\n    }\n    catch (err) {\n        return err;\n    }\n}\nexport function isValidBytes(buf) {\n    return validateBytes(buf) === undefined;\n}\nexport function cleanPath(str) {\n    return '/' + str.trim().split('/').filter((a) => a).join('/');\n}\nexport function ParseError(str) {\n    return new Error('Error parsing address: ' + str);\n}\nexport function protoFromTuple(tup) {\n    const proto = getProtocol(tup[0]);\n    return proto;\n}\n//# sourceMappingURL=codec.js.map","/**\n * Returns true if the two passed Uint8Arrays have the same content\n */\nexport function equals(a, b) {\n    if (a === b) {\n        return true;\n    }\n    if (a.byteLength !== b.byteLength) {\n        return false;\n    }\n    for (let i = 0; i < a.byteLength; i++) {\n        if (a[i] !== b[i]) {\n            return false;\n        }\n    }\n    return true;\n}\n//# sourceMappingURL=equals.js.map","/**\n * @packageDocumentation\n *\n * An implementation of a Multiaddr in JavaScript\n *\n * @example\n *\n * ```js\n * import { multiaddr } from '@multiformats/multiaddr'\n *\n * const ma = multiaddr('/ip4/127.0.0.1/tcp/1234')\n * ```\n */\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar _DefaultMultiaddr_string, _DefaultMultiaddr_tuples, _DefaultMultiaddr_stringTuples, _a;\nimport * as codec from './codec.js';\nimport { getProtocol, names } from './protocols-table.js';\nimport varint from 'varint';\nimport { CID } from 'multiformats/cid';\nimport { base58btc } from 'multiformats/bases/base58';\nimport errCode from 'err-code';\nimport { toString as uint8ArrayToString } from 'uint8arrays/to-string';\nimport { equals as uint8ArrayEquals } from 'uint8arrays/equals';\nconst inspect = Symbol.for('nodejs.util.inspect.custom');\nconst DNS_CODES = [\n    getProtocol('dns').code,\n    getProtocol('dns4').code,\n    getProtocol('dns6').code,\n    getProtocol('dnsaddr').code\n];\n/**\n * All configured {@link Resolver}s\n */\nexport const resolvers = new Map();\nconst symbol = Symbol.for('@multiformats/js-multiaddr/multiaddr');\n/**\n * Creates a Multiaddr from a node-friendly address object\n *\n * @example\n * ```js\n * import { fromNodeAddress } from '@multiformats/multiaddr'\n *\n * fromNodeAddress({address: '127.0.0.1', port: '4001'}, 'tcp')\n * // Multiaddr(/ip4/127.0.0.1/tcp/4001)\n * ```\n */\nexport function fromNodeAddress(addr, transport) {\n    if (addr == null) {\n        throw new Error('requires node address object');\n    }\n    if (transport == null) {\n        throw new Error('requires transport protocol');\n    }\n    let ip;\n    let host = addr.address;\n    switch (addr.family) {\n        case 4:\n            ip = 'ip4';\n            break;\n        case 6:\n            ip = 'ip6';\n            if (host.includes('%')) {\n                const parts = host.split('%');\n                if (parts.length !== 2) {\n                    throw Error('Multiple ip6 zones in multiaddr');\n                }\n                host = parts[0];\n                const zone = parts[1];\n                ip = `/ip6zone/${zone}/ip6`;\n            }\n            break;\n        default:\n            throw Error('Invalid addr family, should be 4 or 6.');\n    }\n    return new DefaultMultiaddr('/' + [ip, host, transport, addr.port].join('/'));\n}\n/**\n * Returns if something is a {@link Multiaddr} that is a resolvable name\n *\n * @example\n *\n * ```js\n * import { isName, multiaddr } from '@multiformats/multiaddr'\n *\n * isName(multiaddr('/ip4/127.0.0.1'))\n * // false\n * isName(multiaddr('/dns/ipfs.io'))\n * // true\n * ```\n */\nexport function isName(addr) {\n    if (!isMultiaddr(addr)) {\n        return false;\n    }\n    // if a part of the multiaddr is resolvable, then return true\n    return addr.protos().some((proto) => proto.resolvable);\n}\n/**\n * Check if object is a {@link Multiaddr} instance\n *\n * @example\n *\n * ```js\n * import { isMultiaddr, multiaddr } from '@multiformats/multiaddr'\n *\n * isMultiaddr(5)\n * // false\n * isMultiaddr(multiaddr('/ip4/127.0.0.1'))\n * // true\n * ```\n */\nexport function isMultiaddr(value) {\n    return Boolean(value?.[symbol]);\n}\n/**\n * Creates a {@link Multiaddr} from a {@link MultiaddrInput}\n */\nclass DefaultMultiaddr {\n    constructor(addr) {\n        _DefaultMultiaddr_string.set(this, void 0);\n        _DefaultMultiaddr_tuples.set(this, void 0);\n        _DefaultMultiaddr_stringTuples.set(this, void 0);\n        this[_a] = true;\n        // default\n        if (addr == null) {\n            addr = '';\n        }\n        if (addr instanceof Uint8Array) {\n            this.bytes = codec.fromBytes(addr);\n        }\n        else if (typeof addr === 'string') {\n            if (addr.length > 0 && addr.charAt(0) !== '/') {\n                throw new Error(`multiaddr \"${addr}\" must start with a \"/\"`);\n            }\n            this.bytes = codec.fromString(addr);\n        }\n        else if (isMultiaddr(addr)) { // Multiaddr\n            this.bytes = codec.fromBytes(addr.bytes); // validate + copy buffer\n        }\n        else {\n            throw new Error('addr must be a string, Buffer, or another Multiaddr');\n        }\n    }\n    toString() {\n        if (__classPrivateFieldGet(this, _DefaultMultiaddr_string, \"f\") == null) {\n            __classPrivateFieldSet(this, _DefaultMultiaddr_string, codec.bytesToString(this.bytes), \"f\");\n        }\n        return __classPrivateFieldGet(this, _DefaultMultiaddr_string, \"f\");\n    }\n    toJSON() {\n        return this.toString();\n    }\n    toOptions() {\n        let family;\n        let transport;\n        let host;\n        let port;\n        let zone = '';\n        const tcp = getProtocol('tcp');\n        const udp = getProtocol('udp');\n        const ip4 = getProtocol('ip4');\n        const ip6 = getProtocol('ip6');\n        const dns6 = getProtocol('dns6');\n        const ip6zone = getProtocol('ip6zone');\n        for (const [code, value] of this.stringTuples()) {\n            if (code === ip6zone.code) {\n                zone = `%${value ?? ''}`;\n            }\n            // default to https when protocol & port are omitted from DNS addrs\n            if (DNS_CODES.includes(code)) {\n                transport = tcp.name;\n                port = 443;\n                host = `${value ?? ''}${zone}`;\n                family = code === dns6.code ? 6 : 4;\n            }\n            if (code === tcp.code || code === udp.code) {\n                transport = getProtocol(code).name;\n                port = parseInt(value ?? '');\n            }\n            if (code === ip4.code || code === ip6.code) {\n                transport = getProtocol(code).name;\n                host = `${value ?? ''}${zone}`;\n                family = code === ip6.code ? 6 : 4;\n            }\n        }\n        if (family == null || transport == null || host == null || port == null) {\n            throw new Error('multiaddr must have a valid format: \"/{ip4, ip6, dns4, dns6, dnsaddr}/{address}/{tcp, udp}/{port}\".');\n        }\n        const opts = {\n            family,\n            host,\n            transport,\n            port\n        };\n        return opts;\n    }\n    protos() {\n        return this.protoCodes().map(code => Object.assign({}, getProtocol(code)));\n    }\n    protoCodes() {\n        const codes = [];\n        const buf = this.bytes;\n        let i = 0;\n        while (i < buf.length) {\n            const code = varint.decode(buf, i);\n            const n = varint.decode.bytes ?? 0;\n            const p = getProtocol(code);\n            const size = codec.sizeForAddr(p, buf.slice(i + n));\n            i += (size + n);\n            codes.push(code);\n        }\n        return codes;\n    }\n    protoNames() {\n        return this.protos().map(proto => proto.name);\n    }\n    tuples() {\n        if (__classPrivateFieldGet(this, _DefaultMultiaddr_tuples, \"f\") == null) {\n            __classPrivateFieldSet(this, _DefaultMultiaddr_tuples, codec.bytesToTuples(this.bytes), \"f\");\n        }\n        return __classPrivateFieldGet(this, _DefaultMultiaddr_tuples, \"f\");\n    }\n    stringTuples() {\n        if (__classPrivateFieldGet(this, _DefaultMultiaddr_stringTuples, \"f\") == null) {\n            __classPrivateFieldSet(this, _DefaultMultiaddr_stringTuples, codec.tuplesToStringTuples(this.tuples()), \"f\");\n        }\n        return __classPrivateFieldGet(this, _DefaultMultiaddr_stringTuples, \"f\");\n    }\n    encapsulate(addr) {\n        addr = new DefaultMultiaddr(addr);\n        return new DefaultMultiaddr(this.toString() + addr.toString());\n    }\n    decapsulate(addr) {\n        const addrString = addr.toString();\n        const s = this.toString();\n        const i = s.lastIndexOf(addrString);\n        if (i < 0) {\n            throw new Error(`Address ${this.toString()} does not contain subaddress: ${addr.toString()}`);\n        }\n        return new DefaultMultiaddr(s.slice(0, i));\n    }\n    decapsulateCode(code) {\n        const tuples = this.tuples();\n        for (let i = tuples.length - 1; i >= 0; i--) {\n            if (tuples[i][0] === code) {\n                return new DefaultMultiaddr(codec.tuplesToBytes(tuples.slice(0, i)));\n            }\n        }\n        return this;\n    }\n    getPeerId() {\n        try {\n            const tuples = this.stringTuples().filter((tuple) => {\n                if (tuple[0] === names.ipfs.code) {\n                    return true;\n                }\n                return false;\n            });\n            // Get the last ipfs tuple ['ipfs', 'peerid string']\n            const tuple = tuples.pop();\n            if (tuple?.[1] != null) {\n                const peerIdStr = tuple[1];\n                // peer id is base58btc encoded string but not multibase encoded so add the `z`\n                // prefix so we can validate that it is correctly encoded\n                if (peerIdStr[0] === 'Q' || peerIdStr[0] === '1') {\n                    return uint8ArrayToString(base58btc.decode(`z${peerIdStr}`), 'base58btc');\n                }\n                // try to parse peer id as CID\n                return uint8ArrayToString(CID.parse(peerIdStr).multihash.bytes, 'base58btc');\n            }\n            return null;\n        }\n        catch (e) {\n            return null;\n        }\n    }\n    getPath() {\n        let path = null;\n        try {\n            path = this.stringTuples().filter((tuple) => {\n                const proto = getProtocol(tuple[0]);\n                if (proto.path === true) {\n                    return true;\n                }\n                return false;\n            })[0][1];\n            if (path == null) {\n                path = null;\n            }\n        }\n        catch {\n            path = null;\n        }\n        return path;\n    }\n    equals(addr) {\n        return uint8ArrayEquals(this.bytes, addr.bytes);\n    }\n    async resolve(options) {\n        const resolvableProto = this.protos().find((p) => p.resolvable);\n        // Multiaddr is not resolvable?\n        if (resolvableProto == null) {\n            return [this];\n        }\n        const resolver = resolvers.get(resolvableProto.name);\n        if (resolver == null) {\n            throw errCode(new Error(`no available resolver for ${resolvableProto.name}`), 'ERR_NO_AVAILABLE_RESOLVER');\n        }\n        const addresses = await resolver(this, options);\n        return addresses.map((a) => new DefaultMultiaddr(a));\n    }\n    nodeAddress() {\n        const options = this.toOptions();\n        if (options.transport !== 'tcp' && options.transport !== 'udp') {\n            throw new Error(`multiaddr must have a valid format - no protocol with name: \"${options.transport}\". Must have a valid transport protocol: \"{tcp, udp}\"`);\n        }\n        return {\n            family: options.family,\n            address: options.host,\n            port: options.port\n        };\n    }\n    isThinWaistAddress(addr) {\n        const protos = (addr ?? this).protos();\n        if (protos.length !== 2) {\n            return false;\n        }\n        if (protos[0].code !== 4 && protos[0].code !== 41) {\n            return false;\n        }\n        if (protos[1].code !== 6 && protos[1].code !== 273) {\n            return false;\n        }\n        return true;\n    }\n    /**\n     * Returns Multiaddr as a human-readable string\n     * https://nodejs.org/api/util.html#utilinspectcustom\n     *\n     * @example\n     * ```js\n     * import { multiaddr } from '@multiformats/multiaddr'\n     *\n     * console.info(multiaddr('/ip4/127.0.0.1/tcp/4001'))\n     * // 'Multiaddr(/ip4/127.0.0.1/tcp/4001)'\n     * ```\n     */\n    [(_DefaultMultiaddr_string = new WeakMap(), _DefaultMultiaddr_tuples = new WeakMap(), _DefaultMultiaddr_stringTuples = new WeakMap(), _a = symbol, inspect)]() {\n        return `Multiaddr(${codec.bytesToString(this.bytes)})`;\n    }\n}\n/**\n * A function that takes a {@link MultiaddrInput} and returns a {@link Multiaddr}\n *\n * @example\n * ```js\n * import { multiaddr } from '@libp2p/multiaddr'\n *\n * multiaddr('/ip4/127.0.0.1/tcp/4001')\n * // Multiaddr(/ip4/127.0.0.1/tcp/4001)\n * ```\n *\n * @param {MultiaddrInput} [addr] - If String or Uint8Array, needs to adhere to the address format of a [multiaddr](https://github.com/multiformats/multiaddr#string-format)\n */\nexport function multiaddr(addr) {\n    return new DefaultMultiaddr(addr);\n}\nexport { getProtocol as protocols };\n//# sourceMappingURL=index.js.map","import $protobuf from \"protobufjs/minimal.js\"\n\n// @ts-expect-error Explicitly disable long.js support\n$protobuf.util.Long = undefined\n$protobuf.configure()\n\nimport { Key } from 'interface-datastore/key'\nimport { Protocols } from './pb/proto-book.js'\nimport { Addresses } from './pb/address-book.js'\nimport { Peer } from './pb/peer.js'\nimport { Envelope } from './pb/envelope.js'\nimport { PeerRecord } from './pb/peer-record.js'\nimport { multiaddr } from '@multiformats/multiaddr'\n\n/**\n * @param {import('../../src/types').Backends} backends\n * @param {import('../../src/types').MigrationProgressCallback} onProgress\n */\nasync function storePeerUnderSingleDatastoreKey (backends, onProgress = () => {}) {\n  onProgress(0, 'Storing each peerstore key under a single datastore key')\n\n  await backends.datastore.open()\n\n  /** @type {Record<string, any>} */\n  const peers = {}\n  /** @type {Key[]} */\n  const keys = []\n\n  for await (const { key, value } of backends.datastore.query({\n    prefix: '/peers'\n  })) {\n    keys.push(key)\n    const keyStr = key.toString()\n    const [_, prefix, type, peerId, metadataKey] = keyStr.split('/')\n\n    if (prefix !== 'peers') {\n      continue\n    }\n\n    if (!['protos', 'addrs', 'metadata', 'keys'].includes(type)) {\n      continue\n    }\n\n    if (!peerId) {\n      continue\n    }\n\n    peers[peerId] = peers[peerId] || {\n      addresses: [],\n      protocols: [],\n      metadata: []\n    }\n\n    if (type === 'protos') {\n      const protos = Protocols.decode(value)\n\n      peers[peerId].protocols = protos.protocols.sort()\n    } else if (type === 'addrs') {\n      const addrs = Addresses.decode(value)\n\n      peers[peerId].addresses = addrs.addrs.sort((a, b) => {\n        return multiaddr(a.multiaddr).toString().localeCompare(multiaddr(b.multiaddr).toString())\n      })\n\n      if (addrs.certifiedRecord && addrs.certifiedRecord.raw) {\n        peers[peerId].peerRecordEnvelope = addrs.certifiedRecord.raw\n      }\n    } else if (type === 'metadata') {\n      peers[peerId].metadata.push({ key: metadataKey, value })\n    } else if (type === 'keys') {\n      peers[peerId].pubKey = value\n    }\n  }\n\n  onProgress(33, 'Read peer data from store')\n\n  for (const key of keys) {\n    await backends.datastore.delete(key)\n  }\n\n  onProgress(66, 'Removed existing peer data from store')\n\n  for (const peerId of Object.keys(peers)) {\n    const peer = peers[peerId]\n    peer.metadata = peer.metadata.sort((/** @type {{ key: string }} */ a, /** @type {{ key: string }} */ b) => a.key.localeCompare(b.key))\n\n    const data = Peer.encode(peer).finish()\n\n    await backends.datastore.put(new Key(`/peers/${peerId}`), data)\n  }\n\n  await backends.datastore.close()\n\n  onProgress(100, 'Stored each peerstore key under a single datastore key')\n}\n\n/**\n * @param {import('../../src/types').Backends} backends\n * @param {import('../../src/types').MigrationProgressCallback} onProgress\n */\nasync function storePeerUnderMultipleDatastoreKeys (backends, onProgress = () => {}) {\n  onProgress(0, 'Storing each peerstore key under a multiple datastore keys')\n\n  await backends.datastore.open()\n\n  /** @type {Record<string, any>} */\n  const peers = {}\n  /** @type {Key[]} */\n  const keys = []\n\n  for await (const { key, value } of backends.datastore.query({\n    prefix: '/peers'\n  })) {\n    keys.push(key)\n    const keyStr = key.toString()\n\n    const [_, _prefix, peerId] = keyStr.split('/')\n\n    peers[peerId] = Peer.decode(value)\n  }\n\n  onProgress(33, 'Read peer data from store')\n\n  for (const key of keys) {\n    await backends.datastore.delete(key)\n  }\n\n  onProgress(66, 'Removed existing peer data from store')\n\n  for (const [peerId, peer] of Object.entries(peers)) {\n    if (peer.protocols && peer.protocols.length > 0) {\n      await backends.datastore.put(new Key(`/peers/protos/${peerId}`), Protocols.encode({\n        protocols: peer.protocols\n      }).finish())\n    }\n\n    if (peer.addresses && peer.addresses.length > 0) {\n      const peerRecordEnvelope = peer.peerRecordEnvelope\n      let certifiedRecord\n\n      if (peerRecordEnvelope) {\n        const envelope = Envelope.decode(peerRecordEnvelope)\n        const record = PeerRecord.decode(envelope.payload)\n\n        certifiedRecord = {\n          raw: peerRecordEnvelope,\n          seq: record.seq\n        }\n      }\n\n      await backends.datastore.put(new Key(`/peers/addrs/${peerId}`), Addresses.encode({\n        addrs: peer.addresses,\n        certifiedRecord\n      }).finish())\n    }\n\n    if (peer.metadata && peer.metadata.length > 0) {\n      for (const { key, value } of peer.metadata) {\n        await backends.datastore.put(new Key(`/peers/metadata/${peerId}/${key}`), value)\n      }\n    }\n\n    if (peer.pubKey) {\n      await backends.datastore.put(new Key(`/peers/keys/${peerId}`), peer.pubKey)\n    }\n  }\n\n  await backends.datastore.close()\n\n  onProgress(100, 'Stored each peerstore key under multiple datastore keys')\n}\n\n/** @type {import('../../src/types').Migration} */\nexport const migration = {\n  version: 12,\n  description: 'Store each peerstore peer under a single datastore key',\n  migrate: storePeerUnderSingleDatastoreKey,\n  revert: storePeerUnderMultipleDatastoreKeys\n}\n","import { migration as migration8 } from './migration-8/index.js'\nimport { migration as migration9 } from './migration-9/index.js'\nimport { migration as migration10 } from './migration-10/index.js'\nimport { migration as migration11 } from './migration-11/index.js'\nimport { migration as migration12 } from './migration-12/index.js'\n\n/**\n * @type {import('../src/types').Migration}\n */\nconst emptyMigration = {\n  description: 'Empty migration.',\n  // @ts-ignore\n  migrate: () => {},\n  // @ts-ignore\n  revert: () => {},\n  empty: true\n}\n\nexport default [\n  Object.assign({ version: 1 }, emptyMigration),\n  Object.assign({ version: 2 }, emptyMigration),\n  Object.assign({ version: 3 }, emptyMigration),\n  Object.assign({ version: 4 }, emptyMigration),\n  Object.assign({ version: 5 }, emptyMigration),\n  Object.assign({ version: 6 }, emptyMigration),\n  Object.assign({ version: 7 }, emptyMigration),\n  migration8,\n  migration9,\n  migration10,\n  migration11,\n  migration12\n]\n","\n/**\n * Exception raised when trying to revert migration that is not possible\n * to revert.\n */\nexport class NonReversibleMigrationError extends Error {\n  /**\n   * @param {string} message\n   */\n  constructor (message) {\n    super(message)\n    this.name = 'NonReversibleMigrationError'\n    this.code = NonReversibleMigrationError.code\n    this.message = message\n  }\n}\nNonReversibleMigrationError.code = 'ERR_NON_REVERSIBLE_MIGRATION'\n\n/**\n * Exception raised when repo is not initialized.\n */\nexport class NotInitializedRepoError extends Error {\n  /**\n   * @param {string} message\n   */\n  constructor (message) {\n    super(message)\n    this.name = 'NotInitializedRepoError'\n    this.code = NotInitializedRepoError.code\n    this.message = message\n  }\n}\nNotInitializedRepoError.code = 'ERR_NOT_INITIALIZED_REPO'\n\n/**\n * Exception raised when required parameter is not provided.\n */\nexport class RequiredParameterError extends Error {\n  /**\n   * @param {string} message\n   */\n  constructor (message) {\n    super(message)\n    this.name = 'RequiredParameterError'\n    this.code = RequiredParameterError.code\n    this.message = message\n  }\n}\nRequiredParameterError.code = 'ERR_REQUIRED_PARAMETER'\n\n/**\n * Exception raised when value is not valid.\n */\nexport class InvalidValueError extends Error {\n  /**\n   * @param {string} message\n   */\n  constructor (message) {\n    super(message)\n    this.name = 'InvalidValueError'\n    this.code = InvalidValueError.code\n    this.message = message\n  }\n}\nInvalidValueError.code = 'ERR_INVALID_VALUE'\n\n/**\n * Exception raised when config is not passed.\n */\nexport class MissingRepoOptionsError extends Error {\n  /**\n   * @param {string} message\n   */\n  constructor (message) {\n    super(message)\n    this.name = 'MissingRepoOptionsError'\n    this.code = MissingRepoOptionsError.code\n    this.message = message\n  }\n}\nMissingRepoOptionsError.code = 'ERR_MISSING_REPO_OPTIONS'\n","\nimport debug from 'debug'\nimport { CONFIG_KEY, VERSION_KEY } from '../utils.js'\nimport { MissingRepoOptionsError } from '../errors.js'\n\nconst log = debug('ipfs:repo:migrator:repo:init')\n\n/**\n * @param {import('../types').Backends} backends\n */\nexport async function isRepoInitialized (backends) {\n  if (!backends) {\n    throw new MissingRepoOptionsError('Please pass repo options when trying to open a repo')\n  }\n\n  const root = backends.root\n\n  try {\n    await root.open()\n    const versionCheck = await root.has(VERSION_KEY)\n    const configCheck = await root.has(CONFIG_KEY)\n    if (!versionCheck || !configCheck) {\n      log(`Version entry present: ${versionCheck}`)\n      log(`Config entry present: ${configCheck}`)\n      return false\n    }\n\n    return true\n  } catch (/** @type {any} */ e) {\n    log('While checking if repo is initialized error was thrown: ' + e.message)\n    return false\n  } finally {\n    if (root !== undefined) {\n      try {\n        await root.close()\n      } catch {}\n    }\n  }\n}\n","\nimport { isRepoInitialized } from './init.js'\nimport { MissingRepoOptionsError, NotInitializedRepoError } from '../errors.js'\nimport { VERSION_KEY } from '../utils.js'\nimport { fromString as uint8ArrayFromString } from 'uint8arrays/from-string'\nimport { toString as uint8ArrayToString } from 'uint8arrays/to-string'\n\n/**\n * Function that has responsibility to retrieve version of repo from its root datastore's instance.\n * This function needs to be cross-repo-version functional to be able to fetch any version number,\n * even in case of change of repo's versioning.\n *\n * @param {import('../types').Backends} backends\n */\nexport async function getVersion (backends) {\n  if (!(await isRepoInitialized(backends))) {\n    throw new NotInitializedRepoError('Repo is not initialized!')\n  }\n\n  const store = backends.root\n  await store.open()\n\n  try {\n    return parseInt(uint8ArrayToString(await store.get(VERSION_KEY)))\n  } finally {\n    await store.close()\n  }\n}\n\n/**\n * Function for setting a version in cross-repo-version manner.\n *\n * @param {number} version\n * @param {import('../types').Backends} backends\n */\nexport async function setVersion (version, backends) {\n  if (!backends) {\n    throw new MissingRepoOptionsError('Please pass repo options when trying to open a repo')\n  }\n\n  const store = backends.root\n  await store.open()\n  await store.put(VERSION_KEY, uint8ArrayFromString(String(version)))\n  await store.close()\n}\n","/* eslint complexity: [\"error\", 28] */\n\nimport defaultMigrations from '../migrations/index.js'\nimport * as repoVersion from './repo/version.js'\nimport * as Errors from './errors.js'\nimport { wrapBackends } from './utils.js'\nimport debug from 'debug'\n\nconst log = debug('ipfs:repo:migrator')\n\n/**\n * @typedef {import('./types').Migration} Migration\n * @typedef {import('./types').MigrationOptions} MigrationOptions\n * @typedef {import('./types').ProgressCallback} ProgressCallback\n * @typedef {import('./types').MigrationProgressCallback} MigrationProgressCallback\n */\n\n/**\n * Returns the version of latest migration.\n * If no migrations are present returns 0.\n *\n * @param {Migration[]} [migrations] - Array of migrations to consider. If undefined, the bundled migrations are used. Mainly for testing purpose.\n */\nexport function getLatestMigrationVersion (migrations) {\n  migrations = migrations || defaultMigrations\n\n  if (!Array.isArray(migrations) || migrations.length === 0) {\n    return 0\n  }\n\n  return migrations[migrations.length - 1].version\n}\n\n/**\n * Main function to execute forward migrations.\n * It acquire lock on the provided path before doing any migrations.\n *\n * Signature of the progress callback is: function(migrationObject: object, currentMigrationNumber: int, totalMigrationsCount: int)\n *\n * @param {string} path - Path to initialized (!) JS-IPFS repo\n * @param {import('./types').Backends} backends\n * @param {import('./types').RepoOptions} repoOptions - Options that are passed to migrations, that can use them to correctly construct datastore. Options are same like for IPFSRepo.\n * @param {number} toVersion - Version to which the repo should be migrated.\n * @param {MigrationOptions} [options] - Options for migration\n */\nexport async function migrate (path, backends, repoOptions, toVersion, options = {}) {\n  const ignoreLock = options.ignoreLock ?? false\n  const onProgress = options.onProgress\n  const isDryRun = options.isDryRun ?? false\n  const migrations = options.migrations ?? defaultMigrations\n\n  if (!path) {\n    throw new errors.RequiredParameterError('Path argument is required!')\n  }\n\n  if (!repoOptions) {\n    throw new errors.RequiredParameterError('repoOptions argument is required!')\n  }\n\n  if (!toVersion) {\n    throw new errors.RequiredParameterError('toVersion argument is required!')\n  }\n\n  if (!Number.isInteger(toVersion) || toVersion <= 0) {\n    throw new errors.InvalidValueError('Version has to be positive integer!')\n  }\n\n  // make sure we can read pre-level@5 datastores\n  backends = wrapBackends(backends)\n\n  const currentVersion = await repoVersion.getVersion(backends)\n\n  if (currentVersion === toVersion) {\n    log('Nothing to migrate.')\n    return\n  }\n\n  if (currentVersion > toVersion) {\n    throw new errors.InvalidValueError(`Current repo's version (${currentVersion}) is higher then toVersion (${toVersion}), you probably wanted to revert it?`)\n  }\n\n  verifyAvailableMigrations(migrations, currentVersion, toVersion)\n\n  let lock\n\n  if (!isDryRun && !ignoreLock) {\n    lock = await repoOptions.repoLock.lock(path)\n  }\n\n  try {\n    for (const migration of migrations) {\n      if (toVersion !== undefined && migration.version > toVersion) {\n        break\n      }\n\n      if (migration.version <= currentVersion) {\n        continue\n      }\n\n      log(`Migrating version ${migration.version}`)\n\n      try {\n        if (!isDryRun) {\n          /** @type {MigrationProgressCallback} */\n          let progressCallback = () => {}\n\n          if (onProgress) { // eslint-disable-line max-depth\n            progressCallback = (percent, message) => onProgress(migration.version, percent.toFixed(2), message)\n          }\n\n          await migration.migrate(backends, progressCallback)\n        }\n      } catch (/** @type {any} */ e) {\n        const lastSuccessfullyMigratedVersion = migration.version - 1\n\n        log(`An exception was raised during execution of migration. Setting the repo's version to last successfully migrated version: ${lastSuccessfullyMigratedVersion}`)\n        await repoVersion.setVersion(lastSuccessfullyMigratedVersion, backends)\n\n        throw new Error(`During migration to version ${migration.version} exception was raised: ${e.stack || e.message || e}`)\n      }\n\n      log(`Migrating to version ${migration.version} finished`)\n    }\n\n    if (!isDryRun) {\n      await repoVersion.setVersion(toVersion || getLatestMigrationVersion(migrations), backends)\n    }\n\n    log('Repo successfully migrated', toVersion !== undefined ? `to version ${toVersion}!` : 'to latest version!')\n  } finally {\n    if (!isDryRun && !ignoreLock && lock) {\n      await lock.close()\n    }\n  }\n}\n\n/**\n * Main function to execute backward migration (reversion).\n * It acquire lock on the provided path before doing any migrations.\n *\n * Signature of the progress callback is: function(migrationObject: object, currentMigrationNumber: int, totalMigrationsCount: int)\n *\n * @param {string} path - Path to initialized (!) JS-IPFS repo\n * @param {import('./types').Backends} backends\n * @param {import('./types').RepoOptions} repoOptions - Options that are passed to migrations, that can use them to correctly construct datastore. Options are same like for IPFSRepo.\n * @param {number} toVersion - Version to which the repo will be reverted.\n * @param {MigrationOptions} [options] - Options for the reversion\n */\nexport async function revert (path, backends, repoOptions, toVersion, options = {}) {\n  const ignoreLock = options.ignoreLock ?? false\n  const onProgress = options.onProgress\n  const isDryRun = options.isDryRun ?? false\n  const migrations = options.migrations ?? defaultMigrations\n\n  if (!path) {\n    throw new errors.RequiredParameterError('Path argument is required!')\n  }\n\n  if (!repoOptions) {\n    throw new errors.RequiredParameterError('repoOptions argument is required!')\n  }\n\n  if (!toVersion) {\n    throw new errors.RequiredParameterError('When reverting migrations, you have to specify to which version to revert!')\n  }\n\n  if (!Number.isInteger(toVersion) || toVersion <= 0) {\n    throw new errors.InvalidValueError('Version has to be positive integer!')\n  }\n\n  // make sure we can read pre-level@5 datastores\n  backends = wrapBackends(backends)\n\n  const currentVersion = await repoVersion.getVersion(backends)\n\n  if (currentVersion === toVersion) {\n    log('Nothing to revert.')\n    return\n  }\n\n  if (currentVersion < toVersion) {\n    throw new errors.InvalidValueError(`Current repo's version (${currentVersion}) is lower then toVersion (${toVersion}), you probably wanted to migrate it?`)\n  }\n\n  verifyAvailableMigrations(migrations, toVersion, currentVersion, true)\n\n  let lock\n  if (!isDryRun && !ignoreLock) {\n    lock = await repoOptions.repoLock.lock(path)\n  }\n\n  log(`Reverting from version ${currentVersion} to ${toVersion}`)\n\n  try {\n    const reversedMigrationArray = migrations.slice().reverse()\n\n    for (const migration of reversedMigrationArray) {\n      if (migration.version <= toVersion) {\n        break\n      }\n\n      if (migration.version > currentVersion) {\n        continue\n      }\n\n      log(`Reverting migration version ${migration.version}`)\n\n      try {\n        if (!isDryRun) {\n          /** @type {MigrationProgressCallback} */\n          let progressCallback = () => {}\n\n          if (onProgress) { // eslint-disable-line max-depth\n            progressCallback = (percent, message) => onProgress(migration.version, percent.toFixed(2), message)\n          }\n\n          await migration.revert(backends, progressCallback)\n        }\n      } catch (/** @type {any} */ e) {\n        const lastSuccessfullyRevertedVersion = migration.version\n        log(`An exception was raised during execution of migration. Setting the repo's version to last successfully reverted version: ${lastSuccessfullyRevertedVersion}`)\n        await repoVersion.setVersion(lastSuccessfullyRevertedVersion, backends)\n\n        e.message = `During reversion to version ${migration.version} exception was raised: ${e.message}`\n        throw e\n      }\n\n      log(`Reverting to version ${migration.version} finished`)\n    }\n\n    if (!isDryRun) {\n      await repoVersion.setVersion(toVersion, backends)\n    }\n\n    log(`All migrations successfully reverted to version ${toVersion}!`)\n  } finally {\n    if (!isDryRun && !ignoreLock && lock) {\n      await lock.close()\n    }\n  }\n}\n\n/**\n * Function checks if all migrations in given range are available.\n *\n * @param {Migration[]} migrations\n * @param {number} fromVersion\n * @param {number} toVersion\n * @param {boolean} checkReversibility - Will additionally checks if all the migrations in the range are reversible\n */\nfunction verifyAvailableMigrations (migrations, fromVersion, toVersion, checkReversibility = false) {\n  let migrationCounter = 0\n  for (const migration of migrations) {\n    if (migration.version > toVersion) {\n      break\n    }\n\n    if (migration.version > fromVersion) {\n      if (checkReversibility && !migration.revert) {\n        throw new errors.NonReversibleMigrationError(`It is not possible to revert to version ${fromVersion} because migration version ${migration.version} is not reversible. Cancelling reversion.`)\n      }\n\n      migrationCounter++\n    }\n  }\n\n  if (migrationCounter !== (toVersion - fromVersion)) {\n    throw new errors.InvalidValueError(`The ipfs-repo-migrations package does not have all migration to migrate from version ${fromVersion} to ${toVersion}`)\n  }\n}\n\nexport const getCurrentRepoVersion = repoVersion.getVersion\nexport const errors = Errors\nexport const migrations = defaultMigrations\n","/*!\n * bytes\n * Copyright(c) 2012-2014 TJ Holowaychuk\n * Copyright(c) 2015 Jed Watson\n * MIT Licensed\n */\n\n'use strict';\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = bytes;\nmodule.exports.format = format;\nmodule.exports.parse = parse;\n\n/**\n * Module variables.\n * @private\n */\n\nvar formatThousandsRegExp = /\\B(?=(\\d{3})+(?!\\d))/g;\n\nvar formatDecimalsRegExp = /(?:\\.0*|(\\.[^0]+)0+)$/;\n\nvar map = {\n  b:  1,\n  kb: 1 << 10,\n  mb: 1 << 20,\n  gb: 1 << 30,\n  tb: Math.pow(1024, 4),\n  pb: Math.pow(1024, 5),\n};\n\nvar parseRegExp = /^((-|\\+)?(\\d+(?:\\.\\d+)?)) *(kb|mb|gb|tb|pb)$/i;\n\n/**\n * Convert the given value in bytes into a string or parse to string to an integer in bytes.\n *\n * @param {string|number} value\n * @param {{\n *  case: [string],\n *  decimalPlaces: [number]\n *  fixedDecimals: [boolean]\n *  thousandsSeparator: [string]\n *  unitSeparator: [string]\n *  }} [options] bytes options.\n *\n * @returns {string|number|null}\n */\n\nfunction bytes(value, options) {\n  if (typeof value === 'string') {\n    return parse(value);\n  }\n\n  if (typeof value === 'number') {\n    return format(value, options);\n  }\n\n  return null;\n}\n\n/**\n * Format the given value in bytes into a string.\n *\n * If the value is negative, it is kept as such. If it is a float,\n * it is rounded.\n *\n * @param {number} value\n * @param {object} [options]\n * @param {number} [options.decimalPlaces=2]\n * @param {number} [options.fixedDecimals=false]\n * @param {string} [options.thousandsSeparator=]\n * @param {string} [options.unit=]\n * @param {string} [options.unitSeparator=]\n *\n * @returns {string|null}\n * @public\n */\n\nfunction format(value, options) {\n  if (!Number.isFinite(value)) {\n    return null;\n  }\n\n  var mag = Math.abs(value);\n  var thousandsSeparator = (options && options.thousandsSeparator) || '';\n  var unitSeparator = (options && options.unitSeparator) || '';\n  var decimalPlaces = (options && options.decimalPlaces !== undefined) ? options.decimalPlaces : 2;\n  var fixedDecimals = Boolean(options && options.fixedDecimals);\n  var unit = (options && options.unit) || '';\n\n  if (!unit || !map[unit.toLowerCase()]) {\n    if (mag >= map.pb) {\n      unit = 'PB';\n    } else if (mag >= map.tb) {\n      unit = 'TB';\n    } else if (mag >= map.gb) {\n      unit = 'GB';\n    } else if (mag >= map.mb) {\n      unit = 'MB';\n    } else if (mag >= map.kb) {\n      unit = 'KB';\n    } else {\n      unit = 'B';\n    }\n  }\n\n  var val = value / map[unit.toLowerCase()];\n  var str = val.toFixed(decimalPlaces);\n\n  if (!fixedDecimals) {\n    str = str.replace(formatDecimalsRegExp, '$1');\n  }\n\n  if (thousandsSeparator) {\n    str = str.split('.').map(function (s, i) {\n      return i === 0\n        ? s.replace(formatThousandsRegExp, thousandsSeparator)\n        : s\n    }).join('.');\n  }\n\n  return str + unitSeparator + unit;\n}\n\n/**\n * Parse the string value into an integer in bytes.\n *\n * If no unit is given, it is assumed the value is in bytes.\n *\n * @param {number|string} val\n *\n * @returns {number|null}\n * @public\n */\n\nfunction parse(val) {\n  if (typeof val === 'number' && !isNaN(val)) {\n    return val;\n  }\n\n  if (typeof val !== 'string') {\n    return null;\n  }\n\n  // Test if the string passed is valid\n  var results = parseRegExp.exec(val);\n  var floatValue;\n  var unit = 'b';\n\n  if (!results) {\n    // Nothing could be extracted from the given string\n    floatValue = parseInt(val, 10);\n    unit = 'b'\n  } else {\n    // Retrieve the value and the unit\n    floatValue = parseFloat(results[1]);\n    unit = results[4].toLowerCase();\n  }\n\n  if (isNaN(floatValue)) {\n    return null;\n  }\n\n  return Math.floor(map[unit] * floatValue);\n}\n","'use strict';\n\nmodule.exports = value => {\n\tif (Object.prototype.toString.call(value) !== '[object Object]') {\n\t\treturn false;\n\t}\n\n\tconst prototype = Object.getPrototypeOf(value);\n\treturn prototype === null || prototype === Object.prototype;\n};\n","'use strict';\nconst isOptionObject = require('is-plain-obj');\n\nconst {hasOwnProperty} = Object.prototype;\nconst {propertyIsEnumerable} = Object;\nconst defineProperty = (object, name, value) => Object.defineProperty(object, name, {\n\tvalue,\n\twritable: true,\n\tenumerable: true,\n\tconfigurable: true\n});\n\nconst globalThis = this;\nconst defaultMergeOptions = {\n\tconcatArrays: false,\n\tignoreUndefined: false\n};\n\nconst getEnumerableOwnPropertyKeys = value => {\n\tconst keys = [];\n\n\tfor (const key in value) {\n\t\tif (hasOwnProperty.call(value, key)) {\n\t\t\tkeys.push(key);\n\t\t}\n\t}\n\n\t/* istanbul ignore else  */\n\tif (Object.getOwnPropertySymbols) {\n\t\tconst symbols = Object.getOwnPropertySymbols(value);\n\n\t\tfor (const symbol of symbols) {\n\t\t\tif (propertyIsEnumerable.call(value, symbol)) {\n\t\t\t\tkeys.push(symbol);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn keys;\n};\n\nfunction clone(value) {\n\tif (Array.isArray(value)) {\n\t\treturn cloneArray(value);\n\t}\n\n\tif (isOptionObject(value)) {\n\t\treturn cloneOptionObject(value);\n\t}\n\n\treturn value;\n}\n\nfunction cloneArray(array) {\n\tconst result = array.slice(0, 0);\n\n\tgetEnumerableOwnPropertyKeys(array).forEach(key => {\n\t\tdefineProperty(result, key, clone(array[key]));\n\t});\n\n\treturn result;\n}\n\nfunction cloneOptionObject(object) {\n\tconst result = Object.getPrototypeOf(object) === null ? Object.create(null) : {};\n\n\tgetEnumerableOwnPropertyKeys(object).forEach(key => {\n\t\tdefineProperty(result, key, clone(object[key]));\n\t});\n\n\treturn result;\n}\n\n/**\n * @param {*} merged already cloned\n * @param {*} source something to merge\n * @param {string[]} keys keys to merge\n * @param {Object} config Config Object\n * @returns {*} cloned Object\n */\nconst mergeKeys = (merged, source, keys, config) => {\n\tkeys.forEach(key => {\n\t\tif (typeof source[key] === 'undefined' && config.ignoreUndefined) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Do not recurse into prototype chain of merged\n\t\tif (key in merged && merged[key] !== Object.getPrototypeOf(merged)) {\n\t\t\tdefineProperty(merged, key, merge(merged[key], source[key], config));\n\t\t} else {\n\t\t\tdefineProperty(merged, key, clone(source[key]));\n\t\t}\n\t});\n\n\treturn merged;\n};\n\n/**\n * @param {*} merged already cloned\n * @param {*} source something to merge\n * @param {Object} config Config Object\n * @returns {*} cloned Object\n *\n * see [Array.prototype.concat ( ...arguments )](http://www.ecma-international.org/ecma-262/6.0/#sec-array.prototype.concat)\n */\nconst concatArrays = (merged, source, config) => {\n\tlet result = merged.slice(0, 0);\n\tlet resultIndex = 0;\n\n\t[merged, source].forEach(array => {\n\t\tconst indices = [];\n\n\t\t// `result.concat(array)` with cloning\n\t\tfor (let k = 0; k < array.length; k++) {\n\t\t\tif (!hasOwnProperty.call(array, k)) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tindices.push(String(k));\n\n\t\t\tif (array === merged) {\n\t\t\t\t// Already cloned\n\t\t\t\tdefineProperty(result, resultIndex++, array[k]);\n\t\t\t} else {\n\t\t\t\tdefineProperty(result, resultIndex++, clone(array[k]));\n\t\t\t}\n\t\t}\n\n\t\t// Merge non-index keys\n\t\tresult = mergeKeys(result, array, getEnumerableOwnPropertyKeys(array).filter(key => !indices.includes(key)), config);\n\t});\n\n\treturn result;\n};\n\n/**\n * @param {*} merged already cloned\n * @param {*} source something to merge\n * @param {Object} config Config Object\n * @returns {*} cloned Object\n */\nfunction merge(merged, source, config) {\n\tif (config.concatArrays && Array.isArray(merged) && Array.isArray(source)) {\n\t\treturn concatArrays(merged, source, config);\n\t}\n\n\tif (!isOptionObject(source) || !isOptionObject(merged)) {\n\t\treturn clone(source);\n\t}\n\n\treturn mergeKeys(merged, source, getEnumerableOwnPropertyKeys(source), config);\n}\n\nmodule.exports = function (...options) {\n\tconst config = merge(clone(defaultMergeOptions), (this !== globalThis && this) || {}, defaultMergeOptions);\n\tlet merged = {_: {}};\n\n\tfor (const option of options) {\n\t\tif (option === undefined) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tif (!isOptionObject(option)) {\n\t\t\tthrow new TypeError('`' + option + '` is not an Option Object');\n\t\t}\n\n\t\tmerged = merge(merged, {_: option}, config);\n\t}\n\n\treturn merged._;\n};\n","\nexport const repoVersion = 12\n","/**\n * Error raised when there is lock already in place when repo is being opened.\n */\nexport class LockExistsError extends Error {\n  /**\n   * @param {string} [message]\n   */\n  constructor (message) {\n    super(message)\n    this.name = 'LockExistsError'\n    this.code = LockExistsError.code\n  }\n}\nLockExistsError.code = 'ERR_LOCK_EXISTS'\n\n/**\n * Error raised when requested item is not found.\n */\nexport class NotFoundError extends Error {\n  /**\n   * @param {string} [message]\n   */\n  constructor (message) {\n    super(message)\n    this.name = 'NotFoundError'\n    this.code = NotFoundError.code\n  }\n}\nNotFoundError.code = 'ERR_NOT_FOUND'\n\n/**\n * Error raised when version of the stored repo is not compatible with version of this package.\n */\nexport class InvalidRepoVersionError extends Error {\n  /**\n   * @param {string} [message]\n   */\n  constructor (message) {\n    super(message)\n    this.name = 'InvalidRepoVersionError'\n    this.code = InvalidRepoVersionError.code\n  }\n}\nInvalidRepoVersionError.code = 'ERR_INVALID_REPO_VERSION'\n\nexport const ERR_REPO_NOT_INITIALIZED = 'ERR_REPO_NOT_INITIALIZED'\nexport const ERR_REPO_ALREADY_OPEN = 'ERR_REPO_ALREADY_OPEN'\nexport const ERR_REPO_ALREADY_CLOSED = 'ERR_REPO_ALREADY_CLOSED'\n","\nimport { NotFoundError } from '../errors.js'\n\n/**\n * @typedef {import('interface-datastore').Datastore} Datastore\n * @typedef {import('interface-datastore').Key} Key\n */\n\n/**\n * @param {Key} key\n * @param {function (Key): Promise<boolean>} has\n * @param {Datastore} store\n * @returns {Promise<boolean>}\n */\nexport async function hasWithFallback (key, has, store) {\n  const result = await has(key)\n\n  if (result) {\n    return result\n  }\n\n  // Newer versions of level.js changed the key type from Uint8Array|string\n  // to Uint8Array  so fall back to trying Uint8Arrays if we are using level.js\n  // and the string version of the key did not work\n  const levelJs = findLevelJs(store)\n\n  if (!levelJs) {\n    return false\n  }\n\n  return new Promise((resolve, reject) => {\n    // drop down to IndexDB API, otherwise level-js will monkey around with the keys/values\n    // @ts-ignore\n    const req = levelJs.store('readonly').get(key.toString())\n    req.transaction.onabort = () => {\n      reject(req.transaction.error)\n    }\n    req.transaction.oncomplete = () => {\n      resolve(Boolean(req.result))\n    }\n  })\n}\n\n/**\n * @param {import('interface-datastore').Key} key\n * @param {function (Key): Promise<Uint8Array>} get\n * @param {function (Key): Promise<boolean>} has\n * @param {import('interface-datastore').Datastore} store\n * @returns {Promise<Uint8Array>}\n */\nexport async function getWithFallback (key, get, has, store) {\n  if (await has(key)) {\n    return get(key)\n  }\n\n  // Newer versions of level.js changed the key type from Uint8Array|string\n  // to Uint8Array so fall back to trying Uint8Arrays if we are using level.js\n  // and the string version of the key did not work\n  const levelJs = findLevelJs(store)\n\n  if (!levelJs) {\n    throw new NotFoundError()\n  }\n\n  return new Promise((resolve, reject) => {\n    // drop down to IndexDB API, otherwise level-js will monkey around with the keys/values\n    // @ts-ignore\n    const req = levelJs.store('readonly').get(key.toString())\n    req.transaction.onabort = () => {\n      reject(req.transaction.error)\n    }\n    req.transaction.oncomplete = () => {\n      if (req.result) {\n        return resolve(req.result)\n      }\n\n      reject(new NotFoundError())\n    }\n  })\n}\n\n/**\n * Level dbs wrap level dbs that wrap level dbs. Find a level-js\n * instance in the chain if one exists.\n *\n * @param {Datastore} store\n * @returns {Datastore | undefined}\n */\nfunction findLevelJs (store) {\n  let db = store\n\n  // @ts-ignore\n  while (db.db || db.child) {\n    // @ts-ignore\n    db = db.db || db.child\n\n    // `Level` is only present in the browser, in node it is LevelDOWN\n    // @ts-ignore\n    if (db.type === 'level-js' || db.constructor.name === 'Level') {\n      return db\n    }\n  }\n}\n","\nimport { Key } from 'interface-datastore/key'\nimport debug from 'debug'\nimport { toString as uint8ArrayToString } from 'uint8arrays/to-string'\nimport { fromString as uint8ArrayFromString } from 'uint8arrays/from-string'\nimport { getWithFallback, hasWithFallback } from './utils/level.js'\n\nconst log = debug('ipfs:repo:version')\nconst versionKey = new Key('version')\n\n/**\n *\n * @param {import('interface-datastore').Datastore} store\n */\nexport function version (store) {\n  return {\n    /**\n     * Check if a version file exists.\n     *\n     */\n    async exists () { // eslint-disable-line require-await\n      // level-js@5.x cannot read keys from level-js@4.x dbs so fall back to\n      // using IndexedDB API with string keys - only necessary until we do\n      // the migratiion to v10 or above\n      return hasWithFallback(versionKey, store.has.bind(store), store)\n    },\n    /**\n     * Get the current version.\n     *\n     * @returns {Promise<number>}\n     */\n    async get () {\n      // level-js@5.x cannot read keys from level-js@4.x dbs so fall back to\n      // using IndexedDB API with string keys - only necessary until we do\n      // the migratiion to v10 or above\n      const buf = await getWithFallback(versionKey, store.get.bind(store), store.has.bind(store), store)\n      return parseInt(uint8ArrayToString(buf), 10)\n    },\n    /**\n     * Set the version of the repo, writing it to the underlying store.\n     *\n     * @param {number} version\n     * @returns {Promise<void>}\n     */\n    set (version) {\n      return store.put(versionKey, uint8ArrayFromString(String(version)))\n    },\n    /**\n     * Check the current version, and returns true if versions matches\n     *\n     * @param {number} expected\n     */\n    async check (expected) {\n      const version = await this.get()\n      log('comparing version: %s and %s', version, expected)\n      // Version 6 and 7 are the same\n      // TODO: Clean up the compatibility logic. Repo feature detection would be ideal, or a better version schema\n      const compatibleVersion = (version === 6 && expected === 7) || (expected === 6 && version === 7)\n\n      return version === expected || compatibleVersion\n    }\n  }\n}\n","'use strict';\n\nvar has = Object.prototype.hasOwnProperty\n  , prefix = '~';\n\n/**\n * Constructor to create a storage for our `EE` objects.\n * An `Events` instance is a plain object whose properties are event names.\n *\n * @constructor\n * @private\n */\nfunction Events() {}\n\n//\n// We try to not inherit from `Object.prototype`. In some engines creating an\n// instance in this way is faster than calling `Object.create(null)` directly.\n// If `Object.create(null)` is not supported we prefix the event names with a\n// character to make sure that the built-in object properties are not\n// overridden or used as an attack vector.\n//\nif (Object.create) {\n  Events.prototype = Object.create(null);\n\n  //\n  // This hack is needed because the `__proto__` property is still inherited in\n  // some old browsers like Android 4, iPhone 5.1, Opera 11 and Safari 5.\n  //\n  if (!new Events().__proto__) prefix = false;\n}\n\n/**\n * Representation of a single event listener.\n *\n * @param {Function} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {Boolean} [once=false] Specify if the listener is a one-time listener.\n * @constructor\n * @private\n */\nfunction EE(fn, context, once) {\n  this.fn = fn;\n  this.context = context;\n  this.once = once || false;\n}\n\n/**\n * Add a listener for a given event.\n *\n * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {Boolean} once Specify if the listener is a one-time listener.\n * @returns {EventEmitter}\n * @private\n */\nfunction addListener(emitter, event, fn, context, once) {\n  if (typeof fn !== 'function') {\n    throw new TypeError('The listener must be a function');\n  }\n\n  var listener = new EE(fn, context || emitter, once)\n    , evt = prefix ? prefix + event : event;\n\n  if (!emitter._events[evt]) emitter._events[evt] = listener, emitter._eventsCount++;\n  else if (!emitter._events[evt].fn) emitter._events[evt].push(listener);\n  else emitter._events[evt] = [emitter._events[evt], listener];\n\n  return emitter;\n}\n\n/**\n * Clear event by name.\n *\n * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.\n * @param {(String|Symbol)} evt The Event name.\n * @private\n */\nfunction clearEvent(emitter, evt) {\n  if (--emitter._eventsCount === 0) emitter._events = new Events();\n  else delete emitter._events[evt];\n}\n\n/**\n * Minimal `EventEmitter` interface that is molded against the Node.js\n * `EventEmitter` interface.\n *\n * @constructor\n * @public\n */\nfunction EventEmitter() {\n  this._events = new Events();\n  this._eventsCount = 0;\n}\n\n/**\n * Return an array listing the events for which the emitter has registered\n * listeners.\n *\n * @returns {Array}\n * @public\n */\nEventEmitter.prototype.eventNames = function eventNames() {\n  var names = []\n    , events\n    , name;\n\n  if (this._eventsCount === 0) return names;\n\n  for (name in (events = this._events)) {\n    if (has.call(events, name)) names.push(prefix ? name.slice(1) : name);\n  }\n\n  if (Object.getOwnPropertySymbols) {\n    return names.concat(Object.getOwnPropertySymbols(events));\n  }\n\n  return names;\n};\n\n/**\n * Return the listeners registered for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Array} The registered listeners.\n * @public\n */\nEventEmitter.prototype.listeners = function listeners(event) {\n  var evt = prefix ? prefix + event : event\n    , handlers = this._events[evt];\n\n  if (!handlers) return [];\n  if (handlers.fn) return [handlers.fn];\n\n  for (var i = 0, l = handlers.length, ee = new Array(l); i < l; i++) {\n    ee[i] = handlers[i].fn;\n  }\n\n  return ee;\n};\n\n/**\n * Return the number of listeners listening to a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Number} The number of listeners.\n * @public\n */\nEventEmitter.prototype.listenerCount = function listenerCount(event) {\n  var evt = prefix ? prefix + event : event\n    , listeners = this._events[evt];\n\n  if (!listeners) return 0;\n  if (listeners.fn) return 1;\n  return listeners.length;\n};\n\n/**\n * Calls each of the listeners registered for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Boolean} `true` if the event had listeners, else `false`.\n * @public\n */\nEventEmitter.prototype.emit = function emit(event, a1, a2, a3, a4, a5) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) return false;\n\n  var listeners = this._events[evt]\n    , len = arguments.length\n    , args\n    , i;\n\n  if (listeners.fn) {\n    if (listeners.once) this.removeListener(event, listeners.fn, undefined, true);\n\n    switch (len) {\n      case 1: return listeners.fn.call(listeners.context), true;\n      case 2: return listeners.fn.call(listeners.context, a1), true;\n      case 3: return listeners.fn.call(listeners.context, a1, a2), true;\n      case 4: return listeners.fn.call(listeners.context, a1, a2, a3), true;\n      case 5: return listeners.fn.call(listeners.context, a1, a2, a3, a4), true;\n      case 6: return listeners.fn.call(listeners.context, a1, a2, a3, a4, a5), true;\n    }\n\n    for (i = 1, args = new Array(len -1); i < len; i++) {\n      args[i - 1] = arguments[i];\n    }\n\n    listeners.fn.apply(listeners.context, args);\n  } else {\n    var length = listeners.length\n      , j;\n\n    for (i = 0; i < length; i++) {\n      if (listeners[i].once) this.removeListener(event, listeners[i].fn, undefined, true);\n\n      switch (len) {\n        case 1: listeners[i].fn.call(listeners[i].context); break;\n        case 2: listeners[i].fn.call(listeners[i].context, a1); break;\n        case 3: listeners[i].fn.call(listeners[i].context, a1, a2); break;\n        case 4: listeners[i].fn.call(listeners[i].context, a1, a2, a3); break;\n        default:\n          if (!args) for (j = 1, args = new Array(len -1); j < len; j++) {\n            args[j - 1] = arguments[j];\n          }\n\n          listeners[i].fn.apply(listeners[i].context, args);\n      }\n    }\n  }\n\n  return true;\n};\n\n/**\n * Add a listener for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.on = function on(event, fn, context) {\n  return addListener(this, event, fn, context, false);\n};\n\n/**\n * Add a one-time listener for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.once = function once(event, fn, context) {\n  return addListener(this, event, fn, context, true);\n};\n\n/**\n * Remove the listeners of a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn Only remove the listeners that match this function.\n * @param {*} context Only remove the listeners that have this context.\n * @param {Boolean} once Only remove one-time listeners.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.removeListener = function removeListener(event, fn, context, once) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) return this;\n  if (!fn) {\n    clearEvent(this, evt);\n    return this;\n  }\n\n  var listeners = this._events[evt];\n\n  if (listeners.fn) {\n    if (\n      listeners.fn === fn &&\n      (!once || listeners.once) &&\n      (!context || listeners.context === context)\n    ) {\n      clearEvent(this, evt);\n    }\n  } else {\n    for (var i = 0, events = [], length = listeners.length; i < length; i++) {\n      if (\n        listeners[i].fn !== fn ||\n        (once && !listeners[i].once) ||\n        (context && listeners[i].context !== context)\n      ) {\n        events.push(listeners[i]);\n      }\n    }\n\n    //\n    // Reset the array, or remove it completely if we have no more listeners.\n    //\n    if (events.length) this._events[evt] = events.length === 1 ? events[0] : events;\n    else clearEvent(this, evt);\n  }\n\n  return this;\n};\n\n/**\n * Remove all listeners, or those of the specified event.\n *\n * @param {(String|Symbol)} [event] The event name.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.removeAllListeners = function removeAllListeners(event) {\n  var evt;\n\n  if (event) {\n    evt = prefix ? prefix + event : event;\n    if (this._events[evt]) clearEvent(this, evt);\n  } else {\n    this._events = new Events();\n    this._eventsCount = 0;\n  }\n\n  return this;\n};\n\n//\n// Alias methods names because people roll like that.\n//\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\nEventEmitter.prototype.addListener = EventEmitter.prototype.on;\n\n//\n// Expose the prefix.\n//\nEventEmitter.prefixed = prefix;\n\n//\n// Allow `EventEmitter` to be imported as module namespace.\n//\nEventEmitter.EventEmitter = EventEmitter;\n\n//\n// Expose the module.\n//\nif ('undefined' !== typeof module) {\n  module.exports = EventEmitter;\n}\n","export class TimeoutError extends Error {\n\tconstructor(message) {\n\t\tsuper(message);\n\t\tthis.name = 'TimeoutError';\n\t}\n}\n\n/**\nAn error to be thrown when the request is aborted by AbortController.\nDOMException is thrown instead of this Error when DOMException is available.\n*/\nexport class AbortError extends Error {\n\tconstructor(message) {\n\t\tsuper();\n\t\tthis.name = 'AbortError';\n\t\tthis.message = message;\n\t}\n}\n\n/**\nTODO: Remove AbortError and just throw DOMException when targeting Node 18.\n*/\nconst getDOMException = errorMessage => globalThis.DOMException === undefined ?\n\tnew AbortError(errorMessage) :\n\tnew DOMException(errorMessage);\n\n/**\nTODO: Remove below function and just 'reject(signal.reason)' when targeting Node 18.\n*/\nconst getAbortedReason = signal => {\n\tconst reason = signal.reason === undefined ?\n\t\tgetDOMException('This operation was aborted.') :\n\t\tsignal.reason;\n\n\treturn reason instanceof Error ? reason : getDOMException(reason);\n};\n\nexport default function pTimeout(promise, milliseconds, fallback, options) {\n\tlet timer;\n\n\tconst cancelablePromise = new Promise((resolve, reject) => {\n\t\tif (typeof milliseconds !== 'number' || Math.sign(milliseconds) !== 1) {\n\t\t\tthrow new TypeError(`Expected \\`milliseconds\\` to be a positive number, got \\`${milliseconds}\\``);\n\t\t}\n\n\t\tif (milliseconds === Number.POSITIVE_INFINITY) {\n\t\t\tresolve(promise);\n\t\t\treturn;\n\t\t}\n\n\t\toptions = {\n\t\t\tcustomTimers: {setTimeout, clearTimeout},\n\t\t\t...options\n\t\t};\n\n\t\tif (options.signal) {\n\t\t\tconst {signal} = options;\n\t\t\tif (signal.aborted) {\n\t\t\t\treject(getAbortedReason(signal));\n\t\t\t}\n\n\t\t\tsignal.addEventListener('abort', () => {\n\t\t\t\treject(getAbortedReason(signal));\n\t\t\t});\n\t\t}\n\n\t\ttimer = options.customTimers.setTimeout.call(undefined, () => {\n\t\t\tif (typeof fallback === 'function') {\n\t\t\t\ttry {\n\t\t\t\t\tresolve(fallback());\n\t\t\t\t} catch (error) {\n\t\t\t\t\treject(error);\n\t\t\t\t}\n\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst message = typeof fallback === 'string' ? fallback : `Promise timed out after ${milliseconds} milliseconds`;\n\t\t\tconst timeoutError = fallback instanceof Error ? fallback : new TimeoutError(message);\n\n\t\t\tif (typeof promise.cancel === 'function') {\n\t\t\t\tpromise.cancel();\n\t\t\t}\n\n\t\t\treject(timeoutError);\n\t\t}, milliseconds);\n\n\t\t(async () => {\n\t\t\ttry {\n\t\t\t\tresolve(await promise);\n\t\t\t} catch (error) {\n\t\t\t\treject(error);\n\t\t\t} finally {\n\t\t\t\toptions.customTimers.clearTimeout.call(undefined, timer);\n\t\t\t}\n\t\t})();\n\t});\n\n\tcancelablePromise.clear = () => {\n\t\tclearTimeout(timer);\n\t\ttimer = undefined;\n\t};\n\n\treturn cancelablePromise;\n}\n","// Port of lower_bound from https://en.cppreference.com/w/cpp/algorithm/lower_bound\n// Used to compute insertion index to keep queue sorted after insertion\nexport default function lowerBound(array, value, comparator) {\n    let first = 0;\n    let count = array.length;\n    while (count > 0) {\n        const step = Math.trunc(count / 2);\n        let it = first + step;\n        if (comparator(array[it], value) <= 0) {\n            first = ++it;\n            count -= step + 1;\n        }\n        else {\n            count = step;\n        }\n    }\n    return first;\n}\n","var __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar _PriorityQueue_queue;\nimport lowerBound from './lower-bound.js';\nexport default class PriorityQueue {\n    constructor() {\n        _PriorityQueue_queue.set(this, []);\n    }\n    enqueue(run, options) {\n        options = {\n            priority: 0,\n            ...options,\n        };\n        const element = {\n            priority: options.priority,\n            run,\n        };\n        if (this.size && __classPrivateFieldGet(this, _PriorityQueue_queue, \"f\")[this.size - 1].priority >= options.priority) {\n            __classPrivateFieldGet(this, _PriorityQueue_queue, \"f\").push(element);\n            return;\n        }\n        const index = lowerBound(__classPrivateFieldGet(this, _PriorityQueue_queue, \"f\"), element, (a, b) => b.priority - a.priority);\n        __classPrivateFieldGet(this, _PriorityQueue_queue, \"f\").splice(index, 0, element);\n    }\n    dequeue() {\n        const item = __classPrivateFieldGet(this, _PriorityQueue_queue, \"f\").shift();\n        return item === null || item === void 0 ? void 0 : item.run;\n    }\n    filter(options) {\n        return __classPrivateFieldGet(this, _PriorityQueue_queue, \"f\").filter((element) => element.priority === options.priority).map((element) => element.run);\n    }\n    get size() {\n        return __classPrivateFieldGet(this, _PriorityQueue_queue, \"f\").length;\n    }\n}\n_PriorityQueue_queue = new WeakMap();\n","var __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar _PQueue_instances, _PQueue_carryoverConcurrencyCount, _PQueue_isIntervalIgnored, _PQueue_intervalCount, _PQueue_intervalCap, _PQueue_interval, _PQueue_intervalEnd, _PQueue_intervalId, _PQueue_timeoutId, _PQueue_queue, _PQueue_queueClass, _PQueue_pendingCount, _PQueue_concurrency, _PQueue_isPaused, _PQueue_throwOnTimeout, _PQueue_doesIntervalAllowAnother_get, _PQueue_doesConcurrentAllowAnother_get, _PQueue_next, _PQueue_emitEvents, _PQueue_onResumeInterval, _PQueue_isIntervalPaused_get, _PQueue_tryToStartAnother, _PQueue_initializeIntervalIfNeeded, _PQueue_onInterval, _PQueue_processQueue, _PQueue_onEvent;\nimport EventEmitter from 'eventemitter3';\nimport pTimeout, { TimeoutError } from 'p-timeout';\nimport PriorityQueue from './priority-queue.js';\nconst timeoutError = new TimeoutError();\n/**\nThe error thrown by `queue.add()` when a job is aborted before it is run. See `signal`.\n*/\nexport class AbortError extends Error {\n}\n/**\nPromise queue with concurrency control.\n*/\nexport default class PQueue extends EventEmitter {\n    constructor(options) {\n        var _a, _b, _c, _d;\n        super();\n        _PQueue_instances.add(this);\n        _PQueue_carryoverConcurrencyCount.set(this, void 0);\n        _PQueue_isIntervalIgnored.set(this, void 0);\n        _PQueue_intervalCount.set(this, 0);\n        _PQueue_intervalCap.set(this, void 0);\n        _PQueue_interval.set(this, void 0);\n        _PQueue_intervalEnd.set(this, 0);\n        _PQueue_intervalId.set(this, void 0);\n        _PQueue_timeoutId.set(this, void 0);\n        _PQueue_queue.set(this, void 0);\n        _PQueue_queueClass.set(this, void 0);\n        _PQueue_pendingCount.set(this, 0);\n        // The `!` is needed because of https://github.com/microsoft/TypeScript/issues/32194\n        _PQueue_concurrency.set(this, void 0);\n        _PQueue_isPaused.set(this, void 0);\n        _PQueue_throwOnTimeout.set(this, void 0);\n        /**\n        Per-operation timeout in milliseconds. Operations fulfill once `timeout` elapses if they haven't already.\n    \n        Applies to each future operation.\n        */\n        Object.defineProperty(this, \"timeout\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        // eslint-disable-next-line @typescript-eslint/consistent-type-assertions\n        options = {\n            carryoverConcurrencyCount: false,\n            intervalCap: Number.POSITIVE_INFINITY,\n            interval: 0,\n            concurrency: Number.POSITIVE_INFINITY,\n            autoStart: true,\n            queueClass: PriorityQueue,\n            ...options,\n        };\n        if (!(typeof options.intervalCap === 'number' && options.intervalCap >= 1)) {\n            throw new TypeError(`Expected \\`intervalCap\\` to be a number from 1 and up, got \\`${(_b = (_a = options.intervalCap) === null || _a === void 0 ? void 0 : _a.toString()) !== null && _b !== void 0 ? _b : ''}\\` (${typeof options.intervalCap})`);\n        }\n        if (options.interval === undefined || !(Number.isFinite(options.interval) && options.interval >= 0)) {\n            throw new TypeError(`Expected \\`interval\\` to be a finite number >= 0, got \\`${(_d = (_c = options.interval) === null || _c === void 0 ? void 0 : _c.toString()) !== null && _d !== void 0 ? _d : ''}\\` (${typeof options.interval})`);\n        }\n        __classPrivateFieldSet(this, _PQueue_carryoverConcurrencyCount, options.carryoverConcurrencyCount, \"f\");\n        __classPrivateFieldSet(this, _PQueue_isIntervalIgnored, options.intervalCap === Number.POSITIVE_INFINITY || options.interval === 0, \"f\");\n        __classPrivateFieldSet(this, _PQueue_intervalCap, options.intervalCap, \"f\");\n        __classPrivateFieldSet(this, _PQueue_interval, options.interval, \"f\");\n        __classPrivateFieldSet(this, _PQueue_queue, new options.queueClass(), \"f\");\n        __classPrivateFieldSet(this, _PQueue_queueClass, options.queueClass, \"f\");\n        this.concurrency = options.concurrency;\n        this.timeout = options.timeout;\n        __classPrivateFieldSet(this, _PQueue_throwOnTimeout, options.throwOnTimeout === true, \"f\");\n        __classPrivateFieldSet(this, _PQueue_isPaused, options.autoStart === false, \"f\");\n    }\n    get concurrency() {\n        return __classPrivateFieldGet(this, _PQueue_concurrency, \"f\");\n    }\n    set concurrency(newConcurrency) {\n        if (!(typeof newConcurrency === 'number' && newConcurrency >= 1)) {\n            throw new TypeError(`Expected \\`concurrency\\` to be a number from 1 and up, got \\`${newConcurrency}\\` (${typeof newConcurrency})`);\n        }\n        __classPrivateFieldSet(this, _PQueue_concurrency, newConcurrency, \"f\");\n        __classPrivateFieldGet(this, _PQueue_instances, \"m\", _PQueue_processQueue).call(this);\n    }\n    /**\n    Adds a sync or async task to the queue. Always returns a promise.\n    */\n    async add(fn, options = {}) {\n        return new Promise((resolve, reject) => {\n            const run = async () => {\n                var _a;\n                var _b, _c;\n                __classPrivateFieldSet(this, _PQueue_pendingCount, (_b = __classPrivateFieldGet(this, _PQueue_pendingCount, \"f\"), _b++, _b), \"f\");\n                __classPrivateFieldSet(this, _PQueue_intervalCount, (_c = __classPrivateFieldGet(this, _PQueue_intervalCount, \"f\"), _c++, _c), \"f\");\n                try {\n                    if ((_a = options.signal) === null || _a === void 0 ? void 0 : _a.aborted) {\n                        // TODO: Use ABORT_ERR code when targeting Node.js 16 (https://nodejs.org/docs/latest-v16.x/api/errors.html#abort_err)\n                        reject(new AbortError('The task was aborted.'));\n                        return;\n                    }\n                    const operation = (this.timeout === undefined && options.timeout === undefined) ? fn({ signal: options.signal }) : pTimeout(Promise.resolve(fn({ signal: options.signal })), (options.timeout === undefined ? this.timeout : options.timeout), () => {\n                        if (options.throwOnTimeout === undefined ? __classPrivateFieldGet(this, _PQueue_throwOnTimeout, \"f\") : options.throwOnTimeout) {\n                            reject(timeoutError);\n                        }\n                        return undefined;\n                    });\n                    const result = await operation;\n                    resolve(result);\n                    this.emit('completed', result);\n                }\n                catch (error) {\n                    reject(error);\n                    this.emit('error', error);\n                }\n                __classPrivateFieldGet(this, _PQueue_instances, \"m\", _PQueue_next).call(this);\n            };\n            __classPrivateFieldGet(this, _PQueue_queue, \"f\").enqueue(run, options);\n            __classPrivateFieldGet(this, _PQueue_instances, \"m\", _PQueue_tryToStartAnother).call(this);\n            this.emit('add');\n        });\n    }\n    /**\n    Same as `.add()`, but accepts an array of sync or async functions.\n\n    @returns A promise that resolves when all functions are resolved.\n    */\n    async addAll(functions, options) {\n        return Promise.all(functions.map(async (function_) => this.add(function_, options)));\n    }\n    /**\n    Start (or resume) executing enqueued tasks within concurrency limit. No need to call this if queue is not paused (via `options.autoStart = false` or by `.pause()` method.)\n    */\n    start() {\n        if (!__classPrivateFieldGet(this, _PQueue_isPaused, \"f\")) {\n            return this;\n        }\n        __classPrivateFieldSet(this, _PQueue_isPaused, false, \"f\");\n        __classPrivateFieldGet(this, _PQueue_instances, \"m\", _PQueue_processQueue).call(this);\n        return this;\n    }\n    /**\n    Put queue execution on hold.\n    */\n    pause() {\n        __classPrivateFieldSet(this, _PQueue_isPaused, true, \"f\");\n    }\n    /**\n    Clear the queue.\n    */\n    clear() {\n        __classPrivateFieldSet(this, _PQueue_queue, new (__classPrivateFieldGet(this, _PQueue_queueClass, \"f\"))(), \"f\");\n    }\n    /**\n    Can be called multiple times. Useful if you for example add additional items at a later time.\n\n    @returns A promise that settles when the queue becomes empty.\n    */\n    async onEmpty() {\n        // Instantly resolve if the queue is empty\n        if (__classPrivateFieldGet(this, _PQueue_queue, \"f\").size === 0) {\n            return;\n        }\n        await __classPrivateFieldGet(this, _PQueue_instances, \"m\", _PQueue_onEvent).call(this, 'empty');\n    }\n    /**\n    @returns A promise that settles when the queue size is less than the given limit: `queue.size < limit`.\n\n    If you want to avoid having the queue grow beyond a certain size you can `await queue.onSizeLessThan()` before adding a new item.\n\n    Note that this only limits the number of items waiting to start. There could still be up to `concurrency` jobs already running that this call does not include in its calculation.\n    */\n    async onSizeLessThan(limit) {\n        // Instantly resolve if the queue is empty.\n        if (__classPrivateFieldGet(this, _PQueue_queue, \"f\").size < limit) {\n            return;\n        }\n        await __classPrivateFieldGet(this, _PQueue_instances, \"m\", _PQueue_onEvent).call(this, 'next', () => __classPrivateFieldGet(this, _PQueue_queue, \"f\").size < limit);\n    }\n    /**\n    The difference with `.onEmpty` is that `.onIdle` guarantees that all work from the queue has finished. `.onEmpty` merely signals that the queue is empty, but it could mean that some promises haven't completed yet.\n\n    @returns A promise that settles when the queue becomes empty, and all promises have completed; `queue.size === 0 && queue.pending === 0`.\n    */\n    async onIdle() {\n        // Instantly resolve if none pending and if nothing else is queued\n        if (__classPrivateFieldGet(this, _PQueue_pendingCount, \"f\") === 0 && __classPrivateFieldGet(this, _PQueue_queue, \"f\").size === 0) {\n            return;\n        }\n        await __classPrivateFieldGet(this, _PQueue_instances, \"m\", _PQueue_onEvent).call(this, 'idle');\n    }\n    /**\n    Size of the queue, the number of queued items waiting to run.\n    */\n    get size() {\n        return __classPrivateFieldGet(this, _PQueue_queue, \"f\").size;\n    }\n    /**\n    Size of the queue, filtered by the given options.\n\n    For example, this can be used to find the number of items remaining in the queue with a specific priority level.\n    */\n    sizeBy(options) {\n        // eslint-disable-next-line unicorn/no-array-callback-reference\n        return __classPrivateFieldGet(this, _PQueue_queue, \"f\").filter(options).length;\n    }\n    /**\n    Number of running items (no longer in the queue).\n    */\n    get pending() {\n        return __classPrivateFieldGet(this, _PQueue_pendingCount, \"f\");\n    }\n    /**\n    Whether the queue is currently paused.\n    */\n    get isPaused() {\n        return __classPrivateFieldGet(this, _PQueue_isPaused, \"f\");\n    }\n}\n_PQueue_carryoverConcurrencyCount = new WeakMap(), _PQueue_isIntervalIgnored = new WeakMap(), _PQueue_intervalCount = new WeakMap(), _PQueue_intervalCap = new WeakMap(), _PQueue_interval = new WeakMap(), _PQueue_intervalEnd = new WeakMap(), _PQueue_intervalId = new WeakMap(), _PQueue_timeoutId = new WeakMap(), _PQueue_queue = new WeakMap(), _PQueue_queueClass = new WeakMap(), _PQueue_pendingCount = new WeakMap(), _PQueue_concurrency = new WeakMap(), _PQueue_isPaused = new WeakMap(), _PQueue_throwOnTimeout = new WeakMap(), _PQueue_instances = new WeakSet(), _PQueue_doesIntervalAllowAnother_get = function _PQueue_doesIntervalAllowAnother_get() {\n    return __classPrivateFieldGet(this, _PQueue_isIntervalIgnored, \"f\") || __classPrivateFieldGet(this, _PQueue_intervalCount, \"f\") < __classPrivateFieldGet(this, _PQueue_intervalCap, \"f\");\n}, _PQueue_doesConcurrentAllowAnother_get = function _PQueue_doesConcurrentAllowAnother_get() {\n    return __classPrivateFieldGet(this, _PQueue_pendingCount, \"f\") < __classPrivateFieldGet(this, _PQueue_concurrency, \"f\");\n}, _PQueue_next = function _PQueue_next() {\n    var _a;\n    __classPrivateFieldSet(this, _PQueue_pendingCount, (_a = __classPrivateFieldGet(this, _PQueue_pendingCount, \"f\"), _a--, _a), \"f\");\n    __classPrivateFieldGet(this, _PQueue_instances, \"m\", _PQueue_tryToStartAnother).call(this);\n    this.emit('next');\n}, _PQueue_emitEvents = function _PQueue_emitEvents() {\n    this.emit('empty');\n    if (__classPrivateFieldGet(this, _PQueue_pendingCount, \"f\") === 0) {\n        this.emit('idle');\n    }\n}, _PQueue_onResumeInterval = function _PQueue_onResumeInterval() {\n    __classPrivateFieldGet(this, _PQueue_instances, \"m\", _PQueue_onInterval).call(this);\n    __classPrivateFieldGet(this, _PQueue_instances, \"m\", _PQueue_initializeIntervalIfNeeded).call(this);\n    __classPrivateFieldSet(this, _PQueue_timeoutId, undefined, \"f\");\n}, _PQueue_isIntervalPaused_get = function _PQueue_isIntervalPaused_get() {\n    const now = Date.now();\n    if (__classPrivateFieldGet(this, _PQueue_intervalId, \"f\") === undefined) {\n        const delay = __classPrivateFieldGet(this, _PQueue_intervalEnd, \"f\") - now;\n        if (delay < 0) {\n            // Act as the interval was done\n            // We don't need to resume it here because it will be resumed on line 160\n            __classPrivateFieldSet(this, _PQueue_intervalCount, (__classPrivateFieldGet(this, _PQueue_carryoverConcurrencyCount, \"f\")) ? __classPrivateFieldGet(this, _PQueue_pendingCount, \"f\") : 0, \"f\");\n        }\n        else {\n            // Act as the interval is pending\n            if (__classPrivateFieldGet(this, _PQueue_timeoutId, \"f\") === undefined) {\n                __classPrivateFieldSet(this, _PQueue_timeoutId, setTimeout(() => {\n                    __classPrivateFieldGet(this, _PQueue_instances, \"m\", _PQueue_onResumeInterval).call(this);\n                }, delay), \"f\");\n            }\n            return true;\n        }\n    }\n    return false;\n}, _PQueue_tryToStartAnother = function _PQueue_tryToStartAnother() {\n    if (__classPrivateFieldGet(this, _PQueue_queue, \"f\").size === 0) {\n        // We can clear the interval (\"pause\")\n        // Because we can redo it later (\"resume\")\n        if (__classPrivateFieldGet(this, _PQueue_intervalId, \"f\")) {\n            clearInterval(__classPrivateFieldGet(this, _PQueue_intervalId, \"f\"));\n        }\n        __classPrivateFieldSet(this, _PQueue_intervalId, undefined, \"f\");\n        __classPrivateFieldGet(this, _PQueue_instances, \"m\", _PQueue_emitEvents).call(this);\n        return false;\n    }\n    if (!__classPrivateFieldGet(this, _PQueue_isPaused, \"f\")) {\n        const canInitializeInterval = !__classPrivateFieldGet(this, _PQueue_instances, \"a\", _PQueue_isIntervalPaused_get);\n        if (__classPrivateFieldGet(this, _PQueue_instances, \"a\", _PQueue_doesIntervalAllowAnother_get) && __classPrivateFieldGet(this, _PQueue_instances, \"a\", _PQueue_doesConcurrentAllowAnother_get)) {\n            const job = __classPrivateFieldGet(this, _PQueue_queue, \"f\").dequeue();\n            if (!job) {\n                return false;\n            }\n            this.emit('active');\n            job();\n            if (canInitializeInterval) {\n                __classPrivateFieldGet(this, _PQueue_instances, \"m\", _PQueue_initializeIntervalIfNeeded).call(this);\n            }\n            return true;\n        }\n    }\n    return false;\n}, _PQueue_initializeIntervalIfNeeded = function _PQueue_initializeIntervalIfNeeded() {\n    if (__classPrivateFieldGet(this, _PQueue_isIntervalIgnored, \"f\") || __classPrivateFieldGet(this, _PQueue_intervalId, \"f\") !== undefined) {\n        return;\n    }\n    __classPrivateFieldSet(this, _PQueue_intervalId, setInterval(() => {\n        __classPrivateFieldGet(this, _PQueue_instances, \"m\", _PQueue_onInterval).call(this);\n    }, __classPrivateFieldGet(this, _PQueue_interval, \"f\")), \"f\");\n    __classPrivateFieldSet(this, _PQueue_intervalEnd, Date.now() + __classPrivateFieldGet(this, _PQueue_interval, \"f\"), \"f\");\n}, _PQueue_onInterval = function _PQueue_onInterval() {\n    if (__classPrivateFieldGet(this, _PQueue_intervalCount, \"f\") === 0 && __classPrivateFieldGet(this, _PQueue_pendingCount, \"f\") === 0 && __classPrivateFieldGet(this, _PQueue_intervalId, \"f\")) {\n        clearInterval(__classPrivateFieldGet(this, _PQueue_intervalId, \"f\"));\n        __classPrivateFieldSet(this, _PQueue_intervalId, undefined, \"f\");\n    }\n    __classPrivateFieldSet(this, _PQueue_intervalCount, __classPrivateFieldGet(this, _PQueue_carryoverConcurrencyCount, \"f\") ? __classPrivateFieldGet(this, _PQueue_pendingCount, \"f\") : 0, \"f\");\n    __classPrivateFieldGet(this, _PQueue_instances, \"m\", _PQueue_processQueue).call(this);\n}, _PQueue_processQueue = function _PQueue_processQueue() {\n    // eslint-disable-next-line no-empty\n    while (__classPrivateFieldGet(this, _PQueue_instances, \"m\", _PQueue_tryToStartAnother).call(this)) { }\n}, _PQueue_onEvent = async function _PQueue_onEvent(event, filter) {\n    return new Promise(resolve => {\n        const listener = () => {\n            if (filter && !filter()) {\n                return;\n            }\n            this.off(event, listener);\n            resolve();\n        };\n        this.on(event, listener);\n    });\n};\n","var objectSafeSet = set;\n\n/*\n  var obj1 = {};\n  set(obj1, 'a.aa.aaa', 4); // true\n  obj1; // {a: {aa: {aaa: 4}}}\n\n  var obj2 = {};\n  set(obj2, ['a', 'aa', 'aaa'], 4); // true\n  obj2; // {a: {aa: {aaa: 4}}}\n\n  var obj3 = {a: {aa: {aaa: 2}}};\n  set(obj3, 'a.aa.aaa', 3); // true\n  obj3; // {a: {aa: {aaa: 3}}}\n\n  // don't clobber existing\n  var obj4 = {a: {aa: {aaa: 2}}};\n  set(obj4, 'a.aa', {bbb: 7}); // false\n\n  const obj5 = {a: {}};\n  const sym = Symbol();\n  set(obj5.a, sym, 7); // true\n  obj5; // {a: {Symbol(): 7}}\n*/\n\nfunction set(obj, propsArg, value) {\n  var props, lastProp;\n  if (Array.isArray(propsArg)) {\n    props = propsArg.slice(0);\n  }\n  if (typeof propsArg == 'string') {\n    props = propsArg.split('.');\n  }\n  if (typeof propsArg == 'symbol') {\n    props = [propsArg];\n  }\n  if (!Array.isArray(props)) {\n    throw new Error('props arg must be an array, a string or a symbol');\n  }\n  lastProp = props.pop();\n  if (!lastProp) {\n    return false;\n  }\n  prototypeCheck(lastProp);\n  var thisProp;\n  while ((thisProp = props.shift())) {\n    prototypeCheck(thisProp);\n    if (typeof obj[thisProp] == 'undefined') {\n      obj[thisProp] = {};\n    }\n    obj = obj[thisProp];\n    if (!obj || typeof obj != 'object') {\n      return false;\n    }\n  }\n  obj[lastProp] = value;\n  return true;\n}\n\nfunction prototypeCheck(prop) {\n  // coercion is intentional to catch prop values like `['__proto__']`\n  if (prop == '__proto__' || prop == 'constructor' || prop == 'prototype') {\n    throw new Error('setting of prototype values not supported');\n  }\n}\n\nexport {objectSafeSet as default};\n","\nimport { Key } from 'interface-datastore/key'\nimport PQueue from 'p-queue'\nimport _get from 'just-safe-get'\nimport _set from 'just-safe-set'\nimport errCode from 'err-code'\nimport { NotFoundError } from './errors.js'\nimport { toString as uint8ArrayToString } from 'uint8arrays/to-string'\nimport { fromString as uint8ArrayFromString } from 'uint8arrays/from-string'\nimport { getWithFallback, hasWithFallback } from './utils/level.js'\n\n// @ts-ignore types are broken in p-queue@6.x.x - also, if we imported via esm\n// we can use the default, if via cjs we need to get the default via prop access\nconst Queue = PQueue.default ? PQueue.default : PQueue\n\nconst configKey = new Key('config')\n\n/**\n * @typedef {import('./types').Config} Config\n * @typedef {import('interface-datastore').Datastore} Datastore\n */\n\n/**\n * @param {Datastore} store\n */\nexport function config (store) {\n  const setQueue = new Queue({ concurrency: 1 })\n\n  const configStore = {\n    /**\n     * Get the current configuration from the repo.\n     *\n     * @param {object} [options] - options\n     * @param {AbortSignal} [options.signal] - abort this config read\n     * @returns {Promise<Config>}\n     */\n    async getAll (options = {}) { // eslint-disable-line require-await\n      // level-js@5.x cannot read keys from level-js@4.x dbs so fall back to\n      // using IndexedDB API with string keys - only necessary until we do\n      // the migratiion to v10 or above\n      const encodedValue = await getWithFallback(configKey, store.get.bind(store), store.has.bind(store), store)\n\n      return JSON.parse(uint8ArrayToString(encodedValue))\n    },\n\n    /**\n     * Get the value for the passed configuration key from the repo.\n     *\n     * @param {string} key - the config key to get\n     * @param {object} [options] - options\n     * @param {AbortSignal} [options.signal] - abort this config read\n     */\n    async get (key, options = {}) {\n      if (key == null) {\n        throw new NotFoundError(`Key ${key} does not exist in config`)\n      }\n\n      const config = await this.getAll(options)\n      const value = _get(config, key)\n\n      if (value === undefined) {\n        throw new NotFoundError(`Key ${key} does not exist in config`)\n      }\n\n      return value\n    },\n\n    /**\n     * Set the current configuration for this repo.\n     *\n     * @param {string} key - the config key to be written\n     * @param {any} [value] - the config value to be written\n     * @param {object} [options] - options\n     * @param {AbortSignal} [options.signal] - abort this config write\n     */\n    set (key, value, options = {}) {\n      // @ts-ignore ts thinks key will only be a string, but it may not be\n      if (typeof key !== 'string' && !(key instanceof String)) {\n        throw errCode(new Error('Invalid key type: ' + typeof key), 'ERR_INVALID_KEY')\n      }\n\n      if (value === undefined || (value instanceof Uint8Array)) {\n        throw errCode(new Error('Invalid value type: ' + typeof value), 'ERR_INVALID_VALUE')\n      }\n\n      return setQueue.add(() => _maybeDoSet({\n        key: key,\n        value: value\n      }, options.signal))\n    },\n\n    /**\n     * Set the current configuration for this repo.\n     *\n     * @param {Config} [value] - the config value to be written\n     * @param {object} [options] - options\n     * @param {AbortSignal} [options.signal] - abort this config write\n     */\n    replace (value, options = {}) {\n      if (!value || (value instanceof Uint8Array)) {\n        throw errCode(new Error('Invalid value type: ' + typeof value), 'ERR_INVALID_VALUE')\n      }\n\n      return setQueue.add(() => _maybeDoSet({\n        key: undefined,\n        value: value\n      }, options.signal))\n    },\n\n    /**\n     * Check if a config file exists.\n     *\n     */\n    async exists () { // eslint-disable-line require-await\n      // level-js@5.x cannot read keys from level-js@4.x dbs so fall back to\n      // using IndexedDB API with string keys - only necessary until we do\n      // the migration to v10 or above\n      return hasWithFallback(configKey, store.has.bind(store), store)\n    }\n  }\n\n  return configStore\n\n  /**\n   * @param {{ key: any; value: any; }} m\n   * @param {AbortSignal | undefined} signal\n   */\n  async function _maybeDoSet (m, signal) {\n    if (signal && signal.aborted) {\n      return\n    }\n\n    const key = m.key\n    const value = m.value\n    if (key) {\n      const config = await configStore.getAll()\n      if (typeof config === 'object' && config !== null) {\n        _set(config, key, value)\n      }\n      return _saveAll(config)\n    }\n    return _saveAll(value)\n  }\n\n  /**\n   * @param {unknown} config\n   */\n  function _saveAll (config) {\n    const buf = uint8ArrayFromString(JSON.stringify(config, null, 2))\n    return store.put(configKey, buf)\n  }\n}\n","export default function isPlainObject(value) {\n\tif (typeof value !== 'object' || value === null) {\n\t\treturn false;\n\t}\n\n\tconst prototype = Object.getPrototypeOf(value);\n\treturn (prototype === null || prototype === Object.prototype || Object.getPrototypeOf(prototype) === null) && !(Symbol.toStringTag in value) && !(Symbol.iterator in value);\n}\n","import isPlainObject from 'is-plain-obj';\n\nexport default function sortKeys(object, options = {}) {\n\tif (!isPlainObject(object) && !Array.isArray(object)) {\n\t\tthrow new TypeError('Expected a plain object or array');\n\t}\n\n\tconst {deep, compare} = options;\n\tconst seenInput = [];\n\tconst seenOutput = [];\n\n\tconst deepSortArray = array => {\n\t\tconst seenIndex = seenInput.indexOf(array);\n\t\tif (seenIndex !== -1) {\n\t\t\treturn seenOutput[seenIndex];\n\t\t}\n\n\t\tconst result = [];\n\t\tseenInput.push(array);\n\t\tseenOutput.push(result);\n\n\t\tresult.push(...array.map(item => {\n\t\t\tif (Array.isArray(item)) {\n\t\t\t\treturn deepSortArray(item);\n\t\t\t}\n\n\t\t\tif (isPlainObject(item)) {\n\t\t\t\treturn _sortKeys(item);\n\t\t\t}\n\n\t\t\treturn item;\n\t\t}));\n\n\t\treturn result;\n\t};\n\n\tconst _sortKeys = object => {\n\t\tconst seenIndex = seenInput.indexOf(object);\n\t\tif (seenIndex !== -1) {\n\t\t\treturn seenOutput[seenIndex];\n\t\t}\n\n\t\tconst result = {};\n\t\tconst keys = Object.keys(object).sort(compare);\n\n\t\tseenInput.push(object);\n\t\tseenOutput.push(result);\n\n\t\tfor (const key of keys) {\n\t\t\tconst value = object[key];\n\t\t\tlet newValue;\n\n\t\t\tif (deep && Array.isArray(value)) {\n\t\t\t\tnewValue = deepSortArray(value);\n\t\t\t} else {\n\t\t\t\tnewValue = deep && isPlainObject(value) ? _sortKeys(value) : value;\n\t\t\t}\n\n\t\t\tObject.defineProperty(result, key, {\n\t\t\t\t...Object.getOwnPropertyDescriptor(object, key),\n\t\t\t\tvalue: newValue\n\t\t\t});\n\t\t}\n\n\t\treturn result;\n\t};\n\n\tif (Array.isArray(object)) {\n\t\treturn deep ? deepSortArray(object) : object.slice();\n\t}\n\n\treturn _sortKeys(object);\n}\n","\nimport { Key } from 'interface-datastore'\nimport sortKeys from 'sort-keys'\nimport { toString as uint8ArrayToString } from 'uint8arrays/to-string'\nimport { fromString as uint8ArrayFromString } from 'uint8arrays/from-string'\n\nconst specKey = new Key('datastore_spec')\n\n/**\n *\n * @param {import('interface-datastore').Datastore} store\n */\nexport function spec (store) {\n  return {\n    /**\n     * Check if a datastore spec file exists.\n     *\n     */\n    exists () {\n      return store.has(specKey)\n    },\n    /**\n     * Get the current datastore spec.\n     *\n     * @returns {Promise<Uint8Array>}\n     */\n    async get () {\n      const buf = await store.get(specKey)\n      return JSON.parse(uint8ArrayToString(buf))\n    },\n    /**\n     * Set the datastore spec of the repo, writing it to the underlying store.\n     * TODO unclear on what the type should be or if it's required\n     *\n     * @param {any} spec\n     * @returns {Promise<void>}\n     */\n    async set (spec) {\n      return store.put(specKey, uint8ArrayFromString(JSON.stringify(sortKeys(spec, { deep: true }))))\n    }\n  }\n}\n","\nimport { Key } from 'interface-datastore/key'\nimport { fromString as uint8ArrayFromString } from 'uint8arrays/from-string'\n\nconst apiFile = new Key('api')\n\n/**\n *\n * @param {import('interface-datastore').Datastore} store\n */\nexport function apiAddr (store) {\n  return {\n    /**\n     * Get the current configuration from the repo.\n     *\n     * @returns {Promise<string>}\n     */\n    async get () {\n      const value = await store.get(apiFile)\n      return value && value.toString()\n    },\n    /**\n     * Set the current configuration for this repo.\n     * TODO: fix find the proper type or remove this API\n     *\n     * @param {string} value - the api address to be written\n     */\n    set (value) {\n      return store.put(apiFile, uint8ArrayFromString(value.toString()))\n    },\n    /**\n     * Deletes api file\n     */\n    delete () {\n      return store.delete(apiFile)\n    }\n  }\n}\n","'use strict'\n\n/**\n * Filters the passed (async) iterable by using the filter function\n *\n * @template T\n * @param {AsyncIterable<T>|Iterable<T>} source\n * @param {function(T):boolean|Promise<boolean>} fn\n */\nconst filter = async function * (source, fn) {\n  for await (const entry of source) {\n    if (await fn(entry)) {\n      yield entry\n    }\n  }\n}\n\nmodule.exports = filter\n","// ported from https://www.npmjs.com/package/fast-fifo\nclass FixedFIFO {\n    constructor(hwm) {\n        if (!(hwm > 0) || ((hwm - 1) & hwm) !== 0) {\n            throw new Error('Max size for a FixedFIFO should be a power of two');\n        }\n        this.buffer = new Array(hwm);\n        this.mask = hwm - 1;\n        this.top = 0;\n        this.btm = 0;\n        this.next = null;\n    }\n    push(data) {\n        if (this.buffer[this.top] !== undefined) {\n            return false;\n        }\n        this.buffer[this.top] = data;\n        this.top = (this.top + 1) & this.mask;\n        return true;\n    }\n    shift() {\n        const last = this.buffer[this.btm];\n        if (last === undefined) {\n            return undefined;\n        }\n        this.buffer[this.btm] = undefined;\n        this.btm = (this.btm + 1) & this.mask;\n        return last;\n    }\n    isEmpty() {\n        return this.buffer[this.btm] === undefined;\n    }\n}\nexport class FIFO {\n    constructor(options = {}) {\n        this.hwm = options.splitLimit ?? 16;\n        this.head = new FixedFIFO(this.hwm);\n        this.tail = this.head;\n        this.size = 0;\n    }\n    calculateSize(obj) {\n        if (obj?.byteLength != null) {\n            return obj.byteLength;\n        }\n        return 1;\n    }\n    push(val) {\n        if (val?.value != null) {\n            this.size += this.calculateSize(val.value);\n        }\n        if (!this.head.push(val)) {\n            const prev = this.head;\n            this.head = prev.next = new FixedFIFO(2 * this.head.buffer.length);\n            this.head.push(val);\n        }\n    }\n    shift() {\n        let val = this.tail.shift();\n        if (val === undefined && (this.tail.next != null)) {\n            const next = this.tail.next;\n            this.tail.next = null;\n            this.tail = next;\n            val = this.tail.shift();\n        }\n        if (val?.value != null) {\n            this.size -= this.calculateSize(val.value);\n        }\n        return val;\n    }\n    isEmpty() {\n        return this.head.isEmpty();\n    }\n}\n//# sourceMappingURL=fifo.js.map","/**\n * @packageDocumentation\n *\n * An iterable that you can push values into.\n *\n * @example\n *\n * ```js\n * import { pushable } from 'it-pushable'\n *\n * const source = pushable()\n *\n * setTimeout(() => source.push('hello'), 100)\n * setTimeout(() => source.push('world'), 200)\n * setTimeout(() => source.end(), 300)\n *\n * const start = Date.now()\n *\n * for await (const value of source) {\n *   console.log(`got \"${value}\" after ${Date.now() - start}ms`)\n * }\n * console.log(`done after ${Date.now() - start}ms`)\n *\n * // Output:\n * // got \"hello\" after 105ms\n * // got \"world\" after 207ms\n * // done after 309ms\n * ```\n *\n * @example\n *\n * ```js\n * import { pushableV } from 'it-pushable'\n * import all from 'it-all'\n *\n * const source = pushableV()\n *\n * source.push(1)\n * source.push(2)\n * source.push(3)\n * source.end()\n *\n * console.info(await all(source))\n *\n * // Output:\n * // [ [1, 2, 3] ]\n * ```\n */\nimport { FIFO } from './fifo.js';\nexport function pushable(options = {}) {\n    const getNext = (buffer) => {\n        const next = buffer.shift();\n        if (next == null) {\n            return { done: true };\n        }\n        if (next.error != null) {\n            throw next.error;\n        }\n        return {\n            done: next.done === true,\n            // @ts-expect-error\n            value: next.value\n        };\n    };\n    return _pushable(getNext, options);\n}\nexport function pushableV(options = {}) {\n    const getNext = (buffer) => {\n        let next;\n        const values = [];\n        while (!buffer.isEmpty()) {\n            next = buffer.shift();\n            if (next == null) {\n                break;\n            }\n            if (next.error != null) {\n                throw next.error;\n            }\n            if (next.done === false) {\n                // @ts-expect-error\n                values.push(next.value);\n            }\n        }\n        if (next == null) {\n            return { done: true };\n        }\n        return {\n            done: next.done === true,\n            value: values\n        };\n    };\n    return _pushable(getNext, options);\n}\nfunction _pushable(getNext, options) {\n    options = options ?? {};\n    let onEnd = options.onEnd;\n    let buffer = new FIFO();\n    let pushable;\n    let onNext;\n    let ended;\n    const waitNext = async () => {\n        if (!buffer.isEmpty()) {\n            return getNext(buffer);\n        }\n        if (ended) {\n            return { done: true };\n        }\n        return await new Promise((resolve, reject) => {\n            onNext = (next) => {\n                onNext = null;\n                buffer.push(next);\n                try {\n                    resolve(getNext(buffer));\n                }\n                catch (err) {\n                    reject(err);\n                }\n                return pushable;\n            };\n        });\n    };\n    const bufferNext = (next) => {\n        if (onNext != null) {\n            return onNext(next);\n        }\n        buffer.push(next);\n        return pushable;\n    };\n    const bufferError = (err) => {\n        buffer = new FIFO();\n        if (onNext != null) {\n            return onNext({ error: err });\n        }\n        buffer.push({ error: err });\n        return pushable;\n    };\n    const push = (value) => {\n        if (ended) {\n            return pushable;\n        }\n        // @ts-expect-error `byteLength` is not declared on PushType\n        if (options?.objectMode !== true && value?.byteLength == null) {\n            throw new Error('objectMode was not true but tried to push non-Uint8Array value');\n        }\n        return bufferNext({ done: false, value });\n    };\n    const end = (err) => {\n        if (ended)\n            return pushable;\n        ended = true;\n        return (err != null) ? bufferError(err) : bufferNext({ done: true });\n    };\n    const _return = () => {\n        buffer = new FIFO();\n        end();\n        return { done: true };\n    };\n    const _throw = (err) => {\n        end(err);\n        return { done: true };\n    };\n    pushable = {\n        [Symbol.asyncIterator]() { return this; },\n        next: waitNext,\n        return: _return,\n        throw: _throw,\n        push,\n        end,\n        get readableLength() {\n            return buffer.size;\n        }\n    };\n    if (onEnd == null) {\n        return pushable;\n    }\n    const _pushable = pushable;\n    pushable = {\n        [Symbol.asyncIterator]() { return this; },\n        next() {\n            return _pushable.next();\n        },\n        throw(err) {\n            _pushable.throw(err);\n            if (onEnd != null) {\n                onEnd(err);\n                onEnd = undefined;\n            }\n            return { done: true };\n        },\n        return() {\n            _pushable.return();\n            if (onEnd != null) {\n                onEnd();\n                onEnd = undefined;\n            }\n            return { done: true };\n        },\n        push,\n        end(err) {\n            _pushable.end(err);\n            if (onEnd != null) {\n                onEnd(err);\n                onEnd = undefined;\n            }\n            return pushable;\n        },\n        get readableLength() {\n            return _pushable.readableLength;\n        }\n    };\n    return pushable;\n}\n//# sourceMappingURL=index.js.map","'use strict'\n\n/**\n * Drains an (async) iterable discarding its' content and does not return\n * anything.\n *\n * @template T\n * @param {AsyncIterable<T>|Iterable<T>} source\n * @returns {Promise<void>}\n */\nconst drain = async (source) => {\n  for await (const _ of source) { } // eslint-disable-line no-unused-vars,no-empty\n}\n\nmodule.exports = drain\n","var encode_1 = encode;\nvar MSB = 128, REST = 127, MSBALL = ~REST, INT = Math.pow(2, 31);\nfunction encode(num, out, offset) {\n  out = out || [];\n  offset = offset || 0;\n  var oldOffset = offset;\n  while (num >= INT) {\n    out[offset++] = num & 255 | MSB;\n    num /= 128;\n  }\n  while (num & MSBALL) {\n    out[offset++] = num & 255 | MSB;\n    num >>>= 7;\n  }\n  out[offset] = num | 0;\n  encode.bytes = offset - oldOffset + 1;\n  return out;\n}\nvar decode = read;\nvar MSB$1 = 128, REST$1 = 127;\nfunction read(buf, offset) {\n  var res = 0, offset = offset || 0, shift = 0, counter = offset, b, l = buf.length;\n  do {\n    if (counter >= l) {\n      read.bytes = 0;\n      throw new RangeError('Could not decode varint');\n    }\n    b = buf[counter++];\n    res += shift < 28 ? (b & REST$1) << shift : (b & REST$1) * Math.pow(2, shift);\n    shift += 7;\n  } while (b >= MSB$1);\n  read.bytes = counter - offset;\n  return res;\n}\nvar N1 = Math.pow(2, 7);\nvar N2 = Math.pow(2, 14);\nvar N3 = Math.pow(2, 21);\nvar N4 = Math.pow(2, 28);\nvar N5 = Math.pow(2, 35);\nvar N6 = Math.pow(2, 42);\nvar N7 = Math.pow(2, 49);\nvar N8 = Math.pow(2, 56);\nvar N9 = Math.pow(2, 63);\nvar length = function (value) {\n  return value < N1 ? 1 : value < N2 ? 2 : value < N3 ? 3 : value < N4 ? 4 : value < N5 ? 5 : value < N6 ? 6 : value < N7 ? 7 : value < N8 ? 8 : value < N9 ? 9 : 10;\n};\nvar varint = {\n  encode: encode_1,\n  decode: decode,\n  encodingLength: length\n};\nvar _brrp_varint = varint;\nexport default _brrp_varint;","import varint from '../vendor/varint.js';\nexport const decode = (data, offset = 0) => {\n  const code = varint.decode(data, offset);\n  return [\n    code,\n    varint.decode.bytes\n  ];\n};\nexport const encodeTo = (int, target, offset = 0) => {\n  varint.encode(int, target, offset);\n  return target;\n};\nexport const encodingLength = int => {\n  return varint.encodingLength(int);\n};","const empty = new Uint8Array(0);\nconst toHex = d => d.reduce((hex, byte) => hex + byte.toString(16).padStart(2, '0'), '');\nconst fromHex = hex => {\n  const hexes = hex.match(/../g);\n  return hexes ? new Uint8Array(hexes.map(b => parseInt(b, 16))) : empty;\n};\nconst equals = (aa, bb) => {\n  if (aa === bb)\n    return true;\n  if (aa.byteLength !== bb.byteLength) {\n    return false;\n  }\n  for (let ii = 0; ii < aa.byteLength; ii++) {\n    if (aa[ii] !== bb[ii]) {\n      return false;\n    }\n  }\n  return true;\n};\nconst coerce = o => {\n  if (o instanceof Uint8Array && o.constructor.name === 'Uint8Array')\n    return o;\n  if (o instanceof ArrayBuffer)\n    return new Uint8Array(o);\n  if (ArrayBuffer.isView(o)) {\n    return new Uint8Array(o.buffer, o.byteOffset, o.byteLength);\n  }\n  throw new Error('Unknown type, must be binary type');\n};\nconst isBinary = o => o instanceof ArrayBuffer || ArrayBuffer.isView(o);\nconst fromString = str => new TextEncoder().encode(str);\nconst toString = b => new TextDecoder().decode(b);\nexport {\n  equals,\n  coerce,\n  isBinary,\n  fromHex,\n  toHex,\n  fromString,\n  toString,\n  empty\n};","import {\n  coerce,\n  equals as equalBytes\n} from '../bytes.js';\nimport * as varint from '../varint.js';\nexport const create = (code, digest) => {\n  const size = digest.byteLength;\n  const sizeOffset = varint.encodingLength(code);\n  const digestOffset = sizeOffset + varint.encodingLength(size);\n  const bytes = new Uint8Array(digestOffset + size);\n  varint.encodeTo(code, bytes, 0);\n  varint.encodeTo(size, bytes, sizeOffset);\n  bytes.set(digest, digestOffset);\n  return new Digest(code, size, digest, bytes);\n};\nexport const decode = multihash => {\n  const bytes = coerce(multihash);\n  const [code, sizeOffset] = varint.decode(bytes);\n  const [size, digestOffset] = varint.decode(bytes.subarray(sizeOffset));\n  const digest = bytes.subarray(sizeOffset + digestOffset);\n  if (digest.byteLength !== size) {\n    throw new Error('Incorrect length');\n  }\n  return new Digest(code, size, digest, bytes);\n};\nexport const equals = (a, b) => {\n  if (a === b) {\n    return true;\n  } else {\n    return a.code === b.code && a.size === b.size && equalBytes(a.bytes, b.bytes);\n  }\n};\nexport class Digest {\n  constructor(code, size, digest, bytes) {\n    this.code = code;\n    this.size = size;\n    this.digest = digest;\n    this.bytes = bytes;\n  }\n}","function base(ALPHABET, name) {\n  if (ALPHABET.length >= 255) {\n    throw new TypeError('Alphabet too long');\n  }\n  var BASE_MAP = new Uint8Array(256);\n  for (var j = 0; j < BASE_MAP.length; j++) {\n    BASE_MAP[j] = 255;\n  }\n  for (var i = 0; i < ALPHABET.length; i++) {\n    var x = ALPHABET.charAt(i);\n    var xc = x.charCodeAt(0);\n    if (BASE_MAP[xc] !== 255) {\n      throw new TypeError(x + ' is ambiguous');\n    }\n    BASE_MAP[xc] = i;\n  }\n  var BASE = ALPHABET.length;\n  var LEADER = ALPHABET.charAt(0);\n  var FACTOR = Math.log(BASE) / Math.log(256);\n  var iFACTOR = Math.log(256) / Math.log(BASE);\n  function encode(source) {\n    if (source instanceof Uint8Array);\n    else if (ArrayBuffer.isView(source)) {\n      source = new Uint8Array(source.buffer, source.byteOffset, source.byteLength);\n    } else if (Array.isArray(source)) {\n      source = Uint8Array.from(source);\n    }\n    if (!(source instanceof Uint8Array)) {\n      throw new TypeError('Expected Uint8Array');\n    }\n    if (source.length === 0) {\n      return '';\n    }\n    var zeroes = 0;\n    var length = 0;\n    var pbegin = 0;\n    var pend = source.length;\n    while (pbegin !== pend && source[pbegin] === 0) {\n      pbegin++;\n      zeroes++;\n    }\n    var size = (pend - pbegin) * iFACTOR + 1 >>> 0;\n    var b58 = new Uint8Array(size);\n    while (pbegin !== pend) {\n      var carry = source[pbegin];\n      var i = 0;\n      for (var it1 = size - 1; (carry !== 0 || i < length) && it1 !== -1; it1--, i++) {\n        carry += 256 * b58[it1] >>> 0;\n        b58[it1] = carry % BASE >>> 0;\n        carry = carry / BASE >>> 0;\n      }\n      if (carry !== 0) {\n        throw new Error('Non-zero carry');\n      }\n      length = i;\n      pbegin++;\n    }\n    var it2 = size - length;\n    while (it2 !== size && b58[it2] === 0) {\n      it2++;\n    }\n    var str = LEADER.repeat(zeroes);\n    for (; it2 < size; ++it2) {\n      str += ALPHABET.charAt(b58[it2]);\n    }\n    return str;\n  }\n  function decodeUnsafe(source) {\n    if (typeof source !== 'string') {\n      throw new TypeError('Expected String');\n    }\n    if (source.length === 0) {\n      return new Uint8Array();\n    }\n    var psz = 0;\n    if (source[psz] === ' ') {\n      return;\n    }\n    var zeroes = 0;\n    var length = 0;\n    while (source[psz] === LEADER) {\n      zeroes++;\n      psz++;\n    }\n    var size = (source.length - psz) * FACTOR + 1 >>> 0;\n    var b256 = new Uint8Array(size);\n    while (source[psz]) {\n      var carry = BASE_MAP[source.charCodeAt(psz)];\n      if (carry === 255) {\n        return;\n      }\n      var i = 0;\n      for (var it3 = size - 1; (carry !== 0 || i < length) && it3 !== -1; it3--, i++) {\n        carry += BASE * b256[it3] >>> 0;\n        b256[it3] = carry % 256 >>> 0;\n        carry = carry / 256 >>> 0;\n      }\n      if (carry !== 0) {\n        throw new Error('Non-zero carry');\n      }\n      length = i;\n      psz++;\n    }\n    if (source[psz] === ' ') {\n      return;\n    }\n    var it4 = size - length;\n    while (it4 !== size && b256[it4] === 0) {\n      it4++;\n    }\n    var vch = new Uint8Array(zeroes + (size - it4));\n    var j = zeroes;\n    while (it4 !== size) {\n      vch[j++] = b256[it4++];\n    }\n    return vch;\n  }\n  function decode(string) {\n    var buffer = decodeUnsafe(string);\n    if (buffer) {\n      return buffer;\n    }\n    throw new Error(`Non-${ name } character`);\n  }\n  return {\n    encode: encode,\n    decodeUnsafe: decodeUnsafe,\n    decode: decode\n  };\n}\nvar src = base;\nvar _brrp__multiformats_scope_baseX = src;\nexport default _brrp__multiformats_scope_baseX;","import basex from '../../vendor/base-x.js';\nimport { coerce } from '../bytes.js';\nclass Encoder {\n  constructor(name, prefix, baseEncode) {\n    this.name = name;\n    this.prefix = prefix;\n    this.baseEncode = baseEncode;\n  }\n  encode(bytes) {\n    if (bytes instanceof Uint8Array) {\n      return `${ this.prefix }${ this.baseEncode(bytes) }`;\n    } else {\n      throw Error('Unknown type, must be binary type');\n    }\n  }\n}\nclass Decoder {\n  constructor(name, prefix, baseDecode) {\n    this.name = name;\n    this.prefix = prefix;\n    if (prefix.codePointAt(0) === undefined) {\n      throw new Error('Invalid prefix character');\n    }\n    this.prefixCodePoint = prefix.codePointAt(0);\n    this.baseDecode = baseDecode;\n  }\n  decode(text) {\n    if (typeof text === 'string') {\n      if (text.codePointAt(0) !== this.prefixCodePoint) {\n        throw Error(`Unable to decode multibase string ${ JSON.stringify(text) }, ${ this.name } decoder only supports inputs prefixed with ${ this.prefix }`);\n      }\n      return this.baseDecode(text.slice(this.prefix.length));\n    } else {\n      throw Error('Can only multibase decode strings');\n    }\n  }\n  or(decoder) {\n    return or(this, decoder);\n  }\n}\nclass ComposedDecoder {\n  constructor(decoders) {\n    this.decoders = decoders;\n  }\n  or(decoder) {\n    return or(this, decoder);\n  }\n  decode(input) {\n    const prefix = input[0];\n    const decoder = this.decoders[prefix];\n    if (decoder) {\n      return decoder.decode(input);\n    } else {\n      throw RangeError(`Unable to decode multibase string ${ JSON.stringify(input) }, only inputs prefixed with ${ Object.keys(this.decoders) } are supported`);\n    }\n  }\n}\nexport const or = (left, right) => new ComposedDecoder({\n  ...left.decoders || { [left.prefix]: left },\n  ...right.decoders || { [right.prefix]: right }\n});\nexport class Codec {\n  constructor(name, prefix, baseEncode, baseDecode) {\n    this.name = name;\n    this.prefix = prefix;\n    this.baseEncode = baseEncode;\n    this.baseDecode = baseDecode;\n    this.encoder = new Encoder(name, prefix, baseEncode);\n    this.decoder = new Decoder(name, prefix, baseDecode);\n  }\n  encode(input) {\n    return this.encoder.encode(input);\n  }\n  decode(input) {\n    return this.decoder.decode(input);\n  }\n}\nexport const from = ({name, prefix, encode, decode}) => new Codec(name, prefix, encode, decode);\nexport const baseX = ({prefix, name, alphabet}) => {\n  const {encode, decode} = basex(alphabet, name);\n  return from({\n    prefix,\n    name,\n    encode,\n    decode: text => coerce(decode(text))\n  });\n};\nconst decode = (string, alphabet, bitsPerChar, name) => {\n  const codes = {};\n  for (let i = 0; i < alphabet.length; ++i) {\n    codes[alphabet[i]] = i;\n  }\n  let end = string.length;\n  while (string[end - 1] === '=') {\n    --end;\n  }\n  const out = new Uint8Array(end * bitsPerChar / 8 | 0);\n  let bits = 0;\n  let buffer = 0;\n  let written = 0;\n  for (let i = 0; i < end; ++i) {\n    const value = codes[string[i]];\n    if (value === undefined) {\n      throw new SyntaxError(`Non-${ name } character`);\n    }\n    buffer = buffer << bitsPerChar | value;\n    bits += bitsPerChar;\n    if (bits >= 8) {\n      bits -= 8;\n      out[written++] = 255 & buffer >> bits;\n    }\n  }\n  if (bits >= bitsPerChar || 255 & buffer << 8 - bits) {\n    throw new SyntaxError('Unexpected end of data');\n  }\n  return out;\n};\nconst encode = (data, alphabet, bitsPerChar) => {\n  const pad = alphabet[alphabet.length - 1] === '=';\n  const mask = (1 << bitsPerChar) - 1;\n  let out = '';\n  let bits = 0;\n  let buffer = 0;\n  for (let i = 0; i < data.length; ++i) {\n    buffer = buffer << 8 | data[i];\n    bits += 8;\n    while (bits > bitsPerChar) {\n      bits -= bitsPerChar;\n      out += alphabet[mask & buffer >> bits];\n    }\n  }\n  if (bits) {\n    out += alphabet[mask & buffer << bitsPerChar - bits];\n  }\n  if (pad) {\n    while (out.length * bitsPerChar & 7) {\n      out += '=';\n    }\n  }\n  return out;\n};\nexport const rfc4648 = ({name, prefix, bitsPerChar, alphabet}) => {\n  return from({\n    prefix,\n    name,\n    encode(input) {\n      return encode(input, alphabet, bitsPerChar);\n    },\n    decode(input) {\n      return decode(input, alphabet, bitsPerChar, name);\n    }\n  });\n};","import { baseX } from './base.js';\nexport const base58btc = baseX({\n  name: 'base58btc',\n  prefix: 'z',\n  alphabet: '123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz'\n});\nexport const base58flickr = baseX({\n  name: 'base58flickr',\n  prefix: 'Z',\n  alphabet: '123456789abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ'\n});","import { rfc4648 } from './base.js';\nexport const base32 = rfc4648({\n  prefix: 'b',\n  name: 'base32',\n  alphabet: 'abcdefghijklmnopqrstuvwxyz234567',\n  bitsPerChar: 5\n});\nexport const base32upper = rfc4648({\n  prefix: 'B',\n  name: 'base32upper',\n  alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZ234567',\n  bitsPerChar: 5\n});\nexport const base32pad = rfc4648({\n  prefix: 'c',\n  name: 'base32pad',\n  alphabet: 'abcdefghijklmnopqrstuvwxyz234567=',\n  bitsPerChar: 5\n});\nexport const base32padupper = rfc4648({\n  prefix: 'C',\n  name: 'base32padupper',\n  alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZ234567=',\n  bitsPerChar: 5\n});\nexport const base32hex = rfc4648({\n  prefix: 'v',\n  name: 'base32hex',\n  alphabet: '0123456789abcdefghijklmnopqrstuv',\n  bitsPerChar: 5\n});\nexport const base32hexupper = rfc4648({\n  prefix: 'V',\n  name: 'base32hexupper',\n  alphabet: '0123456789ABCDEFGHIJKLMNOPQRSTUV',\n  bitsPerChar: 5\n});\nexport const base32hexpad = rfc4648({\n  prefix: 't',\n  name: 'base32hexpad',\n  alphabet: '0123456789abcdefghijklmnopqrstuv=',\n  bitsPerChar: 5\n});\nexport const base32hexpadupper = rfc4648({\n  prefix: 'T',\n  name: 'base32hexpadupper',\n  alphabet: '0123456789ABCDEFGHIJKLMNOPQRSTUV=',\n  bitsPerChar: 5\n});\nexport const base32z = rfc4648({\n  prefix: 'h',\n  name: 'base32z',\n  alphabet: 'ybndrfg8ejkmcpqxot1uwisza345h769',\n  bitsPerChar: 5\n});","import * as varint from './varint.js';\nimport * as Digest from './hashes/digest.js';\nimport { base58btc } from './bases/base58.js';\nimport { base32 } from './bases/base32.js';\nimport { coerce } from './bytes.js';\nexport class CID {\n  constructor(version, code, multihash, bytes) {\n    this.code = code;\n    this.version = version;\n    this.multihash = multihash;\n    this.bytes = bytes;\n    this.byteOffset = bytes.byteOffset;\n    this.byteLength = bytes.byteLength;\n    this.asCID = this;\n    this._baseCache = new Map();\n    Object.defineProperties(this, {\n      byteOffset: hidden,\n      byteLength: hidden,\n      code: readonly,\n      version: readonly,\n      multihash: readonly,\n      bytes: readonly,\n      _baseCache: hidden,\n      asCID: hidden\n    });\n  }\n  toV0() {\n    switch (this.version) {\n    case 0: {\n        return this;\n      }\n    default: {\n        const {code, multihash} = this;\n        if (code !== DAG_PB_CODE) {\n          throw new Error('Cannot convert a non dag-pb CID to CIDv0');\n        }\n        if (multihash.code !== SHA_256_CODE) {\n          throw new Error('Cannot convert non sha2-256 multihash CID to CIDv0');\n        }\n        return CID.createV0(multihash);\n      }\n    }\n  }\n  toV1() {\n    switch (this.version) {\n    case 0: {\n        const {code, digest} = this.multihash;\n        const multihash = Digest.create(code, digest);\n        return CID.createV1(this.code, multihash);\n      }\n    case 1: {\n        return this;\n      }\n    default: {\n        throw Error(`Can not convert CID version ${ this.version } to version 0. This is a bug please report`);\n      }\n    }\n  }\n  equals(other) {\n    return other && this.code === other.code && this.version === other.version && Digest.equals(this.multihash, other.multihash);\n  }\n  toString(base) {\n    const {bytes, version, _baseCache} = this;\n    switch (version) {\n    case 0:\n      return toStringV0(bytes, _baseCache, base || base58btc.encoder);\n    default:\n      return toStringV1(bytes, _baseCache, base || base32.encoder);\n    }\n  }\n  toJSON() {\n    return {\n      code: this.code,\n      version: this.version,\n      hash: this.multihash.bytes\n    };\n  }\n  get [Symbol.toStringTag]() {\n    return 'CID';\n  }\n  [Symbol.for('nodejs.util.inspect.custom')]() {\n    return 'CID(' + this.toString() + ')';\n  }\n  static isCID(value) {\n    deprecate(/^0\\.0/, IS_CID_DEPRECATION);\n    return !!(value && (value[cidSymbol] || value.asCID === value));\n  }\n  get toBaseEncodedString() {\n    throw new Error('Deprecated, use .toString()');\n  }\n  get codec() {\n    throw new Error('\"codec\" property is deprecated, use integer \"code\" property instead');\n  }\n  get buffer() {\n    throw new Error('Deprecated .buffer property, use .bytes to get Uint8Array instead');\n  }\n  get multibaseName() {\n    throw new Error('\"multibaseName\" property is deprecated');\n  }\n  get prefix() {\n    throw new Error('\"prefix\" property is deprecated');\n  }\n  static asCID(value) {\n    if (value instanceof CID) {\n      return value;\n    } else if (value != null && value.asCID === value) {\n      const {version, code, multihash, bytes} = value;\n      return new CID(version, code, multihash, bytes || encodeCID(version, code, multihash.bytes));\n    } else if (value != null && value[cidSymbol] === true) {\n      const {version, multihash, code} = value;\n      const digest = Digest.decode(multihash);\n      return CID.create(version, code, digest);\n    } else {\n      return null;\n    }\n  }\n  static create(version, code, digest) {\n    if (typeof code !== 'number') {\n      throw new Error('String codecs are no longer supported');\n    }\n    switch (version) {\n    case 0: {\n        if (code !== DAG_PB_CODE) {\n          throw new Error(`Version 0 CID must use dag-pb (code: ${ DAG_PB_CODE }) block encoding`);\n        } else {\n          return new CID(version, code, digest, digest.bytes);\n        }\n      }\n    case 1: {\n        const bytes = encodeCID(version, code, digest.bytes);\n        return new CID(version, code, digest, bytes);\n      }\n    default: {\n        throw new Error('Invalid version');\n      }\n    }\n  }\n  static createV0(digest) {\n    return CID.create(0, DAG_PB_CODE, digest);\n  }\n  static createV1(code, digest) {\n    return CID.create(1, code, digest);\n  }\n  static decode(bytes) {\n    const [cid, remainder] = CID.decodeFirst(bytes);\n    if (remainder.length) {\n      throw new Error('Incorrect length');\n    }\n    return cid;\n  }\n  static decodeFirst(bytes) {\n    const specs = CID.inspectBytes(bytes);\n    const prefixSize = specs.size - specs.multihashSize;\n    const multihashBytes = coerce(bytes.subarray(prefixSize, prefixSize + specs.multihashSize));\n    if (multihashBytes.byteLength !== specs.multihashSize) {\n      throw new Error('Incorrect length');\n    }\n    const digestBytes = multihashBytes.subarray(specs.multihashSize - specs.digestSize);\n    const digest = new Digest.Digest(specs.multihashCode, specs.digestSize, digestBytes, multihashBytes);\n    const cid = specs.version === 0 ? CID.createV0(digest) : CID.createV1(specs.codec, digest);\n    return [\n      cid,\n      bytes.subarray(specs.size)\n    ];\n  }\n  static inspectBytes(initialBytes) {\n    let offset = 0;\n    const next = () => {\n      const [i, length] = varint.decode(initialBytes.subarray(offset));\n      offset += length;\n      return i;\n    };\n    let version = next();\n    let codec = DAG_PB_CODE;\n    if (version === 18) {\n      version = 0;\n      offset = 0;\n    } else if (version === 1) {\n      codec = next();\n    }\n    if (version !== 0 && version !== 1) {\n      throw new RangeError(`Invalid CID version ${ version }`);\n    }\n    const prefixSize = offset;\n    const multihashCode = next();\n    const digestSize = next();\n    const size = offset + digestSize;\n    const multihashSize = size - prefixSize;\n    return {\n      version,\n      codec,\n      multihashCode,\n      digestSize,\n      multihashSize,\n      size\n    };\n  }\n  static parse(source, base) {\n    const [prefix, bytes] = parseCIDtoBytes(source, base);\n    const cid = CID.decode(bytes);\n    cid._baseCache.set(prefix, source);\n    return cid;\n  }\n}\nconst parseCIDtoBytes = (source, base) => {\n  switch (source[0]) {\n  case 'Q': {\n      const decoder = base || base58btc;\n      return [\n        base58btc.prefix,\n        decoder.decode(`${ base58btc.prefix }${ source }`)\n      ];\n    }\n  case base58btc.prefix: {\n      const decoder = base || base58btc;\n      return [\n        base58btc.prefix,\n        decoder.decode(source)\n      ];\n    }\n  case base32.prefix: {\n      const decoder = base || base32;\n      return [\n        base32.prefix,\n        decoder.decode(source)\n      ];\n    }\n  default: {\n      if (base == null) {\n        throw Error('To parse non base32 or base58btc encoded CID multibase decoder must be provided');\n      }\n      return [\n        source[0],\n        base.decode(source)\n      ];\n    }\n  }\n};\nconst toStringV0 = (bytes, cache, base) => {\n  const {prefix} = base;\n  if (prefix !== base58btc.prefix) {\n    throw Error(`Cannot string encode V0 in ${ base.name } encoding`);\n  }\n  const cid = cache.get(prefix);\n  if (cid == null) {\n    const cid = base.encode(bytes).slice(1);\n    cache.set(prefix, cid);\n    return cid;\n  } else {\n    return cid;\n  }\n};\nconst toStringV1 = (bytes, cache, base) => {\n  const {prefix} = base;\n  const cid = cache.get(prefix);\n  if (cid == null) {\n    const cid = base.encode(bytes);\n    cache.set(prefix, cid);\n    return cid;\n  } else {\n    return cid;\n  }\n};\nconst DAG_PB_CODE = 112;\nconst SHA_256_CODE = 18;\nconst encodeCID = (version, code, multihash) => {\n  const codeOffset = varint.encodingLength(version);\n  const hashOffset = codeOffset + varint.encodingLength(code);\n  const bytes = new Uint8Array(hashOffset + multihash.byteLength);\n  varint.encodeTo(version, bytes, 0);\n  varint.encodeTo(code, bytes, codeOffset);\n  bytes.set(multihash, hashOffset);\n  return bytes;\n};\nconst cidSymbol = Symbol.for('@ipld/js-cid/CID');\nconst readonly = {\n  writable: false,\n  configurable: false,\n  enumerable: true\n};\nconst hidden = {\n  writable: false,\n  enumerable: false,\n  configurable: false\n};\nconst version = '0.0.0-dev';\nconst deprecate = (range, message) => {\n  if (range.test(version)) {\n    console.warn(message);\n  } else {\n    throw new Error(message);\n  }\n};\nconst IS_CID_DEPRECATION = `CID.isCID(v) is deprecated and will be removed in the next major release.\nFollowing code pattern:\n\nif (CID.isCID(value)) {\n  doSomethingWithCID(value)\n}\n\nIs replaced with:\n\nconst cid = CID.asCID(value)\nif (cid) {\n  // Make sure to use cid instead of value\n  doSomethingWithCID(cid)\n}\n`;","import { coerce } from '../bytes.js';\nimport * as Digest from './digest.js';\nconst code = 0;\nconst name = 'identity';\nconst encode = coerce;\nconst digest = input => Digest.create(code, encode(input));\nexport const identity = {\n  code,\n  name,\n  encode,\n  digest\n};","\nimport filter from 'it-filter'\nimport { pushable } from 'it-pushable'\nimport drain from 'it-drain'\nimport { CID } from 'multiformats/cid'\nimport errCode from 'err-code'\nimport { identity } from 'multiformats/hashes/identity'\n\n/**\n * @typedef {import('interface-datastore').Query} Query\n * @typedef {import('interface-datastore').Datastore} Datastore\n * @typedef {import('interface-datastore').Options} DatastoreOptions\n * @typedef {import('interface-blockstore').Blockstore} Blockstore\n */\n\n/**\n * @param {Blockstore} store\n * @returns {Blockstore}\n */\nexport function createIdStore (store) {\n  return {\n    open () {\n      return store.open()\n    },\n\n    close () {\n      return store.close()\n    },\n\n    query (query, options) {\n      return store.query(query, options)\n    },\n\n    queryKeys (query, options) {\n      return store.queryKeys(query, options)\n    },\n\n    async get (cid, options) {\n      const extracted = extractContents(cid)\n      if (extracted.isIdentity) {\n        return Promise.resolve(extracted.digest)\n      }\n      return store.get(cid, options)\n    },\n\n    async * getMany (cids, options) {\n      for await (const cid of cids) {\n        yield this.get(cid, options)\n      }\n    },\n\n    async put (cid, buf, options) {\n      const { isIdentity } = extractContents(cid)\n\n      if (isIdentity) {\n        return\n      }\n\n      await store.put(cid, buf, options)\n    },\n\n    async * putMany (pairs, options) {\n      // in order to return all blocks. we're going to assemble a seperate iterable\n      // return rather than return the resolves of store.putMany using the same\n      // process used by blockstore.putMany\n      const output = pushable({\n        objectMode: true\n      })\n\n      // process.nextTick runs on the microtask queue, setImmediate runs on the next\n      // event loop iteration so is slower. Use process.nextTick if it is available.\n      const runner = globalThis.process && globalThis.process.nextTick ? globalThis.process.nextTick : (globalThis.setImmediate || globalThis.setTimeout)\n\n      runner(async () => {\n        try {\n          await drain(store.putMany(async function * () {\n            for await (const { key, value } of pairs) {\n              if (!extractContents(key).isIdentity) {\n                yield { key, value }\n              }\n\n              // if non identity blocks successfully write, blocks are included in output\n              output.push({ key, value })\n            }\n          }()))\n\n          output.end()\n        } catch (/** @type {any} */ err) {\n          output.end(err)\n        }\n      })\n\n      yield * output\n    },\n\n    has (cid, options) {\n      const { isIdentity } = extractContents(cid)\n      if (isIdentity) {\n        return Promise.resolve(true)\n      }\n      return store.has(cid, options)\n    },\n\n    delete (cid, options) {\n      const { isIdentity } = extractContents(cid)\n      if (isIdentity) {\n        return Promise.resolve()\n      }\n      return store.delete(cid, options)\n    },\n\n    deleteMany (cids, options) {\n      return store.deleteMany(filter(cids, (cid) => !extractContents(cid).isIdentity), options)\n    },\n\n    batch () {\n      const batch = store.batch()\n\n      return {\n        put (cid, buf) {\n          const { isIdentity } = extractContents(cid)\n\n          if (isIdentity) {\n            return\n          }\n\n          batch.put(cid, buf)\n        },\n        delete (cid) {\n          const { isIdentity } = extractContents(cid)\n\n          if (isIdentity) {\n            return\n          }\n\n          batch.delete(cid)\n        },\n        commit: (options) => {\n          return batch.commit(options)\n        }\n      }\n    }\n  }\n}\n\n/**\n * @param {CID} k\n * @returns {{ isIdentity: false } | { isIdentity: true, digest: Uint8Array}}\n */\nfunction extractContents (k) {\n  const cid = CID.asCID(k)\n\n  if (cid == null) {\n    throw errCode(new Error('Not a valid cid'), 'ERR_INVALID_CID')\n  }\n\n  if (cid.multihash.code !== identity.code) {\n    return {\n      isIdentity: false\n    }\n  }\n\n  return {\n    isIdentity: true,\n    digest: cid.multihash.digest\n  }\n}\n","\nimport { LockExistsError } from '../errors.js'\nimport debug from 'debug'\n\nconst log = debug('ipfs:repo:lock:memory')\nconst lockFile = 'repo.lock'\n\n/** @type {Record<string,boolean>} */\nconst LOCKS = {}\n\n/**\n * @typedef {import('../types').LockCloser} LockCloser\n */\n\n/**\n * Lock the repo in the given dir.\n *\n * @param {string} dir\n * @returns {Promise<LockCloser>}\n */\nasync function lock (dir) {\n  const file = dir + '/' + lockFile\n  log('locking %s', file)\n\n  if (LOCKS[file] === true) {\n    throw new LockExistsError(`Lock already being held for file: ${file}`)\n  }\n\n  LOCKS[file] = true\n  const closer = {\n    async close () {\n      if (LOCKS[file]) {\n        delete LOCKS[file]\n      }\n    }\n  }\n  return closer\n}\n\n/**\n * Check if the repo in the given directory is locked.\n *\n * @param {string} dir\n * @returns {Promise<boolean>}\n */\nasync function locked (dir) {\n  const file = dir + '/' + lockFile\n  log(`checking lock: ${file}`)\n\n  return Boolean(LOCKS[file])\n}\n\nexport const MemoryLock = {\n  lock,\n  locked\n}\n","import { MemoryLock } from './locks/memory.js'\n\n/**\n * @type {Partial<import('./types').Options>}\n */\nexport default {\n  autoMigrate: true,\n  onMigrationProgress: () => {},\n  repoOwner: true,\n  repoLock: MemoryLock\n}\n","\n// Default configuration for the datastore spec in node.js\nexport default {\n  Spec: {\n    type: 'mount',\n    mounts: [\n      {\n        mountpoint: '/blocks',\n        type: 'measure',\n        prefix: 'flatfs.datastore',\n        child: {\n          type: 'flatfs',\n          path: 'blocks',\n          sync: true,\n          shardFunc: '/repo/flatfs/shard/v1/next-to-last/2'\n        }\n      },\n      {\n        mountpoint: '/',\n        type: 'measure',\n        prefix: 'leveldb.datastore',\n        child: {\n          type: 'levelds',\n          path: 'datastore',\n          compression: 'none'\n        }\n      }\n    ]\n  }\n}\n","'use strict'\n\n/**\n * Returns the first result from an (async) iterable, unless empty, in which\n * case returns `undefined`.\n *\n * @template T\n * @param {AsyncIterable<T>|Iterable<T>} source\n */\nconst first = async (source) => {\n  for await (const entry of source) { // eslint-disable-line no-unreachable-loop\n    return entry\n  }\n\n  return undefined\n}\n\nmodule.exports = first\n","import {\n  bytes as binary,\n  CID\n} from './index.js';\nconst readonly = ({enumerable = true, configurable = false} = {}) => ({\n  enumerable,\n  configurable,\n  writable: false\n});\nconst links = function* (source, base) {\n  if (source == null)\n    return;\n  if (source instanceof Uint8Array)\n    return;\n  for (const [key, value] of Object.entries(source)) {\n    const path = [\n      ...base,\n      key\n    ];\n    if (value != null && typeof value === 'object') {\n      if (Array.isArray(value)) {\n        for (const [index, element] of value.entries()) {\n          const elementPath = [\n            ...path,\n            index\n          ];\n          const cid = CID.asCID(element);\n          if (cid) {\n            yield [\n              elementPath.join('/'),\n              cid\n            ];\n          } else if (typeof element === 'object') {\n            yield* links(element, elementPath);\n          }\n        }\n      } else {\n        const cid = CID.asCID(value);\n        if (cid) {\n          yield [\n            path.join('/'),\n            cid\n          ];\n        } else {\n          yield* links(value, path);\n        }\n      }\n    }\n  }\n};\nconst tree = function* (source, base) {\n  if (source == null)\n    return;\n  for (const [key, value] of Object.entries(source)) {\n    const path = [\n      ...base,\n      key\n    ];\n    yield path.join('/');\n    if (value != null && !(value instanceof Uint8Array) && typeof value === 'object' && !CID.asCID(value)) {\n      if (Array.isArray(value)) {\n        for (const [index, element] of value.entries()) {\n          const elementPath = [\n            ...path,\n            index\n          ];\n          yield elementPath.join('/');\n          if (typeof element === 'object' && !CID.asCID(element)) {\n            yield* tree(element, elementPath);\n          }\n        }\n      } else {\n        yield* tree(value, path);\n      }\n    }\n  }\n};\nconst get = (source, path) => {\n  let node = source;\n  for (const [index, key] of path.entries()) {\n    node = node[key];\n    if (node == null) {\n      throw new Error(`Object has no property at ${ path.slice(0, index + 1).map(part => `[${ JSON.stringify(part) }]`).join('') }`);\n    }\n    const cid = CID.asCID(node);\n    if (cid) {\n      return {\n        value: cid,\n        remaining: path.slice(index + 1).join('/')\n      };\n    }\n  }\n  return { value: node };\n};\nclass Block {\n  constructor({cid, bytes, value}) {\n    if (!cid || !bytes || typeof value === 'undefined')\n      throw new Error('Missing required argument');\n    this.cid = cid;\n    this.bytes = bytes;\n    this.value = value;\n    this.asBlock = this;\n    Object.defineProperties(this, {\n      cid: readonly(),\n      bytes: readonly(),\n      value: readonly(),\n      asBlock: readonly()\n    });\n  }\n  links() {\n    return links(this.value, []);\n  }\n  tree() {\n    return tree(this.value, []);\n  }\n  get(path = '/') {\n    return get(this.value, path.split('/').filter(Boolean));\n  }\n}\nconst encode = async ({value, codec, hasher}) => {\n  if (typeof value === 'undefined')\n    throw new Error('Missing required argument \"value\"');\n  if (!codec || !hasher)\n    throw new Error('Missing required argument: codec or hasher');\n  const bytes = codec.encode(value);\n  const hash = await hasher.digest(bytes);\n  const cid = CID.create(1, codec.code, hash);\n  return new Block({\n    value,\n    bytes,\n    cid\n  });\n};\nconst decode = async ({bytes, codec, hasher}) => {\n  if (!bytes)\n    throw new Error('Missing required argument \"bytes\"');\n  if (!codec || !hasher)\n    throw new Error('Missing required argument: codec or hasher');\n  const value = codec.decode(bytes);\n  const hash = await hasher.digest(bytes);\n  const cid = CID.create(1, codec.code, hash);\n  return new Block({\n    value,\n    bytes,\n    cid\n  });\n};\nconst createUnsafe = ({\n  bytes,\n  cid,\n  value: maybeValue,\n  codec\n}) => {\n  const value = maybeValue !== undefined ? maybeValue : codec && codec.decode(bytes);\n  if (value === undefined)\n    throw new Error('Missing required argument, must either provide \"value\" or \"codec\"');\n  return new Block({\n    cid,\n    bytes,\n    value\n  });\n};\nconst create = async ({bytes, cid, hasher, codec}) => {\n  if (!bytes)\n    throw new Error('Missing required argument \"bytes\"');\n  if (!hasher)\n    throw new Error('Missing required argument \"hasher\"');\n  const value = codec.decode(bytes);\n  const hash = await hasher.digest(bytes);\n  if (!binary.equals(cid.multihash.bytes, hash.bytes)) {\n    throw new Error('CID hash does not match bytes');\n  }\n  return createUnsafe({\n    bytes,\n    cid,\n    value,\n    codec\n  });\n};\nexport {\n  encode,\n  decode,\n  create,\n  createUnsafe,\n  Block\n};","import { Key } from 'interface-datastore/key'\nimport { CID } from 'multiformats'\nimport * as raw from 'multiformats/codecs/raw'\nimport errCode from 'err-code'\nimport { base32 } from 'multiformats/bases/base32'\nimport * as Digest from 'multiformats/hashes/digest'\n\n/**\n * Transform a cid to the appropriate datastore key.\n *\n * @param {CID} c\n */\nexport function cidToKey (c) {\n  const cid = CID.asCID(c)\n\n  if (cid == null) {\n    throw errCode(new Error('Not a valid cid'), 'ERR_INVALID_CID')\n  }\n\n  const encoded = base32.encode(cid.multihash.bytes)\n\n  return new Key('/' + encoded.slice(1).toUpperCase(), false)\n}\n\n/**\n * Transform a datastore Key instance to a CID\n * As Key is a multihash of the CID, it is reconstructed using IPLD's RAW codec.\n * Hence it is highly probable that stored CID will differ from a CID retrieved from blockstore.\n *\n * @param {Key} key\n */\nexport function keyToCid (key) {\n  // Block key is of the form /<base32 encoded string>\n  return CID.createV1(raw.code, keyToMultihash(key))\n}\n\n/**\n * @param {Key | string} key\n */\nexport function keyToMultihash (key) {\n  return Digest.decode(base32.decode(`b${key.toString().toLowerCase().substring(1)}`))\n}\n","import debug from 'debug'\nimport { createUnsafe } from 'multiformats/block'\n\nconst log = debug('ipfs:repo:utils:walk-dag')\n\n/**\n * @typedef {import('multiformats/cid').CID} CID\n * @typedef {import('interface-blockstore').Blockstore} Blockstore\n * @typedef {import('../types').loadCodec} loadCodec\n * @typedef {import('../types').AbortOptions} AbortOptions\n */\n\n/**\n * @param {CID} cid\n * @param {Blockstore} blockstore\n * @param {loadCodec} loadCodec\n * @param {AbortOptions} [options]\n * @returns {AsyncGenerator<CID, void, undefined>}\n */\nexport async function * walkDag (cid, blockstore, loadCodec, options) {\n  try {\n    const bytes = await blockstore.get(cid, options)\n    const codec = await loadCodec(cid.code)\n    const block = createUnsafe({ bytes, cid, codec })\n\n    for (const [, childCid] of block.links()) {\n      yield childCid\n      yield * walkDag(childCid, blockstore, loadCodec, options)\n    }\n  } catch (/** @type {any} */ err) {\n    log('Could not walk DAG for CID', cid.toString(), err)\n\n    throw err\n  }\n}\n","\nexport const PinTypes = {\n  /** @type {'direct'} */\n  direct: 'direct',\n  /** @type {'recursive'} */\n  recursive: 'recursive',\n  /** @type {'indirect'} */\n  indirect: 'indirect',\n  /** @type {'all'} */\n  all: 'all'\n}\n","export default class QuickLRU extends Map {\n\tconstructor(options = {}) {\n\t\tsuper();\n\n\t\tif (!(options.maxSize && options.maxSize > 0)) {\n\t\t\tthrow new TypeError('`maxSize` must be a number greater than 0');\n\t\t}\n\n\t\tif (typeof options.maxAge === 'number' && options.maxAge === 0) {\n\t\t\tthrow new TypeError('`maxAge` must be a number greater than 0');\n\t\t}\n\n\t\t// TODO: Use private class fields when ESLint supports them.\n\t\tthis.maxSize = options.maxSize;\n\t\tthis.maxAge = options.maxAge || Number.POSITIVE_INFINITY;\n\t\tthis.onEviction = options.onEviction;\n\t\tthis.cache = new Map();\n\t\tthis.oldCache = new Map();\n\t\tthis._size = 0;\n\t}\n\n\t// TODO: Use private class methods when targeting Node.js 16.\n\t_emitEvictions(cache) {\n\t\tif (typeof this.onEviction !== 'function') {\n\t\t\treturn;\n\t\t}\n\n\t\tfor (const [key, item] of cache) {\n\t\t\tthis.onEviction(key, item.value);\n\t\t}\n\t}\n\n\t_deleteIfExpired(key, item) {\n\t\tif (typeof item.expiry === 'number' && item.expiry <= Date.now()) {\n\t\t\tif (typeof this.onEviction === 'function') {\n\t\t\t\tthis.onEviction(key, item.value);\n\t\t\t}\n\n\t\t\treturn this.delete(key);\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t_getOrDeleteIfExpired(key, item) {\n\t\tconst deleted = this._deleteIfExpired(key, item);\n\t\tif (deleted === false) {\n\t\t\treturn item.value;\n\t\t}\n\t}\n\n\t_getItemValue(key, item) {\n\t\treturn item.expiry ? this._getOrDeleteIfExpired(key, item) : item.value;\n\t}\n\n\t_peek(key, cache) {\n\t\tconst item = cache.get(key);\n\n\t\treturn this._getItemValue(key, item);\n\t}\n\n\t_set(key, value) {\n\t\tthis.cache.set(key, value);\n\t\tthis._size++;\n\n\t\tif (this._size >= this.maxSize) {\n\t\t\tthis._size = 0;\n\t\t\tthis._emitEvictions(this.oldCache);\n\t\t\tthis.oldCache = this.cache;\n\t\t\tthis.cache = new Map();\n\t\t}\n\t}\n\n\t_moveToRecent(key, item) {\n\t\tthis.oldCache.delete(key);\n\t\tthis._set(key, item);\n\t}\n\n\t* _entriesAscending() {\n\t\tfor (const item of this.oldCache) {\n\t\t\tconst [key, value] = item;\n\t\t\tif (!this.cache.has(key)) {\n\t\t\t\tconst deleted = this._deleteIfExpired(key, value);\n\t\t\t\tif (deleted === false) {\n\t\t\t\t\tyield item;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfor (const item of this.cache) {\n\t\t\tconst [key, value] = item;\n\t\t\tconst deleted = this._deleteIfExpired(key, value);\n\t\t\tif (deleted === false) {\n\t\t\t\tyield item;\n\t\t\t}\n\t\t}\n\t}\n\n\tget(key) {\n\t\tif (this.cache.has(key)) {\n\t\t\tconst item = this.cache.get(key);\n\n\t\t\treturn this._getItemValue(key, item);\n\t\t}\n\n\t\tif (this.oldCache.has(key)) {\n\t\t\tconst item = this.oldCache.get(key);\n\t\t\tif (this._deleteIfExpired(key, item) === false) {\n\t\t\t\tthis._moveToRecent(key, item);\n\t\t\t\treturn item.value;\n\t\t\t}\n\t\t}\n\t}\n\n\tset(key, value, {maxAge = this.maxAge} = {}) {\n\t\tconst expiry =\n\t\t\ttypeof maxAge === 'number' && maxAge !== Number.POSITIVE_INFINITY ?\n\t\t\t\tDate.now() + maxAge :\n\t\t\t\tundefined;\n\t\tif (this.cache.has(key)) {\n\t\t\tthis.cache.set(key, {\n\t\t\t\tvalue,\n\t\t\t\texpiry\n\t\t\t});\n\t\t} else {\n\t\t\tthis._set(key, {value, expiry});\n\t\t}\n\t}\n\n\thas(key) {\n\t\tif (this.cache.has(key)) {\n\t\t\treturn !this._deleteIfExpired(key, this.cache.get(key));\n\t\t}\n\n\t\tif (this.oldCache.has(key)) {\n\t\t\treturn !this._deleteIfExpired(key, this.oldCache.get(key));\n\t\t}\n\n\t\treturn false;\n\t}\n\n\tpeek(key) {\n\t\tif (this.cache.has(key)) {\n\t\t\treturn this._peek(key, this.cache);\n\t\t}\n\n\t\tif (this.oldCache.has(key)) {\n\t\t\treturn this._peek(key, this.oldCache);\n\t\t}\n\t}\n\n\tdelete(key) {\n\t\tconst deleted = this.cache.delete(key);\n\t\tif (deleted) {\n\t\t\tthis._size--;\n\t\t}\n\n\t\treturn this.oldCache.delete(key) || deleted;\n\t}\n\n\tclear() {\n\t\tthis.cache.clear();\n\t\tthis.oldCache.clear();\n\t\tthis._size = 0;\n\t}\n\n\tresize(newSize) {\n\t\tif (!(newSize && newSize > 0)) {\n\t\t\tthrow new TypeError('`maxSize` must be a number greater than 0');\n\t\t}\n\n\t\tconst items = [...this._entriesAscending()];\n\t\tconst removeCount = items.length - newSize;\n\t\tif (removeCount < 0) {\n\t\t\tthis.cache = new Map(items);\n\t\t\tthis.oldCache = new Map();\n\t\t\tthis._size = items.length;\n\t\t} else {\n\t\t\tif (removeCount > 0) {\n\t\t\t\tthis._emitEvictions(items.slice(0, removeCount));\n\t\t\t}\n\n\t\t\tthis.oldCache = new Map(items.slice(removeCount));\n\t\t\tthis.cache = new Map();\n\t\t\tthis._size = 0;\n\t\t}\n\n\t\tthis.maxSize = newSize;\n\t}\n\n\t* keys() {\n\t\tfor (const [key] of this) {\n\t\t\tyield key;\n\t\t}\n\t}\n\n\t* values() {\n\t\tfor (const [, value] of this) {\n\t\t\tyield value;\n\t\t}\n\t}\n\n\t* [Symbol.iterator]() {\n\t\tfor (const item of this.cache) {\n\t\t\tconst [key, value] = item;\n\t\t\tconst deleted = this._deleteIfExpired(key, value);\n\t\t\tif (deleted === false) {\n\t\t\t\tyield [key, value.value];\n\t\t\t}\n\t\t}\n\n\t\tfor (const item of this.oldCache) {\n\t\t\tconst [key, value] = item;\n\t\t\tif (!this.cache.has(key)) {\n\t\t\t\tconst deleted = this._deleteIfExpired(key, value);\n\t\t\t\tif (deleted === false) {\n\t\t\t\t\tyield [key, value.value];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t* entriesDescending() {\n\t\tlet items = [...this.cache];\n\t\tfor (let i = items.length - 1; i >= 0; --i) {\n\t\t\tconst item = items[i];\n\t\t\tconst [key, value] = item;\n\t\t\tconst deleted = this._deleteIfExpired(key, value);\n\t\t\tif (deleted === false) {\n\t\t\t\tyield [key, value.value];\n\t\t\t}\n\t\t}\n\n\t\titems = [...this.oldCache];\n\t\tfor (let i = items.length - 1; i >= 0; --i) {\n\t\t\tconst item = items[i];\n\t\t\tconst [key, value] = item;\n\t\t\tif (!this.cache.has(key)) {\n\t\t\t\tconst deleted = this._deleteIfExpired(key, value);\n\t\t\t\tif (deleted === false) {\n\t\t\t\t\tyield [key, value.value];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t* entriesAscending() {\n\t\tfor (const [key, value] of this._entriesAscending()) {\n\t\t\tyield [key, value.value];\n\t\t}\n\t}\n\n\tget size() {\n\t\tif (!this._size) {\n\t\t\treturn this.oldCache.size;\n\t\t}\n\n\t\tlet oldCacheSize = 0;\n\t\tfor (const key of this.oldCache.keys()) {\n\t\t\tif (!this.cache.has(key)) {\n\t\t\t\toldCacheSize++;\n\t\t\t}\n\t\t}\n\n\t\treturn Math.min(this._size + oldCacheSize, this.maxSize);\n\t}\n\n\tentries() {\n\t\treturn this.entriesAscending();\n\t}\n\n\tforEach(callbackFunction, thisArgument = this) {\n\t\tfor (const [key, value] of this.entriesAscending()) {\n\t\t\tcallbackFunction.call(thisArgument, value, key, this);\n\t\t}\n\t}\n\n\tget [Symbol.toStringTag]() {\n\t\treturn JSON.stringify([...this.entriesAscending()]);\n\t}\n}\n","/* eslint max-nested-callbacks: [\"error\", 8] */\n\nimport { CID } from 'multiformats/cid'\nimport errCode from 'err-code'\nimport debug from 'debug'\nimport first from 'it-first'\nimport { createUnsafe } from 'multiformats/block'\nimport * as cborg from 'cborg'\nimport * as dagPb from '@ipld/dag-pb'\nimport {\n  cidToKey,\n  keyToMultihash\n} from './utils/blockstore.js'\nimport { walkDag } from './utils/walk-dag.js'\nimport { PinTypes } from './pin-types.js'\nimport QuickLRU from 'quick-lru'\n\n/**\n * @typedef {import('./types').PinType} PinType\n * @typedef {import('./types').PinQueryType} PinQueryType\n * @typedef {import('multiformats/codecs/interface').BlockCodec<any, any>} BlockCodec\n * @typedef {import('./types').PinOptions} PinOptions\n * @typedef {import('./types').AbortOptions} AbortOptions\n * @typedef {import('./types').Pins} Pins\n */\n\n/**\n * @typedef {object} PinInternal\n * @property {number} depth\n * @property {import('multiformats/cid').CIDVersion} [version]\n * @property {number} [codec]\n * @property {Record<string, any>} [metadata]\n */\n\n/**\n * @typedef {object} FetchCompleteDagOptions\n * @property {AbortSignal} [signal]\n * @property {number} [cidCacheMaxSize]\n */\n\nconst CID_CACHE_MAX_SIZE = 2048\n\n/**\n * @param {string} type\n */\nfunction invalidPinTypeErr (type) {\n  const errMsg = `Invalid type '${type}', must be one of {direct, indirect, recursive, all}`\n  return errCode(new Error(errMsg), 'ERR_INVALID_PIN_TYPE')\n}\n\n/**\n * @implements {Pins}\n */\nexport class PinManager {\n  /**\n   * @param {object} config\n   * @param {import('interface-datastore').Datastore} config.pinstore\n   * @param {import('interface-blockstore').Blockstore} config.blockstore\n   * @param {import('./types').loadCodec} config.loadCodec\n   */\n  constructor ({ pinstore, blockstore, loadCodec }) {\n    this.pinstore = pinstore\n    this.blockstore = blockstore\n    this.loadCodec = loadCodec\n    this.log = debug('ipfs:repo:pin')\n    this.directPins = new Set()\n    this.recursivePins = new Set()\n  }\n\n  /**\n   * @param {CID} cid\n   * @param {PinOptions & AbortOptions} [options]\n   */\n  async pinDirectly (cid, options = {}) {\n    await this.blockstore.get(cid, options)\n\n    /** @type {PinInternal} */\n    const pin = {\n      depth: 0\n    }\n\n    if (cid.version !== 0) {\n      pin.version = cid.version\n    }\n\n    if (cid.code !== dagPb.code) {\n      pin.codec = cid.code\n    }\n\n    if (options.metadata) {\n      pin.metadata = options.metadata\n    }\n\n    return this.pinstore.put(cidToKey(cid), cborg.encode(pin))\n  }\n\n  /**\n   * @param {CID} cid\n   * @param {AbortOptions} [options]\n   */\n  unpin (cid, options) {\n    return this.pinstore.delete(cidToKey(cid), options)\n  }\n\n  /**\n   * @param {CID} cid\n   * @param {PinOptions & FetchCompleteDagOptions & AbortOptions} [options]\n   */\n  async pinRecursively (cid, options = {}) {\n    await this.fetchCompleteDag(cid, options)\n\n    /** @type {PinInternal} */\n    const pin = {\n      depth: Infinity\n    }\n\n    if (cid.version !== 0) {\n      pin.version = cid.version\n    }\n\n    if (cid.code !== dagPb.code) {\n      pin.codec = cid.code\n    }\n\n    if (options.metadata) {\n      pin.metadata = options.metadata\n    }\n\n    await this.pinstore.put(cidToKey(cid), cborg.encode(pin))\n  }\n\n  /**\n   * @param {AbortOptions} [options]\n   */\n  async * directKeys (options) {\n    for await (const entry of this.pinstore.query({\n      filters: [(entry) => {\n        const pin = cborg.decode(entry.value)\n\n        return pin.depth === 0\n      }]\n    })) {\n      const pin = cborg.decode(entry.value)\n      const version = pin.version || 0\n      const codec = pin.codec != null ? pin.codec : dagPb.code\n      const multihash = keyToMultihash(entry.key)\n\n      yield {\n        cid: CID.create(version, codec, multihash),\n        metadata: pin.metadata\n      }\n    }\n  }\n\n  /**\n   * @param {AbortOptions} [options]\n   */\n  async * recursiveKeys (options) {\n    for await (const entry of this.pinstore.query({\n      filters: [(entry) => {\n        const pin = cborg.decode(entry.value)\n\n        return pin.depth === Infinity\n      }]\n    })) {\n      const pin = cborg.decode(entry.value)\n      const version = pin.version || 0\n      const codec = pin.codec != null ? pin.codec : dagPb.code\n      const multihash = keyToMultihash(entry.key)\n\n      yield {\n        cid: CID.create(version, codec, multihash),\n        metadata: pin.metadata\n      }\n    }\n  }\n\n  /**\n   * @param {AbortOptions} [options]\n   */\n  async * indirectKeys (options) {\n    for await (const { cid } of this.recursiveKeys()) {\n      for await (const childCid of walkDag(cid, this.blockstore, this.loadCodec, options)) {\n        // recursive pins override indirect pins\n        const types = [\n          PinTypes.recursive\n        ]\n\n        const result = await this.isPinnedWithType(childCid, types)\n\n        if (result.pinned) {\n          continue\n        }\n\n        yield childCid\n      }\n    }\n  }\n\n  /**\n   * @param {CID} cid\n   * @param {PinQueryType|PinQueryType[]} types\n   * @param {AbortOptions} [options]\n   */\n  async isPinnedWithType (cid, types, options) {\n    if (!Array.isArray(types)) {\n      types = [types]\n    }\n\n    const all = types.includes(PinTypes.all)\n    const direct = types.includes(PinTypes.direct)\n    const recursive = types.includes(PinTypes.recursive)\n    const indirect = types.includes(PinTypes.indirect)\n\n    if (recursive || direct || all) {\n      const result = await first(this.pinstore.query({\n        prefix: cidToKey(cid).toString(),\n        filters: [entry => {\n          if (all) {\n            return true\n          }\n\n          const pin = cborg.decode(entry.value)\n\n          return types.includes(pin.depth === 0 ? PinTypes.direct : PinTypes.recursive)\n        }],\n        limit: 1\n      }))\n\n      if (result) {\n        const pin = cborg.decode(result.value)\n\n        return {\n          cid,\n          pinned: true,\n          reason: pin.depth === 0 ? PinTypes.direct : PinTypes.recursive,\n          metadata: pin.metadata\n        }\n      }\n    }\n\n    const self = this\n\n    /**\n     * @param {CID} key\n     * @param {AsyncIterable<{ cid: CID, metadata: any }>} source\n     */\n    async function * findChild (key, source) {\n      for await (const { cid: parentCid } of source) {\n        for await (const childCid of walkDag(parentCid, self.blockstore, self.loadCodec)) {\n          if (childCid.equals(key)) {\n            yield parentCid\n            return\n          }\n        }\n      }\n    }\n\n    if (all || indirect) {\n      // indirect (default)\n      // check each recursive key to see if multihash is under it\n\n      const parentCid = await first(findChild(cid, this.recursiveKeys()))\n\n      if (parentCid) {\n        return {\n          cid,\n          pinned: true,\n          reason: PinTypes.indirect,\n          parent: parentCid\n        }\n      }\n    }\n\n    return {\n      cid,\n      pinned: false\n    }\n  }\n\n  /**\n   * @param {CID} cid\n   * @param {FetchCompleteDagOptions} [options]\n   */\n  async fetchCompleteDag (cid, options = {}) {\n    const seen = new QuickLRU({ maxSize: options.cidCacheMaxSize ?? CID_CACHE_MAX_SIZE })\n\n    /**\n     * @param {CID} cid\n     * @param {AbortOptions} options\n     */\n    const walkDag = async (cid, options) => {\n      if (seen.has(cid.toString())) {\n        return\n      }\n\n      seen.set(cid.toString(), true)\n\n      const bytes = await this.blockstore.get(cid, options)\n      const codec = await this.loadCodec(cid.code)\n      const block = createUnsafe({ bytes, cid, codec })\n\n      await Promise.all(\n        [...block.links()].map(([, childCid]) => walkDag(childCid, options))\n      )\n    }\n\n    await walkDag(cid, options)\n  }\n\n  /**\n   * Throws an error if the pin type is invalid\n   *\n   * @param {any} type\n   * @returns {type is PinType}\n   */\n  static checkPinType (type) {\n    if (typeof type !== 'string' || !Object.keys(PinTypes).includes(type)) {\n      throw invalidPinTypeErr(type)\n    }\n    return true\n  }\n}\n","'use strict'\n\n/**\n * Takes an (async) iterable and returns one with each item mapped by the passed\n * function.\n *\n * @template I,O\n * @param {AsyncIterable<I>|Iterable<I>} source\n * @param {function(I):O|Promise<O>} func\n * @returns {AsyncIterable<O>}\n */\nconst map = async function * (source, func) {\n  for await (const val of source) {\n    yield func(val)\n  }\n}\n\nmodule.exports = map\n","\nimport map from 'it-map'\nimport errCode from 'err-code'\nimport { PinTypes } from './pin-types.js'\n\n/**\n * @typedef {import('interface-datastore').Query} Query\n * @typedef {import('interface-datastore').Datastore} Datastore\n * @typedef {import('interface-datastore').Options} DatastoreOptions\n * @typedef {import('interface-blockstore').Blockstore} Blockstore\n * @typedef {import('multiformats/cid').CID} CID\n * @typedef {import('./pin-manager').Pins} Pins\n */\n\n/**\n * @param {Pins} pins\n * @param {Blockstore} store\n * @returns {Blockstore}\n */\nexport function createPinnedBlockstore (pins, store) {\n  return {\n    open () {\n      return store.open()\n    },\n\n    close () {\n      return store.close()\n    },\n\n    query (query, options) {\n      return store.query(query, options)\n    },\n\n    queryKeys (query, options) {\n      return store.queryKeys(query, options)\n    },\n\n    async get (cid, options) {\n      return store.get(cid, options)\n    },\n\n    async * getMany (cids, options) {\n      yield * store.getMany(cids, options)\n    },\n\n    async put (cid, buf, options) {\n      await store.put(cid, buf, options)\n    },\n\n    async * putMany (pairs, options) {\n      yield * store.putMany(pairs, options)\n    },\n\n    has (cid, options) {\n      return store.has(cid, options)\n    },\n\n    async delete (cid, options) {\n      await ensureNotPinned(cid, pins)\n\n      return store.delete(cid, options)\n    },\n\n    deleteMany (cids, options) {\n      return store.deleteMany(map(cids, async cid => {\n        await ensureNotPinned(cid, pins)\n\n        return cid\n      }), options)\n    },\n\n    batch () {\n      return store.batch()\n    }\n  }\n}\n\n/**\n * @param {CID} cid\n * @param {Pins} pins\n */\nasync function ensureNotPinned (cid, pins) {\n  const { pinned, reason } = await pins.isPinnedWithType(cid, PinTypes.all)\n\n  if (pinned) {\n    throw errCode(new Error(`pinned: ${reason}`), 'ERR_BLOCK_PINNED')\n  }\n}\n","export class TimeoutError extends Error {\n\tconstructor(message) {\n\t\tsuper(message);\n\t\tthis.name = 'TimeoutError';\n\t}\n}\n\n/**\nAn error to be thrown when the request is aborted by AbortController.\nDOMException is thrown instead of this Error when DOMException is available.\n*/\nexport class AbortError extends Error {\n\tconstructor(message) {\n\t\tsuper();\n\t\tthis.name = 'AbortError';\n\t\tthis.message = message;\n\t}\n}\n\n/**\nTODO: Remove AbortError and just throw DOMException when targeting Node 18.\n*/\nconst getDOMException = errorMessage => globalThis.DOMException === undefined\n\t? new AbortError(errorMessage)\n\t: new DOMException(errorMessage);\n\n/**\nTODO: Remove below function and just 'reject(signal.reason)' when targeting Node 18.\n*/\nconst getAbortedReason = signal => {\n\tconst reason = signal.reason === undefined\n\t\t? getDOMException('This operation was aborted.')\n\t\t: signal.reason;\n\n\treturn reason instanceof Error ? reason : getDOMException(reason);\n};\n\nexport default function pTimeout(promise, options) {\n\tconst {\n\t\tmilliseconds,\n\t\tfallback,\n\t\tmessage,\n\t\tcustomTimers = {setTimeout, clearTimeout},\n\t} = options;\n\n\tlet timer;\n\n\tconst cancelablePromise = new Promise((resolve, reject) => {\n\t\tif (typeof milliseconds !== 'number' || Math.sign(milliseconds) !== 1) {\n\t\t\tthrow new TypeError(`Expected \\`milliseconds\\` to be a positive number, got \\`${milliseconds}\\``);\n\t\t}\n\n\t\tif (milliseconds === Number.POSITIVE_INFINITY) {\n\t\t\tresolve(promise);\n\t\t\treturn;\n\t\t}\n\n\t\tif (options.signal) {\n\t\t\tconst {signal} = options;\n\t\t\tif (signal.aborted) {\n\t\t\t\treject(getAbortedReason(signal));\n\t\t\t}\n\n\t\t\tsignal.addEventListener('abort', () => {\n\t\t\t\treject(getAbortedReason(signal));\n\t\t\t});\n\t\t}\n\n\t\ttimer = customTimers.setTimeout.call(undefined, () => {\n\t\t\tif (fallback) {\n\t\t\t\ttry {\n\t\t\t\t\tresolve(fallback());\n\t\t\t\t} catch (error) {\n\t\t\t\t\treject(error);\n\t\t\t\t}\n\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst errorMessage = typeof message === 'string' ? message : `Promise timed out after ${milliseconds} milliseconds`;\n\t\t\tconst timeoutError = message instanceof Error ? message : new TimeoutError(errorMessage);\n\n\t\t\tif (typeof promise.cancel === 'function') {\n\t\t\t\tpromise.cancel();\n\t\t\t}\n\n\t\t\treject(timeoutError);\n\t\t}, milliseconds);\n\n\t\t(async () => {\n\t\t\ttry {\n\t\t\t\tresolve(await promise);\n\t\t\t} catch (error) {\n\t\t\t\treject(error);\n\t\t\t} finally {\n\t\t\t\tcustomTimers.clearTimeout.call(undefined, timer);\n\t\t\t}\n\t\t})();\n\t});\n\n\tcancelablePromise.clear = () => {\n\t\tcustomTimers.clearTimeout.call(undefined, timer);\n\t\ttimer = undefined;\n\t};\n\n\treturn cancelablePromise;\n}\n","export const WORKER_REQUEST_READ_LOCK = 'lock:worker:request-read';\nexport const WORKER_RELEASE_READ_LOCK = 'lock:worker:release-read';\nexport const MASTER_GRANT_READ_LOCK = 'lock:master:grant-read';\nexport const WORKER_REQUEST_WRITE_LOCK = 'lock:worker:request-write';\nexport const WORKER_RELEASE_WRITE_LOCK = 'lock:worker:release-write';\nexport const MASTER_GRANT_WRITE_LOCK = 'lock:master:grant-write';\n//# sourceMappingURL=constants.js.map","const events = {};\nconst observable = (worker) => {\n    worker.addEventListener('message', (event) => {\n        observable.dispatchEvent('message', worker, event);\n    });\n    if (worker.port != null) {\n        worker.port.addEventListener('message', (event) => {\n            observable.dispatchEvent('message', worker, event);\n        });\n    }\n};\nobservable.addEventListener = (type, fn) => {\n    if (events[type] == null) {\n        events[type] = [];\n    }\n    events[type].push(fn);\n};\nobservable.removeEventListener = (type, fn) => {\n    if (events[type] == null) {\n        return;\n    }\n    events[type] = events[type]\n        .filter(listener => listener === fn);\n};\nobservable.dispatchEvent = function (type, worker, event) {\n    if (events[type] == null) {\n        return;\n    }\n    events[type].forEach(fn => fn(worker, event));\n};\nexport default observable;\n//# sourceMappingURL=index.js.map","import { nanoid } from 'nanoid';\nimport { WORKER_REQUEST_READ_LOCK, WORKER_RELEASE_READ_LOCK, MASTER_GRANT_READ_LOCK, WORKER_REQUEST_WRITE_LOCK, WORKER_RELEASE_WRITE_LOCK, MASTER_GRANT_WRITE_LOCK } from './constants.js';\nimport observer from 'observable-webworkers';\nconst handleWorkerLockRequest = (emitter, masterEvent, requestType, releaseType, grantType) => {\n    return (worker, event) => {\n        if (event.data.type !== requestType) {\n            return;\n        }\n        const requestEvent = {\n            type: event.data.type,\n            name: event.data.name,\n            identifier: event.data.identifier\n        };\n        emitter.dispatchEvent(new MessageEvent(masterEvent, {\n            data: {\n                name: requestEvent.name,\n                handler: async () => {\n                    // grant lock to worker\n                    worker.postMessage({\n                        type: grantType,\n                        name: requestEvent.name,\n                        identifier: requestEvent.identifier\n                    });\n                    // wait for worker to finish\n                    return await new Promise((resolve) => {\n                        const releaseEventListener = (event) => {\n                            if (event == null || event.data == null) {\n                                return;\n                            }\n                            const releaseEvent = {\n                                type: event.data.type,\n                                name: event.data.name,\n                                identifier: event.data.identifier\n                            };\n                            if (releaseEvent.type === releaseType && releaseEvent.identifier === requestEvent.identifier) {\n                                worker.removeEventListener('message', releaseEventListener);\n                                resolve();\n                            }\n                        };\n                        worker.addEventListener('message', releaseEventListener);\n                    });\n                }\n            }\n        }));\n    };\n};\nconst makeWorkerLockRequest = (name, requestType, grantType, releaseType) => {\n    return async () => {\n        const id = nanoid();\n        globalThis.postMessage({\n            type: requestType,\n            identifier: id,\n            name\n        });\n        return await new Promise((resolve) => {\n            const listener = (event) => {\n                if (event == null || event.data == null) {\n                    return;\n                }\n                const responseEvent = {\n                    type: event.data.type,\n                    identifier: event.data.identifier\n                };\n                if (responseEvent.type === grantType && responseEvent.identifier === id) {\n                    globalThis.removeEventListener('message', listener);\n                    // grant lock\n                    resolve(() => {\n                        // release lock\n                        globalThis.postMessage({\n                            type: releaseType,\n                            identifier: id,\n                            name\n                        });\n                    });\n                }\n            };\n            globalThis.addEventListener('message', listener);\n        });\n    };\n};\nconst defaultOptions = {\n    singleProcess: false\n};\nexport default (options) => {\n    options = Object.assign({}, defaultOptions, options);\n    const isPrimary = Boolean(globalThis.document) || options.singleProcess;\n    if (isPrimary) {\n        const emitter = new EventTarget();\n        observer.addEventListener('message', handleWorkerLockRequest(emitter, 'requestReadLock', WORKER_REQUEST_READ_LOCK, WORKER_RELEASE_READ_LOCK, MASTER_GRANT_READ_LOCK));\n        observer.addEventListener('message', handleWorkerLockRequest(emitter, 'requestWriteLock', WORKER_REQUEST_WRITE_LOCK, WORKER_RELEASE_WRITE_LOCK, MASTER_GRANT_WRITE_LOCK));\n        return emitter;\n    }\n    return {\n        isWorker: true,\n        readLock: (name) => makeWorkerLockRequest(name, WORKER_REQUEST_READ_LOCK, MASTER_GRANT_READ_LOCK, WORKER_RELEASE_READ_LOCK),\n        writeLock: (name) => makeWorkerLockRequest(name, WORKER_REQUEST_WRITE_LOCK, MASTER_GRANT_WRITE_LOCK, WORKER_RELEASE_WRITE_LOCK)\n    };\n};\n//# sourceMappingURL=browser.js.map","import PQueue from 'p-queue';\nimport pTimeout from 'p-timeout';\nimport impl from './node.js';\nconst mutexes = {};\nlet implementation;\nasync function createReleaseable(queue, options) {\n    let res;\n    const p = new Promise((resolve) => {\n        res = resolve;\n    });\n    void queue.add(async () => await pTimeout((async () => {\n        return await new Promise((resolve) => {\n            res(() => {\n                resolve();\n            });\n        });\n    })(), {\n        milliseconds: options.timeout\n    }));\n    return await p;\n}\nconst createMutex = (name, options) => {\n    if (implementation.isWorker === true) {\n        return {\n            readLock: implementation.readLock(name, options),\n            writeLock: implementation.writeLock(name, options)\n        };\n    }\n    const masterQueue = new PQueue({ concurrency: 1 });\n    let readQueue;\n    return {\n        async readLock() {\n            // If there's already a read queue, just add the task to it\n            if (readQueue != null) {\n                return await createReleaseable(readQueue, options);\n            }\n            // Create a new read queue\n            readQueue = new PQueue({\n                concurrency: options.concurrency,\n                autoStart: false\n            });\n            const localReadQueue = readQueue;\n            // Add the task to the read queue\n            const readPromise = createReleaseable(readQueue, options);\n            void masterQueue.add(async () => {\n                // Start the task only once the master queue has completed processing\n                // any previous tasks\n                localReadQueue.start();\n                // Once all the tasks in the read queue have completed, remove it so\n                // that the next read lock will occur after any write locks that were\n                // started in the interim\n                return await localReadQueue.onIdle()\n                    .then(() => {\n                    if (readQueue === localReadQueue) {\n                        readQueue = null;\n                    }\n                });\n            });\n            return await readPromise;\n        },\n        async writeLock() {\n            // Remove the read queue reference, so that any later read locks will be\n            // added to a new queue that starts after this write lock has been\n            // released\n            readQueue = null;\n            return await createReleaseable(masterQueue, options);\n        }\n    };\n};\nconst defaultOptions = {\n    name: 'lock',\n    concurrency: Infinity,\n    timeout: 84600000,\n    singleProcess: false\n};\nexport default function createMortice(options) {\n    const opts = Object.assign({}, defaultOptions, options);\n    if (implementation == null) {\n        implementation = impl(opts);\n        if (implementation.isWorker !== true) {\n            // we are master, set up worker requests\n            implementation.addEventListener('requestReadLock', (event) => {\n                if (mutexes[event.data.name] == null) {\n                    return;\n                }\n                void mutexes[event.data.name].readLock()\n                    .then(async (release) => await event.data.handler().finally(() => release()));\n            });\n            implementation.addEventListener('requestWriteLock', async (event) => {\n                if (mutexes[event.data.name] == null) {\n                    return;\n                }\n                void mutexes[event.data.name].writeLock()\n                    .then(async (release) => await event.data.handler().finally(() => release()));\n            });\n        }\n    }\n    if (mutexes[opts.name] == null) {\n        mutexes[opts.name] = createMutex(opts.name, opts);\n    }\n    return mutexes[opts.name];\n}\n//# sourceMappingURL=index.js.map","'use strict'\n\n/**\n * Takes an (async) iterable that emits things and returns an async iterable that\n * emits those things in fixed-sized batches.\n *\n * @template T\n * @param {AsyncIterable<T>|Iterable<T>} source\n * @param {number} [size=1]\n * @returns {AsyncIterable<T[]>}\n */\nasync function * batch (source, size = 1) {\n  /** @type {T[]} */\n  let things = []\n\n  if (size < 1) {\n    size = 1\n  }\n\n  for await (const thing of source) {\n    things.push(thing)\n\n    while (things.length >= size) {\n      yield things.slice(0, size)\n\n      things = things.slice(size)\n    }\n  }\n\n  while (things.length) {\n    yield things.slice(0, size)\n\n    things = things.slice(size)\n  }\n}\n\nmodule.exports = batch\n","'use strict'\n\nconst batch = require('it-batch')\n\n/**\n * @template T\n * @typedef {{ok:true, value:T}} Success\n */\n\n/**\n * @typedef {{ok:false, err:Error}} Failure\n */\n\n/**\n * Takes an (async) iterator that emits promise-returning functions,\n * invokes them in parallel and emits the results as they become available but\n * in the same order as the input\n *\n * @template T\n * @param {AsyncIterable<() => Promise<T>>|Iterable<() => Promise<T>>} source\n * @param {number} [size=1]\n * @returns {AsyncIterable<T>}\n */\nasync function * parallelBatch (source, size = 1) {\n  for await (const tasks of batch(source, size)) {\n    /** @type {Promise<Success<T>|Failure>[]} */\n    const things = tasks.map(\n      /**\n       * @param {() => Promise<T>} p\n       */\n      p => {\n        return p().then(value => ({ ok: true, value }), err => ({ ok: false, err }))\n      })\n\n    for (let i = 0; i < things.length; i++) {\n      const result = await things[i]\n\n      if (result.ok) {\n        yield result.value\n      } else {\n        throw result.err\n      }\n    }\n  }\n}\n\nmodule.exports = parallelBatch\n","import { pushable } from 'it-pushable';\n/**\n * Treat one or more iterables as a single iterable.\n *\n * Nb. sources are iterated over in parallel so the\n * order of emitted items is not guaranteed.\n */\nexport default async function* merge(...sources) {\n    const output = pushable({\n        objectMode: true\n    });\n    void Promise.resolve().then(async () => {\n        try {\n            await Promise.all(sources.map(async (source) => {\n                for await (const item of source) {\n                    output.push(item);\n                }\n            }));\n            output.end();\n        }\n        catch (err) {\n            output.end(err);\n        }\n    });\n    yield* output;\n}\n//# sourceMappingURL=index.js.map","import { pushable } from 'it-pushable';\nimport merge from 'it-merge';\nexport const rawPipe = (...fns) => {\n    let res;\n    while (fns.length > 0) {\n        res = fns.shift()(res);\n    }\n    return res;\n};\nexport const isIterable = (obj) => {\n    return obj != null && (typeof obj[Symbol.asyncIterator] === 'function' ||\n        typeof obj[Symbol.iterator] === 'function' ||\n        typeof obj.next === 'function' // Probably, right?\n    );\n};\nexport const isDuplex = (obj) => {\n    return obj != null && typeof obj.sink === 'function' && isIterable(obj.source);\n};\nconst duplexPipelineFn = (duplex) => {\n    return (source) => {\n        const p = duplex.sink(source);\n        if (p.then != null) {\n            const stream = pushable({\n                objectMode: true\n            });\n            p.then(() => {\n                stream.end();\n            }, (err) => {\n                stream.end(err);\n            });\n            const sourceWrap = async function* () {\n                yield* duplex.source;\n                stream.end();\n            };\n            return merge(stream, sourceWrap());\n        }\n        return duplex.source;\n    };\n};\nexport function pipe(first, ...rest) {\n    // Duplex at start: wrap in function and return duplex source\n    if (isDuplex(first)) {\n        const duplex = first;\n        first = () => duplex.source;\n        // Iterable at start: wrap in function\n    }\n    else if (isIterable(first)) {\n        const source = first;\n        first = () => source;\n    }\n    const fns = [first, ...rest];\n    if (fns.length > 1) {\n        // Duplex at end: use duplex sink\n        if (isDuplex(fns[fns.length - 1])) {\n            fns[fns.length - 1] = fns[fns.length - 1].sink;\n        }\n    }\n    if (fns.length > 2) {\n        // Duplex in the middle, consume source with duplex sink and return duplex source\n        for (let i = 1; i < fns.length - 1; i++) {\n            if (isDuplex(fns[i])) {\n                fns[i] = duplexPipelineFn(fns[i]);\n            }\n        }\n    }\n    return rawPipe(...fns);\n}\n//# sourceMappingURL=index.js.map","module.exports = class FixedFIFO {\n  constructor (hwm) {\n    if (!(hwm > 0) || ((hwm - 1) & hwm) !== 0) throw new Error('Max size for a FixedFIFO should be a power of two')\n    this.buffer = new Array(hwm)\n    this.mask = hwm - 1\n    this.top = 0\n    this.btm = 0\n    this.next = null\n  }\n\n  push (data) {\n    if (this.buffer[this.top] !== undefined) return false\n    this.buffer[this.top] = data\n    this.top = (this.top + 1) & this.mask\n    return true\n  }\n\n  shift () {\n    const last = this.buffer[this.btm]\n    if (last === undefined) return undefined\n    this.buffer[this.btm] = undefined\n    this.btm = (this.btm + 1) & this.mask\n    return last\n  }\n\n  peek () {\n    return this.buffer[this.btm]\n  }\n\n  isEmpty () {\n    return this.buffer[this.btm] === undefined\n  }\n}\n","const FixedFIFO = require('./fixed-size')\n\nmodule.exports = class FastFIFO {\n  constructor (hwm) {\n    this.hwm = hwm || 16\n    this.head = new FixedFIFO(this.hwm)\n    this.tail = this.head\n  }\n\n  push (val) {\n    if (!this.head.push(val)) {\n      const prev = this.head\n      this.head = prev.next = new FixedFIFO(2 * this.head.buffer.length)\n      this.head.push(val)\n    }\n  }\n\n  shift () {\n    const val = this.tail.shift()\n    if (val === undefined && this.tail.next) {\n      const next = this.tail.next\n      this.tail.next = null\n      this.tail = next\n      return this.tail.shift()\n    }\n    return val\n  }\n\n  peek () {\n    return this.tail.peek()\n  }\n\n  isEmpty () {\n    return this.head.isEmpty()\n  }\n}\n","const FIFO = require('fast-fifo')\n\nmodule.exports = (options) => {\n  options = options || {}\n  let onEnd\n\n  if (typeof options === 'function') {\n    onEnd = options\n    options = {}\n  } else {\n    onEnd = options.onEnd\n  }\n\n  let buffer = new FIFO()\n  let pushable, onNext, ended\n\n  const waitNext = () => {\n    if (!buffer.isEmpty()) {\n      if (options.writev) {\n        let next\n        const values = []\n        while (!buffer.isEmpty()) {\n          next = buffer.shift()\n          if (next.error) throw next.error\n          values.push(next.value)\n        }\n        return { done: next.done, value: values }\n      }\n\n      const next = buffer.shift()\n      if (next.error) throw next.error\n      return next\n    }\n\n    if (ended) return { done: true }\n\n    return new Promise((resolve, reject) => {\n      onNext = next => {\n        onNext = null\n        if (next.error) {\n          reject(next.error)\n        } else {\n          if (options.writev && !next.done) {\n            resolve({ done: next.done, value: [next.value] })\n          } else {\n            resolve(next)\n          }\n        }\n        return pushable\n      }\n    })\n  }\n\n  const bufferNext = next => {\n    if (onNext) return onNext(next)\n    buffer.push(next)\n    return pushable\n  }\n\n  const bufferError = err => {\n    buffer = new FIFO()\n    if (onNext) return onNext({ error: err })\n    buffer.push({ error: err })\n    return pushable\n  }\n\n  const push = value => {\n    if (ended) return pushable\n    return bufferNext({ done: false, value })\n  }\n  const end = err => {\n    if (ended) return pushable\n    ended = true\n    return err ? bufferError(err) : bufferNext({ done: true })\n  }\n  const _return = () => {\n    buffer = new FIFO()\n    end()\n    return { done: true }\n  }\n  const _throw = err => {\n    end(err)\n    return { done: true }\n  }\n\n  pushable = {\n    [Symbol.asyncIterator] () { return this },\n    next: waitNext,\n    return: _return,\n    throw: _throw,\n    push,\n    end\n  }\n\n  if (!onEnd) return pushable\n\n  const _pushable = pushable\n\n  pushable = {\n    [Symbol.asyncIterator] () { return this },\n    next () {\n      return _pushable.next()\n    },\n    throw (err) {\n      _pushable.throw(err)\n      if (onEnd) {\n        onEnd(err)\n        onEnd = null\n      }\n      return { done: true }\n    },\n    return () {\n      _pushable.return()\n      if (onEnd) {\n        onEnd()\n        onEnd = null\n      }\n      return { done: true }\n    },\n    push,\n    end (err) {\n      _pushable.end(err)\n      if (onEnd) {\n        onEnd(err)\n        onEnd = null\n      }\n      return pushable\n    }\n  }\n\n  return pushable\n}\n","'use strict'\n\nconst pushable = require('it-pushable')\n\n/**\n * Treat one or more iterables as a single iterable.\n *\n * Nb. sources are iterated over in parallel so the\n * order of emitted items is not guaranteed.\n *\n * @template T\n * @param {...AsyncIterable<T>|Iterable<T>} sources\n * @returns {AsyncIterable<T>}\n */\nconst merge = async function * (...sources) {\n  const output = pushable()\n\n  setTimeout(async () => {\n    try {\n      await Promise.all(\n        sources.map(async (source) => {\n          for await (const item of source) {\n            output.push(item)\n          }\n        })\n      )\n\n      output.end()\n    } catch (/** @type {any} */ err) {\n      output.end(err)\n    }\n  }, 0)\n\n  yield * output\n}\n\nmodule.exports = merge\n","\nimport { CID } from 'multiformats/cid'\nimport debug from 'debug'\nimport { notFoundError } from 'datastore-core/errors'\nimport parallelBatch from 'it-parallel-batch'\nimport { pipe } from 'it-pipe'\nimport merge from 'it-merge'\nimport map from 'it-map'\nimport filter from 'it-filter'\nimport { Key } from 'interface-datastore/key'\nimport { base32 } from 'multiformats/bases/base32'\nimport { walkDag } from './utils/walk-dag.js'\n\nconst log = debug('ipfs:repo:gc')\nconst ERR_NOT_FOUND = notFoundError().code\n\n// Limit on the number of parallel block remove operations\nconst BLOCK_RM_CONCURRENCY = 256\n\nconst MFS_ROOT_KEY = new Key('/local/filesroot')\n\n/**\n * @typedef {import('interface-blockstore').Blockstore} Blockstore\n * @typedef {import('./types').loadCodec} loadCodec\n * @typedef {import('./types').GCErrorResult} GCErrorResult\n * @typedef {import('./types').GCSuccessResult} GCSuccessResult\n */\n\n/**\n * Perform mark and sweep garbage collection\n *\n * @param {object} config\n * @param {import('./types').GCLock} config.gcLock\n * @param {import('./types').Pins} config.pins\n * @param {Blockstore} config.blockstore\n * @param {import('interface-datastore').Datastore} config.root\n * @param {loadCodec} config.loadCodec\n */\nexport function gc ({ gcLock, pins, blockstore, root, loadCodec }) {\n  /**\n   * @returns {AsyncGenerator<GCErrorResult | GCSuccessResult, void, unknown>}\n   */\n  async function * gc () {\n    const start = Date.now()\n    log('Creating set of marked blocks')\n\n    const release = await gcLock.writeLock()\n\n    try {\n      // Mark all blocks that are being used\n      const markedSet = await createMarkedSet({ pins, blockstore, root, loadCodec })\n      // Get all blocks keys from the blockstore\n      const blockKeys = blockstore.queryKeys({})\n\n      // Delete blocks that are not being used\n      // @ts-ignore ts cannot tell that we filter out null results\n      yield * deleteUnmarkedBlocks({ blockstore }, markedSet, blockKeys)\n\n      log(`Complete (${Date.now() - start}ms)`)\n    } finally {\n      release()\n    }\n  }\n\n  return gc\n}\n\n/**\n * Get Set of CIDs of blocks to keep\n *\n * @param {object} config\n * @param {import('./pin-manager').Pins} config.pins\n * @param {import('interface-blockstore').Blockstore} config.blockstore\n * @param {import('interface-datastore').Datastore} config.root\n * @param {loadCodec} config.loadCodec\n */\nasync function createMarkedSet ({ pins, blockstore, loadCodec, root }) {\n  const mfsSource = (async function * () {\n    let mh\n    try {\n      mh = await root.get(MFS_ROOT_KEY)\n    } catch (/** @type {any} */ err) {\n      if (err.code === ERR_NOT_FOUND) {\n        log('No blocks in MFS')\n        return\n      }\n\n      throw err\n    }\n\n    const rootCid = CID.decode(mh)\n    yield rootCid\n    yield * walkDag(rootCid, blockstore, loadCodec)\n  })()\n\n  const pinsSource = merge(\n    map(pins.recursiveKeys(), ({ cid }) => cid),\n    pins.indirectKeys(),\n    map(pins.directKeys(), ({ cid }) => cid),\n    mfsSource\n  )\n\n  const output = new Set()\n\n  for await (const cid of merge(pinsSource, mfsSource)) {\n    output.add(base32.encode(cid.multihash.bytes))\n  }\n\n  return output\n}\n\n/**\n * Delete all blocks that are not marked as in use\n *\n * @param {object} arg\n * @param {Blockstore} arg.blockstore\n * @param {Set<string>} markedSet\n * @param {AsyncIterable<CID>} blockKeys\n */\nasync function * deleteUnmarkedBlocks ({ blockstore }, markedSet, blockKeys) {\n  // Iterate through all blocks and find those that are not in the marked set\n  // blockKeys yields { key: Key() }\n  let blocksCount = 0\n  let removedBlocksCount = 0\n\n  /**\n   * @param {CID} cid\n   */\n  const removeBlock = async (cid) => {\n    return async function remove () {\n      blocksCount++\n\n      try {\n        const b32 = base32.encode(cid.multihash.bytes)\n\n        if (markedSet.has(b32)) {\n          return null\n        }\n\n        try {\n          await blockstore.delete(cid)\n          removedBlocksCount++\n        } catch (/** @type {any} */ err) {\n          return {\n            err: new Error(`Could not delete block with CID ${cid}: ${err.message}`)\n          }\n        }\n\n        return { cid }\n      } catch (/** @type {any} */ err) {\n        const msg = `Could delete block with CID ${cid}`\n        log(msg, err)\n        return { err: new Error(msg + `: ${err.message}`) }\n      }\n    }\n  }\n\n  yield * pipe(\n    parallelBatch(map(blockKeys, removeBlock), BLOCK_RM_CONCURRENCY),\n    // filter nulls (blocks that were retained)\n    source => filter(source, Boolean)\n  )\n\n  log(`Marked set has ${markedSet.size} unique blocks. Blockstore has ${blocksCount} blocks. ` +\n  `Deleted ${removedBlocksCount} blocks.`)\n}\n","import _get from 'just-safe-get'\nimport debug from 'debug'\nimport errCode from 'err-code'\nimport * as migrator from 'ipfs-repo-migrations'\nimport bytes from 'bytes'\nimport merge from 'merge-options'\nimport * as CONSTANTS from './constants.js'\nimport { version } from './version.js'\nimport { config } from './config.js'\nimport { spec } from './spec.js'\nimport { apiAddr } from './api-addr.js'\nimport { createIdStore } from './idstore.js'\nimport defaultOptions from './default-options.js'\nimport defaultDatastore from './default-datastore.js'\nimport * as ERRORS from './errors.js'\nimport { PinManager } from './pin-manager.js'\nimport { createPinnedBlockstore } from './pinned-blockstore.js'\n// @ts-ignore - no types\nimport mortice from 'mortice'\nimport { gc } from './gc.js'\n\nconst log = debug('ipfs:repo')\n\nconst noLimit = Number.MAX_SAFE_INTEGER\nconst AUTO_MIGRATE_CONFIG_KEY = 'repoAutoMigrate'\n\n/**\n * @typedef {import('./types').Options} Options\n * @typedef {import('./types').RepoLock} RepoLock\n * @typedef {import('./types').LockCloser} LockCloser\n * @typedef {import('./types').GCLock} GCLock\n * @typedef {import('./types').Stat} Stat\n * @typedef {import('./types').Config} Config\n * @typedef {import('interface-datastore').Datastore} Datastore\n * @typedef {import('interface-blockstore').Blockstore} Blockstore\n * @typedef {import('./types').Backends} Backends\n * @typedef {import('./types').IPFSRepo} IPFSRepo\n */\n\n/**\n * IPFSRepo implements all required functionality to read and write to an ipfs repo.\n */\nclass Repo {\n  /**\n   * @param {string} path - Where this repo is stored\n   * @param {import('./types').loadCodec} loadCodec - a function that will load multiformat block codecs\n   * @param {Backends} backends - backends used by this repo\n   * @param {Partial<Options>} [options] - Configuration\n   */\n  constructor (path, loadCodec, backends, options) {\n    if (typeof path !== 'string') {\n      throw new Error('missing repo path')\n    }\n\n    if (typeof loadCodec !== 'function') {\n      throw new Error('missing codec loader')\n    }\n\n    /** @type {Options} */\n    this.options = merge(defaultOptions, options)\n    this.closed = true\n    this.path = path\n    this.root = backends.root\n    this.datastore = backends.datastore\n    this.keys = backends.keys\n\n    const blockstore = backends.blocks\n    const pinstore = backends.pins\n\n    this.pins = new PinManager({ pinstore, blockstore, loadCodec })\n\n    // this blockstore will not delete blocks that have been pinned\n    const pinnedBlockstore = createPinnedBlockstore(this.pins, blockstore)\n\n    // this blockstore will extract blocks from multihashes with the identity codec\n    this.blocks = createIdStore(pinnedBlockstore)\n\n    this.version = version(this.root)\n    this.config = config(this.root)\n    this.spec = spec(this.root)\n    this.apiAddr = apiAddr(this.root)\n\n    /** @type {GCLock} */\n    this.gcLock = mortice({\n      name: path,\n      singleProcess: this.options.repoOwner !== false\n    })\n\n    this.gc = gc({ gcLock: this.gcLock, pins: this.pins, blockstore: this.blocks, root: this.root, loadCodec })\n  }\n\n  /**\n   * Initialize a new repo.\n   *\n   * @param {import('./types').Config} config - config to write into `config`.\n   * @returns {Promise<void>}\n   */\n  async init (config) {\n    log('initializing at: %s', this.path)\n    await this._openRoot()\n    await this.config.replace(buildConfig(config))\n    await this.spec.set(buildDatastoreSpec(config))\n    await this.version.set(CONSTANTS.repoVersion)\n  }\n\n  /**\n   * Check if the repo is already initialized.\n   *\n   * @returns {Promise<boolean>}\n   */\n  async isInitialized () {\n    if (!this.closed) {\n      // repo is open, must be initialized\n      return true\n    }\n\n    try {\n      // have to open the root datastore in the browser before\n      // we can check whether it's been initialized\n      await this._openRoot()\n      await this._checkInitialized()\n      await this.root.close()\n\n      return true\n    } catch (/** @type {any} */ err) {\n      // FIXME: do not use exceptions for flow control\n      return false\n    }\n  }\n\n  /**\n   * Open the repo. If the repo is already open an error will be thrown.\n   * If the repo is not initialized it will throw an error.\n   *\n   * @returns {Promise<void>}\n   */\n  async open () {\n    if (!this.closed) {\n      throw errCode(new Error('repo is already open'), ERRORS.ERR_REPO_ALREADY_OPEN)\n    }\n    log('opening at: %s', this.path)\n\n    // check if the repo is already initialized\n    try {\n      await this._openRoot()\n      await this._checkInitialized()\n\n      this._lockfile = await this._openLock()\n      log('acquired repo.lock')\n\n      const isCompatible = await this.version.check(CONSTANTS.repoVersion)\n\n      if (!isCompatible) {\n        if (await this._isAutoMigrationEnabled()) {\n          await this._migrate(CONSTANTS.repoVersion, {\n            root: this.root,\n            datastore: this.datastore,\n            pins: this.pins.pinstore,\n            blocks: this.pins.blockstore,\n            keys: this.keys\n          })\n        } else {\n          throw new ERRORS.InvalidRepoVersionError('Incompatible repo versions. Automatic migrations disabled. Please migrate the repo manually.')\n        }\n      }\n\n      log('creating datastore')\n      await this.datastore.open()\n\n      log('creating blocks')\n      await this.blocks.open()\n\n      log('creating keystore')\n      await this.keys.open()\n\n      log('creating pins')\n      await this.pins.pinstore.open()\n\n      this.closed = false\n      log('all opened')\n    } catch (/** @type {any} */ err) {\n      if (this._lockfile) {\n        try {\n          await this._closeLock()\n          this._lockfile = null\n        } catch (/** @type {any} */ err2) {\n          log('error removing lock', err2)\n        }\n      }\n\n      throw err\n    }\n  }\n\n  /**\n   * Opens the root backend, catching and ignoring an 'Already open' error\n   *\n   * @private\n   */\n  async _openRoot () {\n    try {\n      await this.root.open()\n    } catch (/** @type {any} */ err) {\n      if (err.message !== 'Already open') {\n        throw err\n      }\n    }\n  }\n\n  /**\n   * Creates a lock on the repo if a locker is specified. The lockfile object will\n   * be returned in the callback if one has been created.\n   *\n   * @private\n   * @returns {Promise<LockCloser>}\n   */\n  async _openLock () {\n    const lockfile = await this.options.repoLock.lock(this.path)\n\n    if (typeof lockfile.close !== 'function') {\n      throw errCode(new Error('Locks must have a close method'), 'ERR_NO_CLOSE_FUNCTION')\n    }\n\n    return lockfile\n  }\n\n  /**\n   * Closes the lock on the repo\n   *\n   * @private\n   */\n  _closeLock () {\n    return this._lockfile && this._lockfile.close()\n  }\n\n  /**\n   * Check if the repo is already initialized.\n   *\n   * @private\n   */\n  async _checkInitialized () {\n    log('init check')\n    let config\n    try {\n      [config] = await Promise.all([\n        this.config.exists(),\n        this.spec.exists(),\n        this.version.exists()\n      ])\n    } catch (/** @type {any} */ err) {\n      if (err.code === 'ERR_NOT_FOUND') {\n        throw errCode(new Error('repo is not initialized yet'), ERRORS.ERR_REPO_NOT_INITIALIZED, {\n          path: this.path\n        })\n      }\n\n      throw err\n    }\n\n    if (!config) {\n      throw errCode(new Error('repo is not initialized yet'), ERRORS.ERR_REPO_NOT_INITIALIZED, {\n        path: this.path\n      })\n    }\n  }\n\n  /**\n   * Close the repo and cleanup.\n   *\n   * @returns {Promise<void>}\n   */\n  async close () {\n    if (this.closed) {\n      throw errCode(new Error('repo is already closed'), ERRORS.ERR_REPO_ALREADY_CLOSED)\n    }\n    log('closing at: %s', this.path)\n\n    try {\n      // Delete api, ignoring irrelevant errors\n      await this.apiAddr.delete()\n    } catch (/** @type {any} */ err) {\n      if (err.code !== ERRORS.ERR_REPO_NOT_INITIALIZED && !err.message.startsWith('ENOENT')) {\n        throw err\n      }\n    }\n\n    await Promise.all([\n      this.root,\n      this.blocks,\n      this.keys,\n      this.datastore,\n      this.pins.pinstore\n    ].map((store) => store && store.close()))\n\n    log('unlocking')\n    this.closed = true\n    await this._closeLock()\n  }\n\n  /**\n   * Check if a repo exists.\n   *\n   * @returns {Promise<boolean>}\n   */\n  exists () {\n    return this.version.exists()\n  }\n\n  /**\n   * Get repo status.\n   *\n   * @returns {Promise<Stat>}\n   */\n  async stat () {\n    if (this.datastore && this.keys) {\n      const [storageMax, blocks, version, datastore, keys] = await Promise.all([\n        this._storageMaxStat(),\n        this._blockStat(),\n        this.version.get(),\n        getSize(this.datastore),\n        getSize(this.keys)\n      ])\n      const size = blocks.size + datastore + keys\n\n      return {\n        repoPath: this.path,\n        storageMax,\n        version: version,\n        numObjects: blocks.count,\n        repoSize: size\n      }\n    }\n    throw errCode(new Error('repo is not initialized yet'), ERRORS.ERR_REPO_NOT_INITIALIZED, {\n      path: this.path\n    })\n  }\n\n  /**\n   * @private\n   */\n  async _isAutoMigrationEnabled () {\n    if (this.options.autoMigrate !== undefined) {\n      return this.options.autoMigrate\n    }\n\n    // TODO we need to figure out the priority here, between repo options and config.\n    let autoMigrateConfig\n    try {\n      autoMigrateConfig = await this.config.get(AUTO_MIGRATE_CONFIG_KEY)\n    } catch (/** @type {any} */ e) {\n      if (e.code === ERRORS.NotFoundError.code) {\n        autoMigrateConfig = true // Config's default value is True\n      } else {\n        throw e\n      }\n    }\n\n    return autoMigrateConfig\n  }\n\n  /**\n   * Internal migration\n   *\n   * @private\n   * @param {number} toVersion\n   * @param {Backends} backends\n   */\n  async _migrate (toVersion, backends) {\n    const currentRepoVersion = await this.version.get()\n\n    if (currentRepoVersion > toVersion) {\n      log(`reverting to version ${toVersion}`)\n      return migrator.revert(this.path, backends, this.options, toVersion, {\n        ignoreLock: true,\n        onProgress: this.options.onMigrationProgress\n      })\n    } else {\n      log(`migrating to version ${toVersion}`)\n      return migrator.migrate(this.path, backends, this.options, toVersion, {\n        ignoreLock: true,\n        onProgress: this.options.onMigrationProgress\n      })\n    }\n  }\n\n  /**\n   * @private\n   */\n  async _storageMaxStat () {\n    try {\n      const max = /** @type {number} */(await this.config.get('Datastore.StorageMax'))\n      return BigInt(bytes(max))\n    } catch (/** @type {any} */ err) {\n      return BigInt(noLimit)\n    }\n  }\n\n  /**\n   * @private\n   */\n  async _blockStat () {\n    let count = BigInt(0)\n    let size = BigInt(0)\n\n    if (this.blocks) {\n      for await (const { key, value } of this.blocks.query({})) {\n        count += BigInt(1)\n        size += BigInt(value.byteLength)\n        size += BigInt(key.bytes.byteLength)\n      }\n    }\n\n    return { count, size }\n  }\n}\n\n/**\n * @param {Datastore} datastore\n */\nasync function getSize (datastore) {\n  let sum = BigInt(0)\n  for await (const block of datastore.query({})) {\n    sum += BigInt(block.value.byteLength)\n    sum += BigInt(block.key.uint8Array().byteLength)\n  }\n  return sum\n}\n\n/**\n * @param {string} path - Where this repo is stored\n * @param {import('./types').loadCodec} loadCodec - a function that will load multiformat block codecs\n * @param {import('./types').Backends} backends - backends used by this repo\n * @param {Partial<Options>} [options] - Configuration\n * @returns {import('./types').IPFSRepo}\n */\nexport function createRepo (path, loadCodec, backends, options) {\n  return new Repo(path, loadCodec, backends, options)\n}\n\n/**\n * @param {import('./types').Config} _config\n */\nfunction buildConfig (_config) {\n  _config.Datastore = Object.assign({}, defaultDatastore, _get(_config, 'datastore'))\n\n  return _config\n}\n\n/**\n * @param {import('./types').Config} _config\n */\nfunction buildDatastoreSpec (_config) {\n  /** @type { {type: string, mounts: Array<{mountpoint: string, type: string, prefix: string, child: {type: string, path: 'string', sync: boolean, shardFunc: string}}>}} */\n  const spec = {\n    ...defaultDatastore.Spec,\n    ..._get(_config, 'Datastore.Spec')\n  }\n\n  return {\n    type: spec.type,\n    mounts: spec.mounts.map((mounting) => ({\n      mountpoint: mounting.mountpoint,\n      type: mounting.child.type,\n      path: mounting.child.path,\n      shardFunc: mounting.child.shardFunc\n    }))\n  }\n}\n","import { Key } from 'interface-datastore/key'\n// @ts-expect-error readme is unused\n// eslint-disable-next-line no-unused-vars\nimport readme from './shard-readme.js'\n\n/**\n * @typedef {import('interface-datastore').Datastore} Datastore\n * @typedef {import('./types').Shard} Shard\n */\n\nexport const PREFIX = '/repo/flatfs/shard/'\nexport const SHARDING_FN = 'SHARDING'\nexport const README_FN = '_README'\n\n/**\n * @implements {Shard}\n */\nexport class ShardBase {\n  /**\n   * @param {any} param\n   */\n  constructor (param) {\n    this.param = param\n    this.name = 'base'\n    this._padding = ''\n  }\n\n  /**\n   * @param {string} s\n   */\n  fun (s) {\n    return 'implement me'\n  }\n\n  toString () {\n    return `${PREFIX}v1/${this.name}/${this.param}`\n  }\n}\n/**\n * @implements {Shard}\n */\nexport class Prefix extends ShardBase {\n  /**\n   * @param {number} prefixLen\n   */\n  constructor (prefixLen) {\n    super(prefixLen)\n    this._padding = ''.padStart(prefixLen, '_')\n    this.name = 'prefix'\n  }\n\n  /**\n   * @param {string} noslash\n   */\n  fun (noslash) {\n    return (noslash + this._padding).slice(0, this.param)\n  }\n}\n\nexport class Suffix extends ShardBase {\n  /**\n   * @param {number} suffixLen\n   */\n  constructor (suffixLen) {\n    super(suffixLen)\n    this._padding = ''.padStart(suffixLen, '_')\n    this.name = 'suffix'\n  }\n\n  /**\n   * @param {string} noslash\n   */\n  fun (noslash) {\n    const s = this._padding + noslash\n    return s.slice(s.length - this.param)\n  }\n}\n\nexport class NextToLast extends ShardBase {\n  /**\n   * @param {number} suffixLen\n   */\n  constructor (suffixLen) {\n    super(suffixLen)\n    this._padding = ''.padStart(suffixLen + 1, '_')\n    this.name = 'next-to-last'\n  }\n\n  /**\n   * @param {string} noslash\n   */\n  fun (noslash) {\n    const s = this._padding + noslash\n    const offset = s.length - this.param - 1\n    return s.slice(offset, offset + this.param)\n  }\n}\n\n/**\n * Convert a given string to the matching sharding function.\n *\n * @param {string} str\n * @returns {Shard}\n */\nexport function parseShardFun (str) {\n  str = str.trim()\n\n  if (str.length === 0) {\n    throw new Error('empty shard string')\n  }\n\n  if (!str.startsWith(PREFIX)) {\n    throw new Error(`invalid or no path prefix: ${str}`)\n  }\n\n  const parts = str.slice(PREFIX.length).split('/')\n  const version = parts[0]\n\n  if (version !== 'v1') {\n    throw new Error(`expect 'v1' version, got '${version}'`)\n  }\n\n  const name = parts[1]\n\n  if (!parts[2]) {\n    throw new Error('missing param')\n  }\n\n  const param = parseInt(parts[2], 10)\n\n  switch (name) {\n    case 'prefix':\n      return new Prefix(param)\n    case 'suffix':\n      return new Suffix(param)\n    case 'next-to-last':\n      return new NextToLast(param)\n    default:\n      throw new Error(`unkown sharding function: ${name}`)\n  }\n}\n\n/**\n * @param {string | Uint8Array} path\n * @param {Datastore} store\n */\nexport const readShardFun = async (path, store) => {\n  const key = new Key(path).child(new Key(SHARDING_FN))\n  // @ts-ignore\n  const get = typeof store.getRaw === 'function' ? store.getRaw.bind(store) : store.get.bind(store)\n  const res = await get(key)\n  return parseShardFun(new TextDecoder().decode(res || '').trim())\n}\n\nexport { default as readme } from './shard-readme.js'\n","import { Key } from 'interface-datastore'\nimport {\n  readShardFun,\n  SHARDING_FN,\n  README_FN,\n  readme\n} from './shard.js'\nimport { BaseDatastore } from './base.js'\nimport { KeyTransformDatastore } from './keytransform.js'\nimport * as Errors from './errors.js'\n\nconst shardKey = new Key(SHARDING_FN)\nconst shardReadmeKey = new Key(README_FN)\n/**\n * @typedef {import('interface-datastore').Datastore} Datastore\n * @typedef {import('interface-datastore').Options} Options\n * @typedef {import('interface-datastore').Batch} Batch\n * @typedef {import('interface-datastore').Query} Query\n * @typedef {import('interface-datastore').QueryFilter} QueryFilter\n * @typedef {import('interface-datastore').QueryOrder} QueryOrder\n * @typedef {import('interface-datastore').KeyQuery} KeyQuery\n * @typedef {import('interface-datastore').KeyQueryFilter} KeyQueryFilter\n * @typedef {import('interface-datastore').KeyQueryOrder} KeyQueryOrder\n * @typedef {import('interface-datastore').Pair} Pair\n * @typedef {import('./types').Shard} Shard\n *\n */\n/**\n * @template TValue\n * @typedef {import('interface-store').Await<TValue> } Await\n */\n\n/**\n * @template TEntry\n * @typedef {import('interface-store').AwaitIterable<TEntry>} AwaitIterable\n */\n\n/**\n * Backend independent abstraction of go-ds-flatfs.\n *\n * Wraps another datastore such that all values are stored\n * sharded according to the given sharding function.\n */\nexport class ShardingDatastore extends BaseDatastore {\n  /**\n   * @param {Datastore} store\n   * @param {Shard} shard\n   */\n  constructor (store, shard) {\n    super()\n\n    this.child = new KeyTransformDatastore(store, {\n      convert: this._convertKey.bind(this),\n      invert: this._invertKey.bind(this)\n    })\n    this.shard = shard\n  }\n\n  async open () {\n    await this.child.open()\n\n    this.shard = await ShardingDatastore.create(this.child, this.shard)\n  }\n\n  /**\n   * @param {Key} key\n   */\n  _convertKey (key) {\n    const s = key.toString()\n    if (s === shardKey.toString() || s === shardReadmeKey.toString()) {\n      return key\n    }\n\n    const parent = new Key(this.shard.fun(s))\n    return parent.child(key)\n  }\n\n  /**\n   * @param {Key} key\n   */\n  _invertKey (key) {\n    const s = key.toString()\n    if (s === shardKey.toString() || s === shardReadmeKey.toString()) {\n      return key\n    }\n    return Key.withNamespaces(key.list().slice(1))\n  }\n\n  /**\n   * @deprecated\n   * @param {Datastore} store\n   * @param {Shard} shard\n   */\n  static async createOrOpen (store, shard) {\n    try {\n      await ShardingDatastore.create(store, shard)\n    } catch (/** @type {any} */ err) {\n      if (err && err.message !== 'datastore exists') throw err\n    }\n    return ShardingDatastore.open(store)\n  }\n\n  /**\n   * @deprecated\n   * @param {Datastore} store\n   */\n  static async open (store) {\n    const shard = await readShardFun('/', store)\n    return new ShardingDatastore(store, shard)\n  }\n\n  /**\n   * @param {Datastore} store\n   * @param {Shard} shard\n   */\n  static async create (store, shard) {\n    const hasShard = await store.has(shardKey)\n    if (!hasShard && !shard) {\n      throw Errors.dbOpenFailedError(Error('Shard is required when datastore doesn\\'t have a shard key already.'))\n    }\n    if (!hasShard) {\n      // @ts-ignore i have no idea what putRaw is or saw any implementation\n      const put = typeof store.putRaw === 'function' ? store.putRaw.bind(store) : store.put.bind(store)\n      await Promise.all([\n        put(shardKey, new TextEncoder().encode(shard.toString() + '\\n')),\n        put(shardReadmeKey, new TextEncoder().encode(readme))\n      ])\n\n      return shard\n    }\n\n    // test shards\n    const diskShard = await readShardFun('/', store)\n    const a = (diskShard || '').toString()\n    const b = shard.toString()\n    if (a !== b) {\n      throw new Error(`specified fun ${b} does not match repo shard fun ${a}`)\n    }\n    return diskShard\n  }\n\n  /**\n   * @param {Key} key\n   * @param {Uint8Array} val\n   * @param {Options} [options]\n   */\n  put (key, val, options) {\n    return this.child.put(key, val, options)\n  }\n\n  /**\n   * @param {Key} key\n   * @param {Options} [options]\n   */\n  get (key, options) {\n    return this.child.get(key, options)\n  }\n\n  /**\n   * @param {Key} key\n   * @param {Options} [options]\n   */\n  has (key, options) {\n    return this.child.has(key, options)\n  }\n\n  /**\n   * @param {Key} key\n   * @param {Options} [options]\n   */\n  delete (key, options) {\n    return this.child.delete(key, options)\n  }\n\n  /**\n   * @param {AwaitIterable<Pair>} source\n   * @param {Options} [options]\n   * @returns {AsyncIterable<Pair>}\n   */\n  async * putMany (source, options = {}) {\n    yield * this.child.putMany(source, options)\n  }\n\n  /**\n   * @param {AwaitIterable<Key>} source\n   * @param {Options} [options]\n   * @returns {AsyncIterable<Uint8Array>}\n   */\n  async * getMany (source, options = {}) {\n    yield * this.child.getMany(source, options)\n  }\n\n  /**\n   * @param {AwaitIterable<Key>} source\n   * @param {Options} [options]\n   * @returns {AsyncIterable<Key>}\n   */\n  async * deleteMany (source, options = {}) {\n    yield * this.child.deleteMany(source, options)\n  }\n\n  batch () {\n    return this.child.batch()\n  }\n\n  /**\n   * @param {Query} q\n   * @param {Options} [options]\n   */\n  query (q, options) {\n    /** @type {Query} */\n    const tq = {\n      ...q,\n      filters: [\n        /** @type {QueryFilter} */\n        ({ key }) => key.toString() !== shardKey.toString(),\n        /** @type {QueryFilter} */\n        ({ key }) => key.toString() !== shardReadmeKey.toString()\n      ].concat(q.filters || [])\n    }\n\n    return this.child.query(tq, options)\n  }\n\n  /**\n   * @param {KeyQuery} q\n   * @param {Options} [options]\n   */\n  queryKeys (q, options) {\n    /** @type {KeyQuery} */\n    const tq = {\n      ...q,\n      filters: [\n        /** @type {KeyQueryFilter} */\n        key => key.toString() !== shardKey.toString(),\n        /** @type {KeyQueryFilter} */\n        key => key.toString() !== shardReadmeKey.toString()\n      ].concat(q.filters || [])\n    }\n\n    return this.child.queryKeys(tq, options)\n  }\n\n  close () {\n    return this.child.close()\n  }\n}\n","// base-x encoding / decoding\n// Copyright (c) 2018 base-x contributors\n// Copyright (c) 2014-2018 The Bitcoin Core developers (base58.cpp)\n// Distributed under the MIT software license, see the accompanying\n// file LICENSE or http://www.opensource.org/licenses/mit-license.php.\nfunction base (ALPHABET, name) {\n  if (ALPHABET.length >= 255) { throw new TypeError('Alphabet too long') }\n  var BASE_MAP = new Uint8Array(256);\n  for (var j = 0; j < BASE_MAP.length; j++) {\n    BASE_MAP[j] = 255;\n  }\n  for (var i = 0; i < ALPHABET.length; i++) {\n    var x = ALPHABET.charAt(i);\n    var xc = x.charCodeAt(0);\n    if (BASE_MAP[xc] !== 255) { throw new TypeError(x + ' is ambiguous') }\n    BASE_MAP[xc] = i;\n  }\n  var BASE = ALPHABET.length;\n  var LEADER = ALPHABET.charAt(0);\n  var FACTOR = Math.log(BASE) / Math.log(256); // log(BASE) / log(256), rounded up\n  var iFACTOR = Math.log(256) / Math.log(BASE); // log(256) / log(BASE), rounded up\n  function encode (source) {\n    if (source instanceof Uint8Array) ; else if (ArrayBuffer.isView(source)) {\n      source = new Uint8Array(source.buffer, source.byteOffset, source.byteLength);\n    } else if (Array.isArray(source)) {\n      source = Uint8Array.from(source);\n    }\n    if (!(source instanceof Uint8Array)) { throw new TypeError('Expected Uint8Array') }\n    if (source.length === 0) { return '' }\n        // Skip & count leading zeroes.\n    var zeroes = 0;\n    var length = 0;\n    var pbegin = 0;\n    var pend = source.length;\n    while (pbegin !== pend && source[pbegin] === 0) {\n      pbegin++;\n      zeroes++;\n    }\n        // Allocate enough space in big-endian base58 representation.\n    var size = ((pend - pbegin) * iFACTOR + 1) >>> 0;\n    var b58 = new Uint8Array(size);\n        // Process the bytes.\n    while (pbegin !== pend) {\n      var carry = source[pbegin];\n            // Apply \"b58 = b58 * 256 + ch\".\n      var i = 0;\n      for (var it1 = size - 1; (carry !== 0 || i < length) && (it1 !== -1); it1--, i++) {\n        carry += (256 * b58[it1]) >>> 0;\n        b58[it1] = (carry % BASE) >>> 0;\n        carry = (carry / BASE) >>> 0;\n      }\n      if (carry !== 0) { throw new Error('Non-zero carry') }\n      length = i;\n      pbegin++;\n    }\n        // Skip leading zeroes in base58 result.\n    var it2 = size - length;\n    while (it2 !== size && b58[it2] === 0) {\n      it2++;\n    }\n        // Translate the result into a string.\n    var str = LEADER.repeat(zeroes);\n    for (; it2 < size; ++it2) { str += ALPHABET.charAt(b58[it2]); }\n    return str\n  }\n  function decodeUnsafe (source) {\n    if (typeof source !== 'string') { throw new TypeError('Expected String') }\n    if (source.length === 0) { return new Uint8Array() }\n    var psz = 0;\n        // Skip leading spaces.\n    if (source[psz] === ' ') { return }\n        // Skip and count leading '1's.\n    var zeroes = 0;\n    var length = 0;\n    while (source[psz] === LEADER) {\n      zeroes++;\n      psz++;\n    }\n        // Allocate enough space in big-endian base256 representation.\n    var size = (((source.length - psz) * FACTOR) + 1) >>> 0; // log(58) / log(256), rounded up.\n    var b256 = new Uint8Array(size);\n        // Process the characters.\n    while (source[psz]) {\n            // Decode character\n      var carry = BASE_MAP[source.charCodeAt(psz)];\n            // Invalid character\n      if (carry === 255) { return }\n      var i = 0;\n      for (var it3 = size - 1; (carry !== 0 || i < length) && (it3 !== -1); it3--, i++) {\n        carry += (BASE * b256[it3]) >>> 0;\n        b256[it3] = (carry % 256) >>> 0;\n        carry = (carry / 256) >>> 0;\n      }\n      if (carry !== 0) { throw new Error('Non-zero carry') }\n      length = i;\n      psz++;\n    }\n        // Skip trailing spaces.\n    if (source[psz] === ' ') { return }\n        // Skip leading zeroes in b256.\n    var it4 = size - length;\n    while (it4 !== size && b256[it4] === 0) {\n      it4++;\n    }\n    var vch = new Uint8Array(zeroes + (size - it4));\n    var j = zeroes;\n    while (it4 !== size) {\n      vch[j++] = b256[it4++];\n    }\n    return vch\n  }\n  function decode (string) {\n    var buffer = decodeUnsafe(string);\n    if (buffer) { return buffer }\n    throw new Error(`Non-${name} character`)\n  }\n  return {\n    encode: encode,\n    decodeUnsafe: decodeUnsafe,\n    decode: decode\n  }\n}\nvar src = base;\n\nvar _brrp__multiformats_scope_baseX = src;\n\nexport default _brrp__multiformats_scope_baseX;\n","const empty = new Uint8Array(0)\n\n/**\n * @param {Uint8Array} d\n */\nconst toHex = d => d.reduce((hex, byte) => hex + byte.toString(16).padStart(2, '0'), '')\n\n/**\n * @param {string} hex\n */\nconst fromHex = hex => {\n  const hexes = hex.match(/../g)\n  return hexes ? new Uint8Array(hexes.map(b => parseInt(b, 16))) : empty\n}\n\n/**\n * @param {Uint8Array} aa\n * @param {Uint8Array} bb\n */\nconst equals = (aa, bb) => {\n  if (aa === bb) return true\n  if (aa.byteLength !== bb.byteLength) {\n    return false\n  }\n\n  for (let ii = 0; ii < aa.byteLength; ii++) {\n    if (aa[ii] !== bb[ii]) {\n      return false\n    }\n  }\n\n  return true\n}\n\n/**\n * @param {ArrayBufferView|ArrayBuffer|Uint8Array} o\n * @returns {Uint8Array}\n */\nconst coerce = o => {\n  if (o instanceof Uint8Array && o.constructor.name === 'Uint8Array') return o\n  if (o instanceof ArrayBuffer) return new Uint8Array(o)\n  if (ArrayBuffer.isView(o)) {\n    return new Uint8Array(o.buffer, o.byteOffset, o.byteLength)\n  }\n  throw new Error('Unknown type, must be binary type')\n}\n\n/**\n * @param {any} o\n * @returns {o is ArrayBuffer|ArrayBufferView}\n */\nconst isBinary = o =>\n  o instanceof ArrayBuffer || ArrayBuffer.isView(o)\n\n/**\n * @param {string} str\n * @returns {Uint8Array}\n */\nconst fromString = str => (new TextEncoder()).encode(str)\n\n/**\n * @param {Uint8Array} b\n * @returns {string}\n */\nconst toString = b => (new TextDecoder()).decode(b)\n\nexport { equals, coerce, isBinary, fromHex, toHex, fromString, toString, empty }\n","import basex from '../../vendor/base-x.js'\nimport { coerce } from '../bytes.js'\n// Linter can't see that API is used in types.\n// eslint-disable-next-line\nimport * as API from './interface.js'\n\n/**\n * Class represents both BaseEncoder and MultibaseEncoder meaning it\n * can be used to encode to multibase or base encode without multibase\n * prefix.\n *\n * @class\n * @template {string} Base\n * @template {string} Prefix\n * @implements {API.MultibaseEncoder<Prefix>}\n * @implements {API.BaseEncoder}\n */\nclass Encoder {\n  /**\n   * @param {Base} name\n   * @param {Prefix} prefix\n   * @param {(bytes:Uint8Array) => string} baseEncode\n   */\n  constructor (name, prefix, baseEncode) {\n    this.name = name\n    this.prefix = prefix\n    this.baseEncode = baseEncode\n  }\n\n  /**\n   * @param {Uint8Array} bytes\n   * @returns {API.Multibase<Prefix>}\n   */\n  encode (bytes) {\n    if (bytes instanceof Uint8Array) {\n      return `${this.prefix}${this.baseEncode(bytes)}`\n    } else {\n      throw Error('Unknown type, must be binary type')\n    }\n  }\n}\n\n/**\n * @template {string} Prefix\n */\n/**\n * Class represents both BaseDecoder and MultibaseDecoder so it could be used\n * to decode multibases (with matching prefix) or just base decode strings\n * with corresponding base encoding.\n *\n * @class\n * @template {string} Base\n * @template {string} Prefix\n * @implements {API.MultibaseDecoder<Prefix>}\n * @implements {API.UnibaseDecoder<Prefix>}\n * @implements {API.BaseDecoder}\n */\nclass Decoder {\n  /**\n   * @param {Base} name\n   * @param {Prefix} prefix\n   * @param {(text:string) => Uint8Array} baseDecode\n   */\n  constructor (name, prefix, baseDecode) {\n    this.name = name\n    this.prefix = prefix\n    /* c8 ignore next 3 */\n    if (prefix.codePointAt(0) === undefined) {\n      throw new Error('Invalid prefix character')\n    }\n    /** @private */\n    this.prefixCodePoint = /** @type {number} */ (prefix.codePointAt(0))\n    this.baseDecode = baseDecode\n  }\n\n  /**\n   * @param {string} text\n   */\n  decode (text) {\n    if (typeof text === 'string') {\n      if (text.codePointAt(0) !== this.prefixCodePoint) {\n        throw Error(`Unable to decode multibase string ${JSON.stringify(text)}, ${this.name} decoder only supports inputs prefixed with ${this.prefix}`)\n      }\n      return this.baseDecode(text.slice(this.prefix.length))\n    } else {\n      throw Error('Can only multibase decode strings')\n    }\n  }\n\n  /**\n   * @template {string} OtherPrefix\n   * @param {API.UnibaseDecoder<OtherPrefix>|ComposedDecoder<OtherPrefix>} decoder\n   * @returns {ComposedDecoder<Prefix|OtherPrefix>}\n   */\n  or (decoder) {\n    return or(this, decoder)\n  }\n}\n\n/**\n * @template {string} Prefix\n * @typedef {Record<Prefix, API.UnibaseDecoder<Prefix>>} Decoders\n */\n\n/**\n * @template {string} Prefix\n * @implements {API.MultibaseDecoder<Prefix>}\n * @implements {API.CombobaseDecoder<Prefix>}\n */\nclass ComposedDecoder {\n  /**\n   * @param {Decoders<Prefix>} decoders\n   */\n  constructor (decoders) {\n    this.decoders = decoders\n  }\n\n  /**\n   * @template {string} OtherPrefix\n   * @param {API.UnibaseDecoder<OtherPrefix>|ComposedDecoder<OtherPrefix>} decoder\n   * @returns {ComposedDecoder<Prefix|OtherPrefix>}\n   */\n  or (decoder) {\n    return or(this, decoder)\n  }\n\n  /**\n   * @param {string} input\n   * @returns {Uint8Array}\n   */\n  decode (input) {\n    const prefix = /** @type {Prefix} */ (input[0])\n    const decoder = this.decoders[prefix]\n    if (decoder) {\n      return decoder.decode(input)\n    } else {\n      throw RangeError(`Unable to decode multibase string ${JSON.stringify(input)}, only inputs prefixed with ${Object.keys(this.decoders)} are supported`)\n    }\n  }\n}\n\n/**\n * @template {string} L\n * @template {string} R\n * @param {API.UnibaseDecoder<L>|API.CombobaseDecoder<L>} left\n * @param {API.UnibaseDecoder<R>|API.CombobaseDecoder<R>} right\n * @returns {ComposedDecoder<L|R>}\n */\nexport const or = (left, right) => new ComposedDecoder(/** @type {Decoders<L|R>} */({\n  ...(left.decoders || { [/** @type API.UnibaseDecoder<L> */(left).prefix]: left }),\n  ...(right.decoders || { [/** @type API.UnibaseDecoder<R> */(right).prefix]: right })\n}))\n\n/**\n * @class\n * @template {string} Base\n * @template {string} Prefix\n * @implements {API.MultibaseCodec<Prefix>}\n * @implements {API.MultibaseEncoder<Prefix>}\n * @implements {API.MultibaseDecoder<Prefix>}\n * @implements {API.BaseCodec}\n * @implements {API.BaseEncoder}\n * @implements {API.BaseDecoder}\n */\nexport class Codec {\n  /**\n   * @param {Base} name\n   * @param {Prefix} prefix\n   * @param {(bytes:Uint8Array) => string} baseEncode\n   * @param {(text:string) => Uint8Array} baseDecode\n   */\n  constructor (name, prefix, baseEncode, baseDecode) {\n    this.name = name\n    this.prefix = prefix\n    this.baseEncode = baseEncode\n    this.baseDecode = baseDecode\n    this.encoder = new Encoder(name, prefix, baseEncode)\n    this.decoder = new Decoder(name, prefix, baseDecode)\n  }\n\n  /**\n   * @param {Uint8Array} input\n   */\n  encode (input) {\n    return this.encoder.encode(input)\n  }\n\n  /**\n   * @param {string} input\n   */\n  decode (input) {\n    return this.decoder.decode(input)\n  }\n}\n\n/**\n * @template {string} Base\n * @template {string} Prefix\n * @param {object} options\n * @param {Base} options.name\n * @param {Prefix} options.prefix\n * @param {(bytes:Uint8Array) => string} options.encode\n * @param {(input:string) => Uint8Array} options.decode\n * @returns {Codec<Base, Prefix>}\n */\nexport const from = ({ name, prefix, encode, decode }) =>\n  new Codec(name, prefix, encode, decode)\n\n/**\n * @template {string} Base\n * @template {string} Prefix\n * @param {object} options\n * @param {Base} options.name\n * @param {Prefix} options.prefix\n * @param {string} options.alphabet\n * @returns {Codec<Base, Prefix>}\n */\nexport const baseX = ({ prefix, name, alphabet }) => {\n  const { encode, decode } = basex(alphabet, name)\n  return from({\n    prefix,\n    name,\n    encode,\n    /**\n     * @param {string} text\n     */\n    decode: text => coerce(decode(text))\n  })\n}\n\n/**\n * @param {string} string\n * @param {string} alphabet\n * @param {number} bitsPerChar\n * @param {string} name\n * @returns {Uint8Array}\n */\nconst decode = (string, alphabet, bitsPerChar, name) => {\n  // Build the character lookup table:\n  /** @type {Record<string, number>} */\n  const codes = {}\n  for (let i = 0; i < alphabet.length; ++i) {\n    codes[alphabet[i]] = i\n  }\n\n  // Count the padding bytes:\n  let end = string.length\n  while (string[end - 1] === '=') {\n    --end\n  }\n\n  // Allocate the output:\n  const out = new Uint8Array((end * bitsPerChar / 8) | 0)\n\n  // Parse the data:\n  let bits = 0 // Number of bits currently in the buffer\n  let buffer = 0 // Bits waiting to be written out, MSB first\n  let written = 0 // Next byte to write\n  for (let i = 0; i < end; ++i) {\n    // Read one character from the string:\n    const value = codes[string[i]]\n    if (value === undefined) {\n      throw new SyntaxError(`Non-${name} character`)\n    }\n\n    // Append the bits to the buffer:\n    buffer = (buffer << bitsPerChar) | value\n    bits += bitsPerChar\n\n    // Write out some bits if the buffer has a byte's worth:\n    if (bits >= 8) {\n      bits -= 8\n      out[written++] = 0xff & (buffer >> bits)\n    }\n  }\n\n  // Verify that we have received just enough bits:\n  if (bits >= bitsPerChar || 0xff & (buffer << (8 - bits))) {\n    throw new SyntaxError('Unexpected end of data')\n  }\n\n  return out\n}\n\n/**\n * @param {Uint8Array} data\n * @param {string} alphabet\n * @param {number} bitsPerChar\n * @returns {string}\n */\nconst encode = (data, alphabet, bitsPerChar) => {\n  const pad = alphabet[alphabet.length - 1] === '='\n  const mask = (1 << bitsPerChar) - 1\n  let out = ''\n\n  let bits = 0 // Number of bits currently in the buffer\n  let buffer = 0 // Bits waiting to be written out, MSB first\n  for (let i = 0; i < data.length; ++i) {\n    // Slurp data into the buffer:\n    buffer = (buffer << 8) | data[i]\n    bits += 8\n\n    // Write out as much as we can:\n    while (bits > bitsPerChar) {\n      bits -= bitsPerChar\n      out += alphabet[mask & (buffer >> bits)]\n    }\n  }\n\n  // Partial character:\n  if (bits) {\n    out += alphabet[mask & (buffer << (bitsPerChar - bits))]\n  }\n\n  // Add padding characters until we hit a byte boundary:\n  if (pad) {\n    while ((out.length * bitsPerChar) & 7) {\n      out += '='\n    }\n  }\n\n  return out\n}\n\n/**\n * RFC4648 Factory\n *\n * @template {string} Base\n * @template {string} Prefix\n * @param {object} options\n * @param {Base} options.name\n * @param {Prefix} options.prefix\n * @param {string} options.alphabet\n * @param {number} options.bitsPerChar\n */\nexport const rfc4648 = ({ name, prefix, bitsPerChar, alphabet }) => {\n  return from({\n    prefix,\n    name,\n    encode (input) {\n      return encode(input, alphabet, bitsPerChar)\n    },\n    decode (input) {\n      return decode(input, alphabet, bitsPerChar, name)\n    }\n  })\n}\n","import { baseX } from './base.js'\n\nexport const base58btc = baseX({\n  name: 'base58btc',\n  prefix: 'z',\n  alphabet: '123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz'\n})\n\nexport const base58flickr = baseX({\n  name: 'base58flickr',\n  prefix: 'Z',\n  alphabet: '123456789abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ'\n})\n","import { rfc4648 } from './base.js'\n\nexport const base32 = rfc4648({\n  prefix: 'b',\n  name: 'base32',\n  alphabet: 'abcdefghijklmnopqrstuvwxyz234567',\n  bitsPerChar: 5\n})\n\nexport const base32upper = rfc4648({\n  prefix: 'B',\n  name: 'base32upper',\n  alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZ234567',\n  bitsPerChar: 5\n})\n\nexport const base32pad = rfc4648({\n  prefix: 'c',\n  name: 'base32pad',\n  alphabet: 'abcdefghijklmnopqrstuvwxyz234567=',\n  bitsPerChar: 5\n})\n\nexport const base32padupper = rfc4648({\n  prefix: 'C',\n  name: 'base32padupper',\n  alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZ234567=',\n  bitsPerChar: 5\n})\n\nexport const base32hex = rfc4648({\n  prefix: 'v',\n  name: 'base32hex',\n  alphabet: '0123456789abcdefghijklmnopqrstuv',\n  bitsPerChar: 5\n})\n\nexport const base32hexupper = rfc4648({\n  prefix: 'V',\n  name: 'base32hexupper',\n  alphabet: '0123456789ABCDEFGHIJKLMNOPQRSTUV',\n  bitsPerChar: 5\n})\n\nexport const base32hexpad = rfc4648({\n  prefix: 't',\n  name: 'base32hexpad',\n  alphabet: '0123456789abcdefghijklmnopqrstuv=',\n  bitsPerChar: 5\n})\n\nexport const base32hexpadupper = rfc4648({\n  prefix: 'T',\n  name: 'base32hexpadupper',\n  alphabet: '0123456789ABCDEFGHIJKLMNOPQRSTUV=',\n  bitsPerChar: 5\n})\n\nexport const base32z = rfc4648({\n  prefix: 'h',\n  name: 'base32z',\n  alphabet: 'ybndrfg8ejkmcpqxot1uwisza345h769',\n  bitsPerChar: 5\n})\n","// @ts-check\n\nimport { rfc4648 } from './base.js'\n\nexport const base64 = rfc4648({\n  prefix: 'm',\n  name: 'base64',\n  alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/',\n  bitsPerChar: 6\n})\n\nexport const base64pad = rfc4648({\n  prefix: 'M',\n  name: 'base64pad',\n  alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=',\n  bitsPerChar: 6\n})\n\nexport const base64url = rfc4648({\n  prefix: 'u',\n  name: 'base64url',\n  alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_',\n  bitsPerChar: 6\n})\n\nexport const base64urlpad = rfc4648({\n  prefix: 'U',\n  name: 'base64urlpad',\n  alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_=',\n  bitsPerChar: 6\n})\n","import debug from 'debug';\nimport { base58btc } from 'multiformats/bases/base58';\nimport { base32 } from 'multiformats/bases/base32';\nimport { base64 } from 'multiformats/bases/base64';\n// Add a formatter for converting to a base58 string\ndebug.formatters.b = (v) => {\n    return v == null ? 'undefined' : base58btc.baseEncode(v);\n};\n// Add a formatter for converting to a base32 string\ndebug.formatters.t = (v) => {\n    return v == null ? 'undefined' : base32.baseEncode(v);\n};\n// Add a formatter for converting to a base64 string\ndebug.formatters.m = (v) => {\n    return v == null ? 'undefined' : base64.baseEncode(v);\n};\n// Add a formatter for stringifying peer ids\ndebug.formatters.p = (v) => {\n    return v == null ? 'undefined' : v.toString();\n};\n// Add a formatter for stringifying CIDs\ndebug.formatters.c = (v) => {\n    return v == null ? 'undefined' : v.toString();\n};\n// Add a formatter for stringifying Datastore keys\ndebug.formatters.k = (v) => {\n    return v == null ? 'undefined' : v.toString();\n};\nexport function logger(name) {\n    return Object.assign(debug(name), {\n        error: debug(`${name}:error`),\n        trace: debug(`${name}:trace`)\n    });\n}\nexport function disable() {\n    debug.disable();\n}\nexport function enable(namespaces) {\n    debug.enable(namespaces);\n}\nexport function enabled(namespaces) {\n    return debug.enabled(namespaces);\n}\n//# sourceMappingURL=index.js.map","import { BaseDatastore } from './base.js'\nimport * as Errors from './errors.js'\nimport { logger } from '@libp2p/logger'\nimport { pushable } from 'it-pushable'\nimport drain from 'it-drain'\n\nconst log = logger('datastore:core:tiered')\n\n/**\n * @typedef {import('interface-datastore').Datastore} Datastore\n * @typedef {import('interface-datastore').Options} Options\n * @typedef {import('interface-datastore').Batch} Batch\n * @typedef {import('interface-datastore').Query} Query\n * @typedef {import('interface-datastore').KeyQuery} KeyQuery\n * @typedef {import('interface-datastore').Key} Key\n * @typedef {import('interface-datastore').Pair} Pair\n */\n\n/**\n * @template TEntry\n * @typedef {import('interface-store').AwaitIterable<TEntry>} AwaitIterable\n */\n\n/**\n * A datastore that can combine multiple stores. Puts and deletes\n * will write through to all datastores. Has and get will\n * try each store sequentially. Query will always try the\n * last one first.\n *\n */\nexport class TieredDatastore extends BaseDatastore {\n  /**\n   * @param {Datastore[]} stores\n   */\n  constructor (stores) {\n    super()\n\n    this.stores = stores.slice()\n  }\n\n  async open () {\n    try {\n      await Promise.all(this.stores.map((store) => store.open()))\n    } catch (/** @type {any} */ err) {\n      throw Errors.dbOpenFailedError(err)\n    }\n  }\n\n  /**\n   * @param {Key} key\n   * @param {Uint8Array} value\n   * @param {Options} [options]\n   */\n  async put (key, value, options) {\n    try {\n      await Promise.all(this.stores.map(store => store.put(key, value, options)))\n    } catch (/** @type {any} */ err) {\n      throw Errors.dbWriteFailedError(err)\n    }\n  }\n\n  /**\n   * @param {Key} key\n   * @param {Options} [options]\n   */\n  async get (key, options) {\n    for (const store of this.stores) {\n      try {\n        const res = await store.get(key, options)\n        if (res) return res\n      } catch (err) {\n        log.error(err)\n      }\n    }\n    throw Errors.notFoundError()\n  }\n\n  /**\n   * @param {Key} key\n   * @param {Options} [options]\n   */\n  async has (key, options) {\n    for (const s of this.stores) {\n      if (await s.has(key, options)) {\n        return true\n      }\n    }\n\n    return false\n  }\n\n  /**\n   * @param {Key} key\n   * @param {Options} [options]\n   */\n  async delete (key, options) {\n    try {\n      await Promise.all(this.stores.map(store => store.delete(key, options)))\n    } catch (/** @type {any} */ err) {\n      throw Errors.dbDeleteFailedError(err)\n    }\n  }\n\n  /**\n   * @param {AwaitIterable<Pair>} source\n   * @param {Options} [options]\n   * @returns {AsyncIterable<Pair>}\n   */\n  async * putMany (source, options = {}) {\n    let error\n    const pushables = this.stores.map(store => {\n      const source = pushable({\n        objectMode: true\n      })\n\n      drain(store.putMany(source, options))\n        .catch(err => {\n          // store threw while putting, make sure we bubble the error up\n          error = err\n        })\n\n      return source\n    })\n\n    try {\n      for await (const pair of source) {\n        if (error) {\n          throw error\n        }\n\n        pushables.forEach(p => p.push(pair))\n\n        yield pair\n      }\n    } finally {\n      pushables.forEach(p => p.end())\n    }\n  }\n\n  /**\n   * @param {AwaitIterable<Key>} source\n   * @param {Options} [options]\n   * @returns {AsyncIterable<Key>}\n   */\n  async * deleteMany (source, options = {}) {\n    let error\n    const pushables = this.stores.map(store => {\n      const source = pushable({\n        objectMode: true\n      })\n\n      drain(store.deleteMany(source, options))\n        .catch(err => {\n          // store threw while deleting, make sure we bubble the error up\n          error = err\n        })\n\n      return source\n    })\n\n    try {\n      for await (const key of source) {\n        if (error) {\n          throw error\n        }\n\n        pushables.forEach(p => p.push(key))\n\n        yield key\n      }\n    } finally {\n      pushables.forEach(p => p.end())\n    }\n  }\n\n  async close () {\n    await Promise.all(this.stores.map(store => store.close()))\n  }\n\n  /**\n   * @returns {Batch}\n   */\n  batch () {\n    const batches = this.stores.map(store => store.batch())\n\n    return {\n      put: (key, value) => {\n        batches.forEach(b => b.put(key, value))\n      },\n      delete: (key) => {\n        batches.forEach(b => b.delete(key))\n      },\n      commit: async (options) => {\n        for (const batch of batches) {\n          await batch.commit(options)\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {Query} q\n   * @param {Options} [options]\n   */\n  query (q, options) {\n    return this.stores[this.stores.length - 1].query(q, options)\n  }\n\n  /**\n   * @param {KeyQuery} q\n   * @param {Options} [options]\n   */\n  queryKeys (q, options) {\n    return this.stores[this.stores.length - 1].queryKeys(q, options)\n  }\n}\n","const empty = new Uint8Array(0);\nconst toHex = d => d.reduce((hex, byte) => hex + byte.toString(16).padStart(2, '0'), '');\nconst fromHex = hex => {\n  const hexes = hex.match(/../g);\n  return hexes ? new Uint8Array(hexes.map(b => parseInt(b, 16))) : empty;\n};\nconst equals = (aa, bb) => {\n  if (aa === bb)\n    return true;\n  if (aa.byteLength !== bb.byteLength) {\n    return false;\n  }\n  for (let ii = 0; ii < aa.byteLength; ii++) {\n    if (aa[ii] !== bb[ii]) {\n      return false;\n    }\n  }\n  return true;\n};\nconst coerce = o => {\n  if (o instanceof Uint8Array && o.constructor.name === 'Uint8Array')\n    return o;\n  if (o instanceof ArrayBuffer)\n    return new Uint8Array(o);\n  if (ArrayBuffer.isView(o)) {\n    return new Uint8Array(o.buffer, o.byteOffset, o.byteLength);\n  }\n  throw new Error('Unknown type, must be binary type');\n};\nconst isBinary = o => o instanceof ArrayBuffer || ArrayBuffer.isView(o);\nconst fromString = str => new TextEncoder().encode(str);\nconst toString = b => new TextDecoder().decode(b);\nexport {\n  equals,\n  coerce,\n  isBinary,\n  fromHex,\n  toHex,\n  fromString,\n  toString,\n  empty\n};","function base(ALPHABET, name) {\n  if (ALPHABET.length >= 255) {\n    throw new TypeError('Alphabet too long');\n  }\n  var BASE_MAP = new Uint8Array(256);\n  for (var j = 0; j < BASE_MAP.length; j++) {\n    BASE_MAP[j] = 255;\n  }\n  for (var i = 0; i < ALPHABET.length; i++) {\n    var x = ALPHABET.charAt(i);\n    var xc = x.charCodeAt(0);\n    if (BASE_MAP[xc] !== 255) {\n      throw new TypeError(x + ' is ambiguous');\n    }\n    BASE_MAP[xc] = i;\n  }\n  var BASE = ALPHABET.length;\n  var LEADER = ALPHABET.charAt(0);\n  var FACTOR = Math.log(BASE) / Math.log(256);\n  var iFACTOR = Math.log(256) / Math.log(BASE);\n  function encode(source) {\n    if (source instanceof Uint8Array);\n    else if (ArrayBuffer.isView(source)) {\n      source = new Uint8Array(source.buffer, source.byteOffset, source.byteLength);\n    } else if (Array.isArray(source)) {\n      source = Uint8Array.from(source);\n    }\n    if (!(source instanceof Uint8Array)) {\n      throw new TypeError('Expected Uint8Array');\n    }\n    if (source.length === 0) {\n      return '';\n    }\n    var zeroes = 0;\n    var length = 0;\n    var pbegin = 0;\n    var pend = source.length;\n    while (pbegin !== pend && source[pbegin] === 0) {\n      pbegin++;\n      zeroes++;\n    }\n    var size = (pend - pbegin) * iFACTOR + 1 >>> 0;\n    var b58 = new Uint8Array(size);\n    while (pbegin !== pend) {\n      var carry = source[pbegin];\n      var i = 0;\n      for (var it1 = size - 1; (carry !== 0 || i < length) && it1 !== -1; it1--, i++) {\n        carry += 256 * b58[it1] >>> 0;\n        b58[it1] = carry % BASE >>> 0;\n        carry = carry / BASE >>> 0;\n      }\n      if (carry !== 0) {\n        throw new Error('Non-zero carry');\n      }\n      length = i;\n      pbegin++;\n    }\n    var it2 = size - length;\n    while (it2 !== size && b58[it2] === 0) {\n      it2++;\n    }\n    var str = LEADER.repeat(zeroes);\n    for (; it2 < size; ++it2) {\n      str += ALPHABET.charAt(b58[it2]);\n    }\n    return str;\n  }\n  function decodeUnsafe(source) {\n    if (typeof source !== 'string') {\n      throw new TypeError('Expected String');\n    }\n    if (source.length === 0) {\n      return new Uint8Array();\n    }\n    var psz = 0;\n    if (source[psz] === ' ') {\n      return;\n    }\n    var zeroes = 0;\n    var length = 0;\n    while (source[psz] === LEADER) {\n      zeroes++;\n      psz++;\n    }\n    var size = (source.length - psz) * FACTOR + 1 >>> 0;\n    var b256 = new Uint8Array(size);\n    while (source[psz]) {\n      var carry = BASE_MAP[source.charCodeAt(psz)];\n      if (carry === 255) {\n        return;\n      }\n      var i = 0;\n      for (var it3 = size - 1; (carry !== 0 || i < length) && it3 !== -1; it3--, i++) {\n        carry += BASE * b256[it3] >>> 0;\n        b256[it3] = carry % 256 >>> 0;\n        carry = carry / 256 >>> 0;\n      }\n      if (carry !== 0) {\n        throw new Error('Non-zero carry');\n      }\n      length = i;\n      psz++;\n    }\n    if (source[psz] === ' ') {\n      return;\n    }\n    var it4 = size - length;\n    while (it4 !== size && b256[it4] === 0) {\n      it4++;\n    }\n    var vch = new Uint8Array(zeroes + (size - it4));\n    var j = zeroes;\n    while (it4 !== size) {\n      vch[j++] = b256[it4++];\n    }\n    return vch;\n  }\n  function decode(string) {\n    var buffer = decodeUnsafe(string);\n    if (buffer) {\n      return buffer;\n    }\n    throw new Error(`Non-${ name } character`);\n  }\n  return {\n    encode: encode,\n    decodeUnsafe: decodeUnsafe,\n    decode: decode\n  };\n}\nvar src = base;\nvar _brrp__multiformats_scope_baseX = src;\nexport default _brrp__multiformats_scope_baseX;","import basex from '../../vendor/base-x.js';\nimport { coerce } from '../bytes.js';\nclass Encoder {\n  constructor(name, prefix, baseEncode) {\n    this.name = name;\n    this.prefix = prefix;\n    this.baseEncode = baseEncode;\n  }\n  encode(bytes) {\n    if (bytes instanceof Uint8Array) {\n      return `${ this.prefix }${ this.baseEncode(bytes) }`;\n    } else {\n      throw Error('Unknown type, must be binary type');\n    }\n  }\n}\nclass Decoder {\n  constructor(name, prefix, baseDecode) {\n    this.name = name;\n    this.prefix = prefix;\n    if (prefix.codePointAt(0) === undefined) {\n      throw new Error('Invalid prefix character');\n    }\n    this.prefixCodePoint = prefix.codePointAt(0);\n    this.baseDecode = baseDecode;\n  }\n  decode(text) {\n    if (typeof text === 'string') {\n      if (text.codePointAt(0) !== this.prefixCodePoint) {\n        throw Error(`Unable to decode multibase string ${ JSON.stringify(text) }, ${ this.name } decoder only supports inputs prefixed with ${ this.prefix }`);\n      }\n      return this.baseDecode(text.slice(this.prefix.length));\n    } else {\n      throw Error('Can only multibase decode strings');\n    }\n  }\n  or(decoder) {\n    return or(this, decoder);\n  }\n}\nclass ComposedDecoder {\n  constructor(decoders) {\n    this.decoders = decoders;\n  }\n  or(decoder) {\n    return or(this, decoder);\n  }\n  decode(input) {\n    const prefix = input[0];\n    const decoder = this.decoders[prefix];\n    if (decoder) {\n      return decoder.decode(input);\n    } else {\n      throw RangeError(`Unable to decode multibase string ${ JSON.stringify(input) }, only inputs prefixed with ${ Object.keys(this.decoders) } are supported`);\n    }\n  }\n}\nexport const or = (left, right) => new ComposedDecoder({\n  ...left.decoders || { [left.prefix]: left },\n  ...right.decoders || { [right.prefix]: right }\n});\nexport class Codec {\n  constructor(name, prefix, baseEncode, baseDecode) {\n    this.name = name;\n    this.prefix = prefix;\n    this.baseEncode = baseEncode;\n    this.baseDecode = baseDecode;\n    this.encoder = new Encoder(name, prefix, baseEncode);\n    this.decoder = new Decoder(name, prefix, baseDecode);\n  }\n  encode(input) {\n    return this.encoder.encode(input);\n  }\n  decode(input) {\n    return this.decoder.decode(input);\n  }\n}\nexport const from = ({name, prefix, encode, decode}) => new Codec(name, prefix, encode, decode);\nexport const baseX = ({prefix, name, alphabet}) => {\n  const {encode, decode} = basex(alphabet, name);\n  return from({\n    prefix,\n    name,\n    encode,\n    decode: text => coerce(decode(text))\n  });\n};\nconst decode = (string, alphabet, bitsPerChar, name) => {\n  const codes = {};\n  for (let i = 0; i < alphabet.length; ++i) {\n    codes[alphabet[i]] = i;\n  }\n  let end = string.length;\n  while (string[end - 1] === '=') {\n    --end;\n  }\n  const out = new Uint8Array(end * bitsPerChar / 8 | 0);\n  let bits = 0;\n  let buffer = 0;\n  let written = 0;\n  for (let i = 0; i < end; ++i) {\n    const value = codes[string[i]];\n    if (value === undefined) {\n      throw new SyntaxError(`Non-${ name } character`);\n    }\n    buffer = buffer << bitsPerChar | value;\n    bits += bitsPerChar;\n    if (bits >= 8) {\n      bits -= 8;\n      out[written++] = 255 & buffer >> bits;\n    }\n  }\n  if (bits >= bitsPerChar || 255 & buffer << 8 - bits) {\n    throw new SyntaxError('Unexpected end of data');\n  }\n  return out;\n};\nconst encode = (data, alphabet, bitsPerChar) => {\n  const pad = alphabet[alphabet.length - 1] === '=';\n  const mask = (1 << bitsPerChar) - 1;\n  let out = '';\n  let bits = 0;\n  let buffer = 0;\n  for (let i = 0; i < data.length; ++i) {\n    buffer = buffer << 8 | data[i];\n    bits += 8;\n    while (bits > bitsPerChar) {\n      bits -= bitsPerChar;\n      out += alphabet[mask & buffer >> bits];\n    }\n  }\n  if (bits) {\n    out += alphabet[mask & buffer << bitsPerChar - bits];\n  }\n  if (pad) {\n    while (out.length * bitsPerChar & 7) {\n      out += '=';\n    }\n  }\n  return out;\n};\nexport const rfc4648 = ({name, prefix, bitsPerChar, alphabet}) => {\n  return from({\n    prefix,\n    name,\n    encode(input) {\n      return encode(input, alphabet, bitsPerChar);\n    },\n    decode(input) {\n      return decode(input, alphabet, bitsPerChar, name);\n    }\n  });\n};","import { baseX } from './base.js';\nexport const base58btc = baseX({\n  name: 'base58btc',\n  prefix: 'z',\n  alphabet: '123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz'\n});\nexport const base58flickr = baseX({\n  name: 'base58flickr',\n  prefix: 'Z',\n  alphabet: '123456789abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ'\n});","import { rfc4648 } from './base.js';\nexport const base32 = rfc4648({\n  prefix: 'b',\n  name: 'base32',\n  alphabet: 'abcdefghijklmnopqrstuvwxyz234567',\n  bitsPerChar: 5\n});\nexport const base32upper = rfc4648({\n  prefix: 'B',\n  name: 'base32upper',\n  alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZ234567',\n  bitsPerChar: 5\n});\nexport const base32pad = rfc4648({\n  prefix: 'c',\n  name: 'base32pad',\n  alphabet: 'abcdefghijklmnopqrstuvwxyz234567=',\n  bitsPerChar: 5\n});\nexport const base32padupper = rfc4648({\n  prefix: 'C',\n  name: 'base32padupper',\n  alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZ234567=',\n  bitsPerChar: 5\n});\nexport const base32hex = rfc4648({\n  prefix: 'v',\n  name: 'base32hex',\n  alphabet: '0123456789abcdefghijklmnopqrstuv',\n  bitsPerChar: 5\n});\nexport const base32hexupper = rfc4648({\n  prefix: 'V',\n  name: 'base32hexupper',\n  alphabet: '0123456789ABCDEFGHIJKLMNOPQRSTUV',\n  bitsPerChar: 5\n});\nexport const base32hexpad = rfc4648({\n  prefix: 't',\n  name: 'base32hexpad',\n  alphabet: '0123456789abcdefghijklmnopqrstuv=',\n  bitsPerChar: 5\n});\nexport const base32hexpadupper = rfc4648({\n  prefix: 'T',\n  name: 'base32hexpadupper',\n  alphabet: '0123456789ABCDEFGHIJKLMNOPQRSTUV=',\n  bitsPerChar: 5\n});\nexport const base32z = rfc4648({\n  prefix: 'h',\n  name: 'base32z',\n  alphabet: 'ybndrfg8ejkmcpqxot1uwisza345h769',\n  bitsPerChar: 5\n});","'use strict'\n\n/**\n * Collects all values from an (async) iterable into an array and returns it.\n *\n * @template T\n * @param {AsyncIterable<T>|Iterable<T>} source\n */\nconst all = async (source) => {\n  const arr = []\n\n  for await (const entry of source) {\n    arr.push(entry)\n  }\n\n  return arr\n}\n\nmodule.exports = all\n","var encode_1 = encode;\nvar MSB = 128, REST = 127, MSBALL = ~REST, INT = Math.pow(2, 31);\nfunction encode(num, out, offset) {\n  out = out || [];\n  offset = offset || 0;\n  var oldOffset = offset;\n  while (num >= INT) {\n    out[offset++] = num & 255 | MSB;\n    num /= 128;\n  }\n  while (num & MSBALL) {\n    out[offset++] = num & 255 | MSB;\n    num >>>= 7;\n  }\n  out[offset] = num | 0;\n  encode.bytes = offset - oldOffset + 1;\n  return out;\n}\nvar decode = read;\nvar MSB$1 = 128, REST$1 = 127;\nfunction read(buf, offset) {\n  var res = 0, offset = offset || 0, shift = 0, counter = offset, b, l = buf.length;\n  do {\n    if (counter >= l) {\n      read.bytes = 0;\n      throw new RangeError('Could not decode varint');\n    }\n    b = buf[counter++];\n    res += shift < 28 ? (b & REST$1) << shift : (b & REST$1) * Math.pow(2, shift);\n    shift += 7;\n  } while (b >= MSB$1);\n  read.bytes = counter - offset;\n  return res;\n}\nvar N1 = Math.pow(2, 7);\nvar N2 = Math.pow(2, 14);\nvar N3 = Math.pow(2, 21);\nvar N4 = Math.pow(2, 28);\nvar N5 = Math.pow(2, 35);\nvar N6 = Math.pow(2, 42);\nvar N7 = Math.pow(2, 49);\nvar N8 = Math.pow(2, 56);\nvar N9 = Math.pow(2, 63);\nvar length = function (value) {\n  return value < N1 ? 1 : value < N2 ? 2 : value < N3 ? 3 : value < N4 ? 4 : value < N5 ? 5 : value < N6 ? 6 : value < N7 ? 7 : value < N8 ? 8 : value < N9 ? 9 : 10;\n};\nvar varint = {\n  encode: encode_1,\n  decode: decode,\n  encodingLength: length\n};\nvar _brrp_varint = varint;\nexport default _brrp_varint;","import varint from '../vendor/varint.js';\nexport const decode = (data, offset = 0) => {\n  const code = varint.decode(data, offset);\n  return [\n    code,\n    varint.decode.bytes\n  ];\n};\nexport const encodeTo = (int, target, offset = 0) => {\n  varint.encode(int, target, offset);\n  return target;\n};\nexport const encodingLength = int => {\n  return varint.encodingLength(int);\n};","const empty = new Uint8Array(0);\nconst toHex = d => d.reduce((hex, byte) => hex + byte.toString(16).padStart(2, '0'), '');\nconst fromHex = hex => {\n  const hexes = hex.match(/../g);\n  return hexes ? new Uint8Array(hexes.map(b => parseInt(b, 16))) : empty;\n};\nconst equals = (aa, bb) => {\n  if (aa === bb)\n    return true;\n  if (aa.byteLength !== bb.byteLength) {\n    return false;\n  }\n  for (let ii = 0; ii < aa.byteLength; ii++) {\n    if (aa[ii] !== bb[ii]) {\n      return false;\n    }\n  }\n  return true;\n};\nconst coerce = o => {\n  if (o instanceof Uint8Array && o.constructor.name === 'Uint8Array')\n    return o;\n  if (o instanceof ArrayBuffer)\n    return new Uint8Array(o);\n  if (ArrayBuffer.isView(o)) {\n    return new Uint8Array(o.buffer, o.byteOffset, o.byteLength);\n  }\n  throw new Error('Unknown type, must be binary type');\n};\nconst isBinary = o => o instanceof ArrayBuffer || ArrayBuffer.isView(o);\nconst fromString = str => new TextEncoder().encode(str);\nconst toString = b => new TextDecoder().decode(b);\nexport {\n  equals,\n  coerce,\n  isBinary,\n  fromHex,\n  toHex,\n  fromString,\n  toString,\n  empty\n};","import {\n  coerce,\n  equals as equalBytes\n} from '../bytes.js';\nimport * as varint from '../varint.js';\nexport const create = (code, digest) => {\n  const size = digest.byteLength;\n  const sizeOffset = varint.encodingLength(code);\n  const digestOffset = sizeOffset + varint.encodingLength(size);\n  const bytes = new Uint8Array(digestOffset + size);\n  varint.encodeTo(code, bytes, 0);\n  varint.encodeTo(size, bytes, sizeOffset);\n  bytes.set(digest, digestOffset);\n  return new Digest(code, size, digest, bytes);\n};\nexport const decode = multihash => {\n  const bytes = coerce(multihash);\n  const [code, sizeOffset] = varint.decode(bytes);\n  const [size, digestOffset] = varint.decode(bytes.subarray(sizeOffset));\n  const digest = bytes.subarray(sizeOffset + digestOffset);\n  if (digest.byteLength !== size) {\n    throw new Error('Incorrect length');\n  }\n  return new Digest(code, size, digest, bytes);\n};\nexport const equals = (a, b) => {\n  if (a === b) {\n    return true;\n  } else {\n    return a.code === b.code && a.size === b.size && equalBytes(a.bytes, b.bytes);\n  }\n};\nexport class Digest {\n  constructor(code, size, digest, bytes) {\n    this.code = code;\n    this.size = size;\n    this.digest = digest;\n    this.bytes = bytes;\n  }\n}","function base(ALPHABET, name) {\n  if (ALPHABET.length >= 255) {\n    throw new TypeError('Alphabet too long');\n  }\n  var BASE_MAP = new Uint8Array(256);\n  for (var j = 0; j < BASE_MAP.length; j++) {\n    BASE_MAP[j] = 255;\n  }\n  for (var i = 0; i < ALPHABET.length; i++) {\n    var x = ALPHABET.charAt(i);\n    var xc = x.charCodeAt(0);\n    if (BASE_MAP[xc] !== 255) {\n      throw new TypeError(x + ' is ambiguous');\n    }\n    BASE_MAP[xc] = i;\n  }\n  var BASE = ALPHABET.length;\n  var LEADER = ALPHABET.charAt(0);\n  var FACTOR = Math.log(BASE) / Math.log(256);\n  var iFACTOR = Math.log(256) / Math.log(BASE);\n  function encode(source) {\n    if (source instanceof Uint8Array);\n    else if (ArrayBuffer.isView(source)) {\n      source = new Uint8Array(source.buffer, source.byteOffset, source.byteLength);\n    } else if (Array.isArray(source)) {\n      source = Uint8Array.from(source);\n    }\n    if (!(source instanceof Uint8Array)) {\n      throw new TypeError('Expected Uint8Array');\n    }\n    if (source.length === 0) {\n      return '';\n    }\n    var zeroes = 0;\n    var length = 0;\n    var pbegin = 0;\n    var pend = source.length;\n    while (pbegin !== pend && source[pbegin] === 0) {\n      pbegin++;\n      zeroes++;\n    }\n    var size = (pend - pbegin) * iFACTOR + 1 >>> 0;\n    var b58 = new Uint8Array(size);\n    while (pbegin !== pend) {\n      var carry = source[pbegin];\n      var i = 0;\n      for (var it1 = size - 1; (carry !== 0 || i < length) && it1 !== -1; it1--, i++) {\n        carry += 256 * b58[it1] >>> 0;\n        b58[it1] = carry % BASE >>> 0;\n        carry = carry / BASE >>> 0;\n      }\n      if (carry !== 0) {\n        throw new Error('Non-zero carry');\n      }\n      length = i;\n      pbegin++;\n    }\n    var it2 = size - length;\n    while (it2 !== size && b58[it2] === 0) {\n      it2++;\n    }\n    var str = LEADER.repeat(zeroes);\n    for (; it2 < size; ++it2) {\n      str += ALPHABET.charAt(b58[it2]);\n    }\n    return str;\n  }\n  function decodeUnsafe(source) {\n    if (typeof source !== 'string') {\n      throw new TypeError('Expected String');\n    }\n    if (source.length === 0) {\n      return new Uint8Array();\n    }\n    var psz = 0;\n    if (source[psz] === ' ') {\n      return;\n    }\n    var zeroes = 0;\n    var length = 0;\n    while (source[psz] === LEADER) {\n      zeroes++;\n      psz++;\n    }\n    var size = (source.length - psz) * FACTOR + 1 >>> 0;\n    var b256 = new Uint8Array(size);\n    while (source[psz]) {\n      var carry = BASE_MAP[source.charCodeAt(psz)];\n      if (carry === 255) {\n        return;\n      }\n      var i = 0;\n      for (var it3 = size - 1; (carry !== 0 || i < length) && it3 !== -1; it3--, i++) {\n        carry += BASE * b256[it3] >>> 0;\n        b256[it3] = carry % 256 >>> 0;\n        carry = carry / 256 >>> 0;\n      }\n      if (carry !== 0) {\n        throw new Error('Non-zero carry');\n      }\n      length = i;\n      psz++;\n    }\n    if (source[psz] === ' ') {\n      return;\n    }\n    var it4 = size - length;\n    while (it4 !== size && b256[it4] === 0) {\n      it4++;\n    }\n    var vch = new Uint8Array(zeroes + (size - it4));\n    var j = zeroes;\n    while (it4 !== size) {\n      vch[j++] = b256[it4++];\n    }\n    return vch;\n  }\n  function decode(string) {\n    var buffer = decodeUnsafe(string);\n    if (buffer) {\n      return buffer;\n    }\n    throw new Error(`Non-${ name } character`);\n  }\n  return {\n    encode: encode,\n    decodeUnsafe: decodeUnsafe,\n    decode: decode\n  };\n}\nvar src = base;\nvar _brrp__multiformats_scope_baseX = src;\nexport default _brrp__multiformats_scope_baseX;","import basex from '../../vendor/base-x.js';\nimport { coerce } from '../bytes.js';\nclass Encoder {\n  constructor(name, prefix, baseEncode) {\n    this.name = name;\n    this.prefix = prefix;\n    this.baseEncode = baseEncode;\n  }\n  encode(bytes) {\n    if (bytes instanceof Uint8Array) {\n      return `${ this.prefix }${ this.baseEncode(bytes) }`;\n    } else {\n      throw Error('Unknown type, must be binary type');\n    }\n  }\n}\nclass Decoder {\n  constructor(name, prefix, baseDecode) {\n    this.name = name;\n    this.prefix = prefix;\n    if (prefix.codePointAt(0) === undefined) {\n      throw new Error('Invalid prefix character');\n    }\n    this.prefixCodePoint = prefix.codePointAt(0);\n    this.baseDecode = baseDecode;\n  }\n  decode(text) {\n    if (typeof text === 'string') {\n      if (text.codePointAt(0) !== this.prefixCodePoint) {\n        throw Error(`Unable to decode multibase string ${ JSON.stringify(text) }, ${ this.name } decoder only supports inputs prefixed with ${ this.prefix }`);\n      }\n      return this.baseDecode(text.slice(this.prefix.length));\n    } else {\n      throw Error('Can only multibase decode strings');\n    }\n  }\n  or(decoder) {\n    return or(this, decoder);\n  }\n}\nclass ComposedDecoder {\n  constructor(decoders) {\n    this.decoders = decoders;\n  }\n  or(decoder) {\n    return or(this, decoder);\n  }\n  decode(input) {\n    const prefix = input[0];\n    const decoder = this.decoders[prefix];\n    if (decoder) {\n      return decoder.decode(input);\n    } else {\n      throw RangeError(`Unable to decode multibase string ${ JSON.stringify(input) }, only inputs prefixed with ${ Object.keys(this.decoders) } are supported`);\n    }\n  }\n}\nexport const or = (left, right) => new ComposedDecoder({\n  ...left.decoders || { [left.prefix]: left },\n  ...right.decoders || { [right.prefix]: right }\n});\nexport class Codec {\n  constructor(name, prefix, baseEncode, baseDecode) {\n    this.name = name;\n    this.prefix = prefix;\n    this.baseEncode = baseEncode;\n    this.baseDecode = baseDecode;\n    this.encoder = new Encoder(name, prefix, baseEncode);\n    this.decoder = new Decoder(name, prefix, baseDecode);\n  }\n  encode(input) {\n    return this.encoder.encode(input);\n  }\n  decode(input) {\n    return this.decoder.decode(input);\n  }\n}\nexport const from = ({name, prefix, encode, decode}) => new Codec(name, prefix, encode, decode);\nexport const baseX = ({prefix, name, alphabet}) => {\n  const {encode, decode} = basex(alphabet, name);\n  return from({\n    prefix,\n    name,\n    encode,\n    decode: text => coerce(decode(text))\n  });\n};\nconst decode = (string, alphabet, bitsPerChar, name) => {\n  const codes = {};\n  for (let i = 0; i < alphabet.length; ++i) {\n    codes[alphabet[i]] = i;\n  }\n  let end = string.length;\n  while (string[end - 1] === '=') {\n    --end;\n  }\n  const out = new Uint8Array(end * bitsPerChar / 8 | 0);\n  let bits = 0;\n  let buffer = 0;\n  let written = 0;\n  for (let i = 0; i < end; ++i) {\n    const value = codes[string[i]];\n    if (value === undefined) {\n      throw new SyntaxError(`Non-${ name } character`);\n    }\n    buffer = buffer << bitsPerChar | value;\n    bits += bitsPerChar;\n    if (bits >= 8) {\n      bits -= 8;\n      out[written++] = 255 & buffer >> bits;\n    }\n  }\n  if (bits >= bitsPerChar || 255 & buffer << 8 - bits) {\n    throw new SyntaxError('Unexpected end of data');\n  }\n  return out;\n};\nconst encode = (data, alphabet, bitsPerChar) => {\n  const pad = alphabet[alphabet.length - 1] === '=';\n  const mask = (1 << bitsPerChar) - 1;\n  let out = '';\n  let bits = 0;\n  let buffer = 0;\n  for (let i = 0; i < data.length; ++i) {\n    buffer = buffer << 8 | data[i];\n    bits += 8;\n    while (bits > bitsPerChar) {\n      bits -= bitsPerChar;\n      out += alphabet[mask & buffer >> bits];\n    }\n  }\n  if (bits) {\n    out += alphabet[mask & buffer << bitsPerChar - bits];\n  }\n  if (pad) {\n    while (out.length * bitsPerChar & 7) {\n      out += '=';\n    }\n  }\n  return out;\n};\nexport const rfc4648 = ({name, prefix, bitsPerChar, alphabet}) => {\n  return from({\n    prefix,\n    name,\n    encode(input) {\n      return encode(input, alphabet, bitsPerChar);\n    },\n    decode(input) {\n      return decode(input, alphabet, bitsPerChar, name);\n    }\n  });\n};","import { baseX } from './base.js';\nexport const base58btc = baseX({\n  name: 'base58btc',\n  prefix: 'z',\n  alphabet: '123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz'\n});\nexport const base58flickr = baseX({\n  name: 'base58flickr',\n  prefix: 'Z',\n  alphabet: '123456789abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ'\n});","import { rfc4648 } from './base.js';\nexport const base32 = rfc4648({\n  prefix: 'b',\n  name: 'base32',\n  alphabet: 'abcdefghijklmnopqrstuvwxyz234567',\n  bitsPerChar: 5\n});\nexport const base32upper = rfc4648({\n  prefix: 'B',\n  name: 'base32upper',\n  alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZ234567',\n  bitsPerChar: 5\n});\nexport const base32pad = rfc4648({\n  prefix: 'c',\n  name: 'base32pad',\n  alphabet: 'abcdefghijklmnopqrstuvwxyz234567=',\n  bitsPerChar: 5\n});\nexport const base32padupper = rfc4648({\n  prefix: 'C',\n  name: 'base32padupper',\n  alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZ234567=',\n  bitsPerChar: 5\n});\nexport const base32hex = rfc4648({\n  prefix: 'v',\n  name: 'base32hex',\n  alphabet: '0123456789abcdefghijklmnopqrstuv',\n  bitsPerChar: 5\n});\nexport const base32hexupper = rfc4648({\n  prefix: 'V',\n  name: 'base32hexupper',\n  alphabet: '0123456789ABCDEFGHIJKLMNOPQRSTUV',\n  bitsPerChar: 5\n});\nexport const base32hexpad = rfc4648({\n  prefix: 't',\n  name: 'base32hexpad',\n  alphabet: '0123456789abcdefghijklmnopqrstuv=',\n  bitsPerChar: 5\n});\nexport const base32hexpadupper = rfc4648({\n  prefix: 'T',\n  name: 'base32hexpadupper',\n  alphabet: '0123456789ABCDEFGHIJKLMNOPQRSTUV=',\n  bitsPerChar: 5\n});\nexport const base32z = rfc4648({\n  prefix: 'h',\n  name: 'base32z',\n  alphabet: 'ybndrfg8ejkmcpqxot1uwisza345h769',\n  bitsPerChar: 5\n});","import * as varint from './varint.js';\nimport * as Digest from './hashes/digest.js';\nimport { base58btc } from './bases/base58.js';\nimport { base32 } from './bases/base32.js';\nimport { coerce } from './bytes.js';\nexport class CID {\n  constructor(version, code, multihash, bytes) {\n    this.code = code;\n    this.version = version;\n    this.multihash = multihash;\n    this.bytes = bytes;\n    this.byteOffset = bytes.byteOffset;\n    this.byteLength = bytes.byteLength;\n    this.asCID = this;\n    this._baseCache = new Map();\n    Object.defineProperties(this, {\n      byteOffset: hidden,\n      byteLength: hidden,\n      code: readonly,\n      version: readonly,\n      multihash: readonly,\n      bytes: readonly,\n      _baseCache: hidden,\n      asCID: hidden\n    });\n  }\n  toV0() {\n    switch (this.version) {\n    case 0: {\n        return this;\n      }\n    default: {\n        const {code, multihash} = this;\n        if (code !== DAG_PB_CODE) {\n          throw new Error('Cannot convert a non dag-pb CID to CIDv0');\n        }\n        if (multihash.code !== SHA_256_CODE) {\n          throw new Error('Cannot convert non sha2-256 multihash CID to CIDv0');\n        }\n        return CID.createV0(multihash);\n      }\n    }\n  }\n  toV1() {\n    switch (this.version) {\n    case 0: {\n        const {code, digest} = this.multihash;\n        const multihash = Digest.create(code, digest);\n        return CID.createV1(this.code, multihash);\n      }\n    case 1: {\n        return this;\n      }\n    default: {\n        throw Error(`Can not convert CID version ${ this.version } to version 0. This is a bug please report`);\n      }\n    }\n  }\n  equals(other) {\n    return other && this.code === other.code && this.version === other.version && Digest.equals(this.multihash, other.multihash);\n  }\n  toString(base) {\n    const {bytes, version, _baseCache} = this;\n    switch (version) {\n    case 0:\n      return toStringV0(bytes, _baseCache, base || base58btc.encoder);\n    default:\n      return toStringV1(bytes, _baseCache, base || base32.encoder);\n    }\n  }\n  toJSON() {\n    return {\n      code: this.code,\n      version: this.version,\n      hash: this.multihash.bytes\n    };\n  }\n  get [Symbol.toStringTag]() {\n    return 'CID';\n  }\n  [Symbol.for('nodejs.util.inspect.custom')]() {\n    return 'CID(' + this.toString() + ')';\n  }\n  static isCID(value) {\n    deprecate(/^0\\.0/, IS_CID_DEPRECATION);\n    return !!(value && (value[cidSymbol] || value.asCID === value));\n  }\n  get toBaseEncodedString() {\n    throw new Error('Deprecated, use .toString()');\n  }\n  get codec() {\n    throw new Error('\"codec\" property is deprecated, use integer \"code\" property instead');\n  }\n  get buffer() {\n    throw new Error('Deprecated .buffer property, use .bytes to get Uint8Array instead');\n  }\n  get multibaseName() {\n    throw new Error('\"multibaseName\" property is deprecated');\n  }\n  get prefix() {\n    throw new Error('\"prefix\" property is deprecated');\n  }\n  static asCID(value) {\n    if (value instanceof CID) {\n      return value;\n    } else if (value != null && value.asCID === value) {\n      const {version, code, multihash, bytes} = value;\n      return new CID(version, code, multihash, bytes || encodeCID(version, code, multihash.bytes));\n    } else if (value != null && value[cidSymbol] === true) {\n      const {version, multihash, code} = value;\n      const digest = Digest.decode(multihash);\n      return CID.create(version, code, digest);\n    } else {\n      return null;\n    }\n  }\n  static create(version, code, digest) {\n    if (typeof code !== 'number') {\n      throw new Error('String codecs are no longer supported');\n    }\n    switch (version) {\n    case 0: {\n        if (code !== DAG_PB_CODE) {\n          throw new Error(`Version 0 CID must use dag-pb (code: ${ DAG_PB_CODE }) block encoding`);\n        } else {\n          return new CID(version, code, digest, digest.bytes);\n        }\n      }\n    case 1: {\n        const bytes = encodeCID(version, code, digest.bytes);\n        return new CID(version, code, digest, bytes);\n      }\n    default: {\n        throw new Error('Invalid version');\n      }\n    }\n  }\n  static createV0(digest) {\n    return CID.create(0, DAG_PB_CODE, digest);\n  }\n  static createV1(code, digest) {\n    return CID.create(1, code, digest);\n  }\n  static decode(bytes) {\n    const [cid, remainder] = CID.decodeFirst(bytes);\n    if (remainder.length) {\n      throw new Error('Incorrect length');\n    }\n    return cid;\n  }\n  static decodeFirst(bytes) {\n    const specs = CID.inspectBytes(bytes);\n    const prefixSize = specs.size - specs.multihashSize;\n    const multihashBytes = coerce(bytes.subarray(prefixSize, prefixSize + specs.multihashSize));\n    if (multihashBytes.byteLength !== specs.multihashSize) {\n      throw new Error('Incorrect length');\n    }\n    const digestBytes = multihashBytes.subarray(specs.multihashSize - specs.digestSize);\n    const digest = new Digest.Digest(specs.multihashCode, specs.digestSize, digestBytes, multihashBytes);\n    const cid = specs.version === 0 ? CID.createV0(digest) : CID.createV1(specs.codec, digest);\n    return [\n      cid,\n      bytes.subarray(specs.size)\n    ];\n  }\n  static inspectBytes(initialBytes) {\n    let offset = 0;\n    const next = () => {\n      const [i, length] = varint.decode(initialBytes.subarray(offset));\n      offset += length;\n      return i;\n    };\n    let version = next();\n    let codec = DAG_PB_CODE;\n    if (version === 18) {\n      version = 0;\n      offset = 0;\n    } else if (version === 1) {\n      codec = next();\n    }\n    if (version !== 0 && version !== 1) {\n      throw new RangeError(`Invalid CID version ${ version }`);\n    }\n    const prefixSize = offset;\n    const multihashCode = next();\n    const digestSize = next();\n    const size = offset + digestSize;\n    const multihashSize = size - prefixSize;\n    return {\n      version,\n      codec,\n      multihashCode,\n      digestSize,\n      multihashSize,\n      size\n    };\n  }\n  static parse(source, base) {\n    const [prefix, bytes] = parseCIDtoBytes(source, base);\n    const cid = CID.decode(bytes);\n    cid._baseCache.set(prefix, source);\n    return cid;\n  }\n}\nconst parseCIDtoBytes = (source, base) => {\n  switch (source[0]) {\n  case 'Q': {\n      const decoder = base || base58btc;\n      return [\n        base58btc.prefix,\n        decoder.decode(`${ base58btc.prefix }${ source }`)\n      ];\n    }\n  case base58btc.prefix: {\n      const decoder = base || base58btc;\n      return [\n        base58btc.prefix,\n        decoder.decode(source)\n      ];\n    }\n  case base32.prefix: {\n      const decoder = base || base32;\n      return [\n        base32.prefix,\n        decoder.decode(source)\n      ];\n    }\n  default: {\n      if (base == null) {\n        throw Error('To parse non base32 or base58btc encoded CID multibase decoder must be provided');\n      }\n      return [\n        source[0],\n        base.decode(source)\n      ];\n    }\n  }\n};\nconst toStringV0 = (bytes, cache, base) => {\n  const {prefix} = base;\n  if (prefix !== base58btc.prefix) {\n    throw Error(`Cannot string encode V0 in ${ base.name } encoding`);\n  }\n  const cid = cache.get(prefix);\n  if (cid == null) {\n    const cid = base.encode(bytes).slice(1);\n    cache.set(prefix, cid);\n    return cid;\n  } else {\n    return cid;\n  }\n};\nconst toStringV1 = (bytes, cache, base) => {\n  const {prefix} = base;\n  const cid = cache.get(prefix);\n  if (cid == null) {\n    const cid = base.encode(bytes);\n    cache.set(prefix, cid);\n    return cid;\n  } else {\n    return cid;\n  }\n};\nconst DAG_PB_CODE = 112;\nconst SHA_256_CODE = 18;\nconst encodeCID = (version, code, multihash) => {\n  const codeOffset = varint.encodingLength(version);\n  const hashOffset = codeOffset + varint.encodingLength(code);\n  const bytes = new Uint8Array(hashOffset + multihash.byteLength);\n  varint.encodeTo(version, bytes, 0);\n  varint.encodeTo(code, bytes, codeOffset);\n  bytes.set(multihash, hashOffset);\n  return bytes;\n};\nconst cidSymbol = Symbol.for('@ipld/js-cid/CID');\nconst readonly = {\n  writable: false,\n  configurable: false,\n  enumerable: true\n};\nconst hidden = {\n  writable: false,\n  enumerable: false,\n  configurable: false\n};\nconst version = '0.0.0-dev';\nconst deprecate = (range, message) => {\n  if (range.test(version)) {\n    console.warn(message);\n  } else {\n    throw new Error(message);\n  }\n};\nconst IS_CID_DEPRECATION = `CID.isCID(v) is deprecated and will be removed in the next major release.\nFollowing code pattern:\n\nif (CID.isCID(value)) {\n  doSomethingWithCID(value)\n}\n\nIs replaced with:\n\nconst cid = CID.asCID(value)\nif (cid) {\n  // Make sure to use cid instead of value\n  doSomethingWithCID(cid)\n}\n`;","import { rfc4648 } from './base.js';\nexport const base64 = rfc4648({\n  prefix: 'm',\n  name: 'base64',\n  alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/',\n  bitsPerChar: 6\n});\nexport const base64pad = rfc4648({\n  prefix: 'M',\n  name: 'base64pad',\n  alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=',\n  bitsPerChar: 6\n});\nexport const base64url = rfc4648({\n  prefix: 'u',\n  name: 'base64url',\n  alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_',\n  bitsPerChar: 6\n});\nexport const base64urlpad = rfc4648({\n  prefix: 'U',\n  name: 'base64urlpad',\n  alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_=',\n  bitsPerChar: 6\n});","import { Type } from '../token.js';\nimport { encodeCustom } from '../encode.js';\nimport { encodeErrPrefix } from '../common.js';\nimport {\n  asU8A,\n  fromString\n} from '../byte-utils.js';\nclass JSONEncoder extends Array {\n  constructor() {\n    super();\n    this.inRecursive = [];\n  }\n  prefix(buf) {\n    const recurs = this.inRecursive[this.inRecursive.length - 1];\n    if (recurs) {\n      if (recurs.type === Type.array) {\n        recurs.elements++;\n        if (recurs.elements !== 1) {\n          buf.push([44]);\n        }\n      }\n      if (recurs.type === Type.map) {\n        recurs.elements++;\n        if (recurs.elements !== 1) {\n          if (recurs.elements % 2 === 1) {\n            buf.push([44]);\n          } else {\n            buf.push([58]);\n          }\n        }\n      }\n    }\n  }\n  [Type.uint.major](buf, token) {\n    this.prefix(buf);\n    const is = String(token.value);\n    const isa = [];\n    for (let i = 0; i < is.length; i++) {\n      isa[i] = is.charCodeAt(i);\n    }\n    buf.push(isa);\n  }\n  [Type.negint.major](buf, token) {\n    this[Type.uint.major](buf, token);\n  }\n  [Type.bytes.major](_buf, _token) {\n    throw new Error(`${ encodeErrPrefix } unsupported type: Uint8Array`);\n  }\n  [Type.string.major](buf, token) {\n    this.prefix(buf);\n    const byts = fromString(JSON.stringify(token.value));\n    buf.push(byts.length > 32 ? asU8A(byts) : byts);\n  }\n  [Type.array.major](buf, _token) {\n    this.prefix(buf);\n    this.inRecursive.push({\n      type: Type.array,\n      elements: 0\n    });\n    buf.push([91]);\n  }\n  [Type.map.major](buf, _token) {\n    this.prefix(buf);\n    this.inRecursive.push({\n      type: Type.map,\n      elements: 0\n    });\n    buf.push([123]);\n  }\n  [Type.tag.major](_buf, _token) {\n  }\n  [Type.float.major](buf, token) {\n    if (token.type.name === 'break') {\n      const recurs = this.inRecursive.pop();\n      if (recurs) {\n        if (recurs.type === Type.array) {\n          buf.push([93]);\n        } else if (recurs.type === Type.map) {\n          buf.push([125]);\n        } else {\n          throw new Error('Unexpected recursive type; this should not happen!');\n        }\n        return;\n      }\n      throw new Error('Unexpected break; this should not happen!');\n    }\n    if (token.value === undefined) {\n      throw new Error(`${ encodeErrPrefix } unsupported type: undefined`);\n    }\n    this.prefix(buf);\n    if (token.type.name === 'true') {\n      buf.push([\n        116,\n        114,\n        117,\n        101\n      ]);\n      return;\n    } else if (token.type.name === 'false') {\n      buf.push([\n        102,\n        97,\n        108,\n        115,\n        101\n      ]);\n      return;\n    } else if (token.type.name === 'null') {\n      buf.push([\n        110,\n        117,\n        108,\n        108\n      ]);\n      return;\n    }\n    const is = String(token.value);\n    const isa = [];\n    let dp = false;\n    for (let i = 0; i < is.length; i++) {\n      isa[i] = is.charCodeAt(i);\n      if (!dp && (isa[i] === 46 || isa[i] === 101 || isa[i] === 69)) {\n        dp = true;\n      }\n    }\n    if (!dp) {\n      isa.push(46);\n      isa.push(48);\n    }\n    buf.push(isa);\n  }\n}\nfunction mapSorter(e1, e2) {\n  if (Array.isArray(e1[0]) || Array.isArray(e2[0])) {\n    throw new Error(`${ encodeErrPrefix } complex map keys are not supported`);\n  }\n  const keyToken1 = e1[0];\n  const keyToken2 = e2[0];\n  if (keyToken1.type !== Type.string || keyToken2.type !== Type.string) {\n    throw new Error(`${ encodeErrPrefix } non-string map keys are not supported`);\n  }\n  if (keyToken1 < keyToken2) {\n    return -1;\n  }\n  if (keyToken1 > keyToken2) {\n    return 1;\n  }\n  throw new Error(`${ encodeErrPrefix } unexpected duplicate map keys, this is not supported`);\n}\nconst defaultEncodeOptions = {\n  addBreakTokens: true,\n  mapSorter\n};\nfunction encode(data, options) {\n  options = Object.assign({}, defaultEncodeOptions, options);\n  return encodeCustom(data, new JSONEncoder(), options);\n}\nexport {\n  encode\n};","import { decode as _decode } from '../decode.js';\nimport {\n  Token,\n  Type\n} from '../token.js';\nimport { decodeCodePointsArray } from '../byte-utils.js';\nimport { decodeErrPrefix } from '../common.js';\nclass Tokenizer {\n  constructor(data, options = {}) {\n    this.pos = 0;\n    this.data = data;\n    this.options = options;\n    this.modeStack = ['value'];\n    this.lastToken = '';\n  }\n  done() {\n    return this.pos >= this.data.length;\n  }\n  ch() {\n    return this.data[this.pos];\n  }\n  currentMode() {\n    return this.modeStack[this.modeStack.length - 1];\n  }\n  skipWhitespace() {\n    let c = this.ch();\n    while (c === 32 || c === 9 || c === 13 || c === 10) {\n      c = this.data[++this.pos];\n    }\n  }\n  expect(str) {\n    if (this.data.length - this.pos < str.length) {\n      throw new Error(`${ decodeErrPrefix } unexpected end of input at position ${ this.pos }`);\n    }\n    for (let i = 0; i < str.length; i++) {\n      if (this.data[this.pos++] !== str[i]) {\n        throw new Error(`${ decodeErrPrefix } unexpected token at position ${ this.pos }, expected to find '${ String.fromCharCode(...str) }'`);\n      }\n    }\n  }\n  parseNumber() {\n    const startPos = this.pos;\n    let negative = false;\n    let float = false;\n    const swallow = chars => {\n      while (!this.done()) {\n        const ch = this.ch();\n        if (chars.includes(ch)) {\n          this.pos++;\n        } else {\n          break;\n        }\n      }\n    };\n    if (this.ch() === 45) {\n      negative = true;\n      this.pos++;\n    }\n    if (this.ch() === 48) {\n      this.pos++;\n      if (this.ch() === 46) {\n        this.pos++;\n        float = true;\n      } else {\n        return new Token(Type.uint, 0, this.pos - startPos);\n      }\n    }\n    swallow([\n      48,\n      49,\n      50,\n      51,\n      52,\n      53,\n      54,\n      55,\n      56,\n      57\n    ]);\n    if (negative && this.pos === startPos + 1) {\n      throw new Error(`${ decodeErrPrefix } unexpected token at position ${ this.pos }`);\n    }\n    if (!this.done() && this.ch() === 46) {\n      if (float) {\n        throw new Error(`${ decodeErrPrefix } unexpected token at position ${ this.pos }`);\n      }\n      float = true;\n      this.pos++;\n      swallow([\n        48,\n        49,\n        50,\n        51,\n        52,\n        53,\n        54,\n        55,\n        56,\n        57\n      ]);\n    }\n    if (!this.done() && (this.ch() === 101 || this.ch() === 69)) {\n      float = true;\n      this.pos++;\n      if (!this.done() && (this.ch() === 43 || this.ch() === 45)) {\n        this.pos++;\n      }\n      swallow([\n        48,\n        49,\n        50,\n        51,\n        52,\n        53,\n        54,\n        55,\n        56,\n        57\n      ]);\n    }\n    const numStr = String.fromCharCode.apply(null, this.data.subarray(startPos, this.pos));\n    const num = parseFloat(numStr);\n    if (float) {\n      return new Token(Type.float, num, this.pos - startPos);\n    }\n    if (this.options.allowBigInt !== true || Number.isSafeInteger(num)) {\n      return new Token(num >= 0 ? Type.uint : Type.negint, num, this.pos - startPos);\n    }\n    return new Token(num >= 0 ? Type.uint : Type.negint, BigInt(numStr), this.pos - startPos);\n  }\n  parseString() {\n    if (this.ch() !== 34) {\n      throw new Error(`${ decodeErrPrefix } unexpected character at position ${ this.pos }; this shouldn't happen`);\n    }\n    this.pos++;\n    for (let i = this.pos, l = 0; i < this.data.length && l < 65536; i++, l++) {\n      const ch = this.data[i];\n      if (ch === 92 || ch < 32 || ch >= 128) {\n        break;\n      }\n      if (ch === 34) {\n        const str = String.fromCharCode.apply(null, this.data.subarray(this.pos, i));\n        this.pos = i + 1;\n        return new Token(Type.string, str, l);\n      }\n    }\n    const startPos = this.pos;\n    const chars = [];\n    const readu4 = () => {\n      if (this.pos + 4 >= this.data.length) {\n        throw new Error(`${ decodeErrPrefix } unexpected end of unicode escape sequence at position ${ this.pos }`);\n      }\n      let u4 = 0;\n      for (let i = 0; i < 4; i++) {\n        let ch = this.ch();\n        if (ch >= 48 && ch <= 57) {\n          ch -= 48;\n        } else if (ch >= 97 && ch <= 102) {\n          ch = ch - 97 + 10;\n        } else if (ch >= 65 && ch <= 70) {\n          ch = ch - 65 + 10;\n        } else {\n          throw new Error(`${ decodeErrPrefix } unexpected unicode escape character at position ${ this.pos }`);\n        }\n        u4 = u4 * 16 + ch;\n        this.pos++;\n      }\n      return u4;\n    };\n    const readUtf8Char = () => {\n      const firstByte = this.ch();\n      let codePoint = null;\n      let bytesPerSequence = firstByte > 239 ? 4 : firstByte > 223 ? 3 : firstByte > 191 ? 2 : 1;\n      if (this.pos + bytesPerSequence > this.data.length) {\n        throw new Error(`${ decodeErrPrefix } unexpected unicode sequence at position ${ this.pos }`);\n      }\n      let secondByte, thirdByte, fourthByte, tempCodePoint;\n      switch (bytesPerSequence) {\n      case 1:\n        if (firstByte < 128) {\n          codePoint = firstByte;\n        }\n        break;\n      case 2:\n        secondByte = this.data[this.pos + 1];\n        if ((secondByte & 192) === 128) {\n          tempCodePoint = (firstByte & 31) << 6 | secondByte & 63;\n          if (tempCodePoint > 127) {\n            codePoint = tempCodePoint;\n          }\n        }\n        break;\n      case 3:\n        secondByte = this.data[this.pos + 1];\n        thirdByte = this.data[this.pos + 2];\n        if ((secondByte & 192) === 128 && (thirdByte & 192) === 128) {\n          tempCodePoint = (firstByte & 15) << 12 | (secondByte & 63) << 6 | thirdByte & 63;\n          if (tempCodePoint > 2047 && (tempCodePoint < 55296 || tempCodePoint > 57343)) {\n            codePoint = tempCodePoint;\n          }\n        }\n        break;\n      case 4:\n        secondByte = this.data[this.pos + 1];\n        thirdByte = this.data[this.pos + 2];\n        fourthByte = this.data[this.pos + 3];\n        if ((secondByte & 192) === 128 && (thirdByte & 192) === 128 && (fourthByte & 192) === 128) {\n          tempCodePoint = (firstByte & 15) << 18 | (secondByte & 63) << 12 | (thirdByte & 63) << 6 | fourthByte & 63;\n          if (tempCodePoint > 65535 && tempCodePoint < 1114112) {\n            codePoint = tempCodePoint;\n          }\n        }\n      }\n      if (codePoint === null) {\n        codePoint = 65533;\n        bytesPerSequence = 1;\n      } else if (codePoint > 65535) {\n        codePoint -= 65536;\n        chars.push(codePoint >>> 10 & 1023 | 55296);\n        codePoint = 56320 | codePoint & 1023;\n      }\n      chars.push(codePoint);\n      this.pos += bytesPerSequence;\n    };\n    while (!this.done()) {\n      const ch = this.ch();\n      let ch1;\n      switch (ch) {\n      case 92:\n        this.pos++;\n        if (this.done()) {\n          throw new Error(`${ decodeErrPrefix } unexpected string termination at position ${ this.pos }`);\n        }\n        ch1 = this.ch();\n        this.pos++;\n        switch (ch1) {\n        case 34:\n        case 39:\n        case 92:\n        case 47:\n          chars.push(ch1);\n          break;\n        case 98:\n          chars.push(8);\n          break;\n        case 116:\n          chars.push(9);\n          break;\n        case 110:\n          chars.push(10);\n          break;\n        case 102:\n          chars.push(12);\n          break;\n        case 114:\n          chars.push(13);\n          break;\n        case 117:\n          chars.push(readu4());\n          break;\n        default:\n          throw new Error(`${ decodeErrPrefix } unexpected string escape character at position ${ this.pos }`);\n        }\n        break;\n      case 34:\n        this.pos++;\n        return new Token(Type.string, decodeCodePointsArray(chars), this.pos - startPos);\n      default:\n        if (ch < 32) {\n          throw new Error(`${ decodeErrPrefix } invalid control character at position ${ this.pos }`);\n        } else if (ch < 128) {\n          chars.push(ch);\n          this.pos++;\n        } else {\n          readUtf8Char();\n        }\n      }\n    }\n    throw new Error(`${ decodeErrPrefix } unexpected end of string at position ${ this.pos }`);\n  }\n  parseValue() {\n    switch (this.ch()) {\n    case 123:\n      this.modeStack.push('obj-start');\n      this.pos++;\n      return new Token(Type.map, Infinity, 1);\n    case 91:\n      this.modeStack.push('array-start');\n      this.pos++;\n      return new Token(Type.array, Infinity, 1);\n    case 34: {\n        return this.parseString();\n      }\n    case 110:\n      this.expect([\n        110,\n        117,\n        108,\n        108\n      ]);\n      return new Token(Type.null, null, 4);\n    case 102:\n      this.expect([\n        102,\n        97,\n        108,\n        115,\n        101\n      ]);\n      return new Token(Type.false, false, 5);\n    case 116:\n      this.expect([\n        116,\n        114,\n        117,\n        101\n      ]);\n      return new Token(Type.true, true, 4);\n    case 45:\n    case 48:\n    case 49:\n    case 50:\n    case 51:\n    case 52:\n    case 53:\n    case 54:\n    case 55:\n    case 56:\n    case 57:\n      return this.parseNumber();\n    default:\n      throw new Error(`${ decodeErrPrefix } unexpected character at position ${ this.pos }`);\n    }\n  }\n  next() {\n    this.skipWhitespace();\n    switch (this.currentMode()) {\n    case 'value':\n      this.modeStack.pop();\n      return this.parseValue();\n    case 'array-value': {\n        this.modeStack.pop();\n        if (this.ch() === 93) {\n          this.pos++;\n          this.skipWhitespace();\n          return new Token(Type.break, undefined, 1);\n        }\n        if (this.ch() !== 44) {\n          throw new Error(`${ decodeErrPrefix } unexpected character at position ${ this.pos }, was expecting array delimiter but found '${ String.fromCharCode(this.ch()) }'`);\n        }\n        this.pos++;\n        this.modeStack.push('array-value');\n        this.skipWhitespace();\n        return this.parseValue();\n      }\n    case 'array-start': {\n        this.modeStack.pop();\n        if (this.ch() === 93) {\n          this.pos++;\n          this.skipWhitespace();\n          return new Token(Type.break, undefined, 1);\n        }\n        this.modeStack.push('array-value');\n        this.skipWhitespace();\n        return this.parseValue();\n      }\n    case 'obj-key':\n      if (this.ch() === 125) {\n        this.modeStack.pop();\n        this.pos++;\n        this.skipWhitespace();\n        return new Token(Type.break, undefined, 1);\n      }\n      if (this.ch() !== 44) {\n        throw new Error(`${ decodeErrPrefix } unexpected character at position ${ this.pos }, was expecting object delimiter but found '${ String.fromCharCode(this.ch()) }'`);\n      }\n      this.pos++;\n      this.skipWhitespace();\n    case 'obj-start': {\n        this.modeStack.pop();\n        if (this.ch() === 125) {\n          this.pos++;\n          this.skipWhitespace();\n          return new Token(Type.break, undefined, 1);\n        }\n        const token = this.parseString();\n        this.skipWhitespace();\n        if (this.ch() !== 58) {\n          throw new Error(`${ decodeErrPrefix } unexpected character at position ${ this.pos }, was expecting key/value delimiter ':' but found '${ String.fromCharCode(this.ch()) }'`);\n        }\n        this.pos++;\n        this.modeStack.push('obj-value');\n        return token;\n      }\n    case 'obj-value': {\n        this.modeStack.pop();\n        this.modeStack.push('obj-key');\n        this.skipWhitespace();\n        return this.parseValue();\n      }\n    default:\n      throw new Error(`${ decodeErrPrefix } unexpected parse state at position ${ this.pos }; this shouldn't happen`);\n    }\n  }\n}\nfunction decode(data, options) {\n  options = Object.assign({ tokenizer: new Tokenizer(data, options) }, options);\n  return _decode(data, options);\n}\nexport {\n  decode,\n  Tokenizer\n};","import { CID } from 'multiformats';\nimport { base64 } from 'multiformats/bases/base64';\nimport {\n  Token,\n  Type\n} from 'cborg';\nimport * as cborgJson from 'cborg/json';\nfunction cidEncoder(obj) {\n  if (obj.asCID !== obj) {\n    return null;\n  }\n  const cid = CID.asCID(obj);\n  if (!cid) {\n    return null;\n  }\n  const cidString = cid.toString();\n  return [\n    new Token(Type.map, Infinity, 1),\n    new Token(Type.string, '/', 1),\n    new Token(Type.string, cidString, cidString.length),\n    new Token(Type.break, undefined, 1)\n  ];\n}\nfunction bytesEncoder(bytes) {\n  const bytesString = base64.encode(bytes).slice(1);\n  return [\n    new Token(Type.map, Infinity, 1),\n    new Token(Type.string, '/', 1),\n    new Token(Type.map, Infinity, 1),\n    new Token(Type.string, 'bytes', 5),\n    new Token(Type.string, bytesString, bytesString.length),\n    new Token(Type.break, undefined, 1),\n    new Token(Type.break, undefined, 1)\n  ];\n}\nfunction undefinedEncoder() {\n  throw new Error('`undefined` is not supported by the IPLD Data Model and cannot be encoded');\n}\nfunction numberEncoder(num) {\n  if (Number.isNaN(num)) {\n    throw new Error('`NaN` is not supported by the IPLD Data Model and cannot be encoded');\n  }\n  if (num === Infinity || num === -Infinity) {\n    throw new Error('`Infinity` and `-Infinity` is not supported by the IPLD Data Model and cannot be encoded');\n  }\n  return null;\n}\nconst encodeOptions = {\n  typeEncoders: {\n    Object: cidEncoder,\n    Uint8Array: bytesEncoder,\n    Buffer: bytesEncoder,\n    undefined: undefinedEncoder,\n    number: numberEncoder\n  }\n};\nclass DagJsonTokenizer extends cborgJson.Tokenizer {\n  constructor(data, options) {\n    super(data, options);\n    this.tokenBuffer = [];\n  }\n  done() {\n    return this.tokenBuffer.length === 0 && super.done();\n  }\n  _next() {\n    if (this.tokenBuffer.length > 0) {\n      return this.tokenBuffer.pop();\n    }\n    return super.next();\n  }\n  next() {\n    const token = this._next();\n    if (token.type === Type.map) {\n      const keyToken = this._next();\n      if (keyToken.type === Type.string && keyToken.value === '/') {\n        const valueToken = this._next();\n        if (valueToken.type === Type.string) {\n          const breakToken = this._next();\n          if (breakToken.type !== Type.break) {\n            throw new Error('Invalid encoded CID form');\n          }\n          this.tokenBuffer.push(valueToken);\n          return new Token(Type.tag, 42, 0);\n        }\n        if (valueToken.type === Type.map) {\n          const innerKeyToken = this._next();\n          if (innerKeyToken.type === Type.string && innerKeyToken.value === 'bytes') {\n            const innerValueToken = this._next();\n            if (innerValueToken.type === Type.string) {\n              for (let i = 0; i < 2; i++) {\n                const breakToken = this._next();\n                if (breakToken.type !== Type.break) {\n                  throw new Error('Invalid encoded Bytes form');\n                }\n              }\n              const bytes = base64.decode(`m${ innerValueToken.value }`);\n              return new Token(Type.bytes, bytes, innerValueToken.value.length);\n            }\n            this.tokenBuffer.push(innerValueToken);\n          }\n          this.tokenBuffer.push(innerKeyToken);\n        }\n        this.tokenBuffer.push(valueToken);\n      }\n      this.tokenBuffer.push(keyToken);\n    }\n    return token;\n  }\n}\nconst decodeOptions = {\n  allowIndefinite: false,\n  allowUndefined: false,\n  allowNaN: false,\n  allowInfinity: false,\n  allowBigInt: true,\n  strict: true,\n  useMaps: false,\n  tags: []\n};\ndecodeOptions.tags[42] = CID.parse;\nexport const name = 'dag-json';\nexport const code = 297;\nexport const encode = node => cborgJson.encode(node, encodeOptions);\nexport const decode = data => {\n  const options = Object.assign(decodeOptions, { tokenizer: new DagJsonTokenizer(data, decodeOptions) });\n  return cborgJson.decode(data, options);\n};","function base(ALPHABET, name) {\n  if (ALPHABET.length >= 255) {\n    throw new TypeError('Alphabet too long');\n  }\n  var BASE_MAP = new Uint8Array(256);\n  for (var j = 0; j < BASE_MAP.length; j++) {\n    BASE_MAP[j] = 255;\n  }\n  for (var i = 0; i < ALPHABET.length; i++) {\n    var x = ALPHABET.charAt(i);\n    var xc = x.charCodeAt(0);\n    if (BASE_MAP[xc] !== 255) {\n      throw new TypeError(x + ' is ambiguous');\n    }\n    BASE_MAP[xc] = i;\n  }\n  var BASE = ALPHABET.length;\n  var LEADER = ALPHABET.charAt(0);\n  var FACTOR = Math.log(BASE) / Math.log(256);\n  var iFACTOR = Math.log(256) / Math.log(BASE);\n  function encode(source) {\n    if (source instanceof Uint8Array);\n    else if (ArrayBuffer.isView(source)) {\n      source = new Uint8Array(source.buffer, source.byteOffset, source.byteLength);\n    } else if (Array.isArray(source)) {\n      source = Uint8Array.from(source);\n    }\n    if (!(source instanceof Uint8Array)) {\n      throw new TypeError('Expected Uint8Array');\n    }\n    if (source.length === 0) {\n      return '';\n    }\n    var zeroes = 0;\n    var length = 0;\n    var pbegin = 0;\n    var pend = source.length;\n    while (pbegin !== pend && source[pbegin] === 0) {\n      pbegin++;\n      zeroes++;\n    }\n    var size = (pend - pbegin) * iFACTOR + 1 >>> 0;\n    var b58 = new Uint8Array(size);\n    while (pbegin !== pend) {\n      var carry = source[pbegin];\n      var i = 0;\n      for (var it1 = size - 1; (carry !== 0 || i < length) && it1 !== -1; it1--, i++) {\n        carry += 256 * b58[it1] >>> 0;\n        b58[it1] = carry % BASE >>> 0;\n        carry = carry / BASE >>> 0;\n      }\n      if (carry !== 0) {\n        throw new Error('Non-zero carry');\n      }\n      length = i;\n      pbegin++;\n    }\n    var it2 = size - length;\n    while (it2 !== size && b58[it2] === 0) {\n      it2++;\n    }\n    var str = LEADER.repeat(zeroes);\n    for (; it2 < size; ++it2) {\n      str += ALPHABET.charAt(b58[it2]);\n    }\n    return str;\n  }\n  function decodeUnsafe(source) {\n    if (typeof source !== 'string') {\n      throw new TypeError('Expected String');\n    }\n    if (source.length === 0) {\n      return new Uint8Array();\n    }\n    var psz = 0;\n    if (source[psz] === ' ') {\n      return;\n    }\n    var zeroes = 0;\n    var length = 0;\n    while (source[psz] === LEADER) {\n      zeroes++;\n      psz++;\n    }\n    var size = (source.length - psz) * FACTOR + 1 >>> 0;\n    var b256 = new Uint8Array(size);\n    while (source[psz]) {\n      var carry = BASE_MAP[source.charCodeAt(psz)];\n      if (carry === 255) {\n        return;\n      }\n      var i = 0;\n      for (var it3 = size - 1; (carry !== 0 || i < length) && it3 !== -1; it3--, i++) {\n        carry += BASE * b256[it3] >>> 0;\n        b256[it3] = carry % 256 >>> 0;\n        carry = carry / 256 >>> 0;\n      }\n      if (carry !== 0) {\n        throw new Error('Non-zero carry');\n      }\n      length = i;\n      psz++;\n    }\n    if (source[psz] === ' ') {\n      return;\n    }\n    var it4 = size - length;\n    while (it4 !== size && b256[it4] === 0) {\n      it4++;\n    }\n    var vch = new Uint8Array(zeroes + (size - it4));\n    var j = zeroes;\n    while (it4 !== size) {\n      vch[j++] = b256[it4++];\n    }\n    return vch;\n  }\n  function decode(string) {\n    var buffer = decodeUnsafe(string);\n    if (buffer) {\n      return buffer;\n    }\n    throw new Error(`Non-${ name } character`);\n  }\n  return {\n    encode: encode,\n    decodeUnsafe: decodeUnsafe,\n    decode: decode\n  };\n}\nvar src = base;\nvar _brrp__multiformats_scope_baseX = src;\nexport default _brrp__multiformats_scope_baseX;","const empty = new Uint8Array(0);\nconst toHex = d => d.reduce((hex, byte) => hex + byte.toString(16).padStart(2, '0'), '');\nconst fromHex = hex => {\n  const hexes = hex.match(/../g);\n  return hexes ? new Uint8Array(hexes.map(b => parseInt(b, 16))) : empty;\n};\nconst equals = (aa, bb) => {\n  if (aa === bb)\n    return true;\n  if (aa.byteLength !== bb.byteLength) {\n    return false;\n  }\n  for (let ii = 0; ii < aa.byteLength; ii++) {\n    if (aa[ii] !== bb[ii]) {\n      return false;\n    }\n  }\n  return true;\n};\nconst coerce = o => {\n  if (o instanceof Uint8Array && o.constructor.name === 'Uint8Array')\n    return o;\n  if (o instanceof ArrayBuffer)\n    return new Uint8Array(o);\n  if (ArrayBuffer.isView(o)) {\n    return new Uint8Array(o.buffer, o.byteOffset, o.byteLength);\n  }\n  throw new Error('Unknown type, must be binary type');\n};\nconst isBinary = o => o instanceof ArrayBuffer || ArrayBuffer.isView(o);\nconst fromString = str => new TextEncoder().encode(str);\nconst toString = b => new TextDecoder().decode(b);\nexport {\n  equals,\n  coerce,\n  isBinary,\n  fromHex,\n  toHex,\n  fromString,\n  toString,\n  empty\n};","import basex from '../../vendor/base-x.js';\nimport { coerce } from '../bytes.js';\nclass Encoder {\n  constructor(name, prefix, baseEncode) {\n    this.name = name;\n    this.prefix = prefix;\n    this.baseEncode = baseEncode;\n  }\n  encode(bytes) {\n    if (bytes instanceof Uint8Array) {\n      return `${ this.prefix }${ this.baseEncode(bytes) }`;\n    } else {\n      throw Error('Unknown type, must be binary type');\n    }\n  }\n}\nclass Decoder {\n  constructor(name, prefix, baseDecode) {\n    this.name = name;\n    this.prefix = prefix;\n    if (prefix.codePointAt(0) === undefined) {\n      throw new Error('Invalid prefix character');\n    }\n    this.prefixCodePoint = prefix.codePointAt(0);\n    this.baseDecode = baseDecode;\n  }\n  decode(text) {\n    if (typeof text === 'string') {\n      if (text.codePointAt(0) !== this.prefixCodePoint) {\n        throw Error(`Unable to decode multibase string ${ JSON.stringify(text) }, ${ this.name } decoder only supports inputs prefixed with ${ this.prefix }`);\n      }\n      return this.baseDecode(text.slice(this.prefix.length));\n    } else {\n      throw Error('Can only multibase decode strings');\n    }\n  }\n  or(decoder) {\n    return or(this, decoder);\n  }\n}\nclass ComposedDecoder {\n  constructor(decoders) {\n    this.decoders = decoders;\n  }\n  or(decoder) {\n    return or(this, decoder);\n  }\n  decode(input) {\n    const prefix = input[0];\n    const decoder = this.decoders[prefix];\n    if (decoder) {\n      return decoder.decode(input);\n    } else {\n      throw RangeError(`Unable to decode multibase string ${ JSON.stringify(input) }, only inputs prefixed with ${ Object.keys(this.decoders) } are supported`);\n    }\n  }\n}\nexport const or = (left, right) => new ComposedDecoder({\n  ...left.decoders || { [left.prefix]: left },\n  ...right.decoders || { [right.prefix]: right }\n});\nexport class Codec {\n  constructor(name, prefix, baseEncode, baseDecode) {\n    this.name = name;\n    this.prefix = prefix;\n    this.baseEncode = baseEncode;\n    this.baseDecode = baseDecode;\n    this.encoder = new Encoder(name, prefix, baseEncode);\n    this.decoder = new Decoder(name, prefix, baseDecode);\n  }\n  encode(input) {\n    return this.encoder.encode(input);\n  }\n  decode(input) {\n    return this.decoder.decode(input);\n  }\n}\nexport const from = ({name, prefix, encode, decode}) => new Codec(name, prefix, encode, decode);\nexport const baseX = ({prefix, name, alphabet}) => {\n  const {encode, decode} = basex(alphabet, name);\n  return from({\n    prefix,\n    name,\n    encode,\n    decode: text => coerce(decode(text))\n  });\n};\nconst decode = (string, alphabet, bitsPerChar, name) => {\n  const codes = {};\n  for (let i = 0; i < alphabet.length; ++i) {\n    codes[alphabet[i]] = i;\n  }\n  let end = string.length;\n  while (string[end - 1] === '=') {\n    --end;\n  }\n  const out = new Uint8Array(end * bitsPerChar / 8 | 0);\n  let bits = 0;\n  let buffer = 0;\n  let written = 0;\n  for (let i = 0; i < end; ++i) {\n    const value = codes[string[i]];\n    if (value === undefined) {\n      throw new SyntaxError(`Non-${ name } character`);\n    }\n    buffer = buffer << bitsPerChar | value;\n    bits += bitsPerChar;\n    if (bits >= 8) {\n      bits -= 8;\n      out[written++] = 255 & buffer >> bits;\n    }\n  }\n  if (bits >= bitsPerChar || 255 & buffer << 8 - bits) {\n    throw new SyntaxError('Unexpected end of data');\n  }\n  return out;\n};\nconst encode = (data, alphabet, bitsPerChar) => {\n  const pad = alphabet[alphabet.length - 1] === '=';\n  const mask = (1 << bitsPerChar) - 1;\n  let out = '';\n  let bits = 0;\n  let buffer = 0;\n  for (let i = 0; i < data.length; ++i) {\n    buffer = buffer << 8 | data[i];\n    bits += 8;\n    while (bits > bitsPerChar) {\n      bits -= bitsPerChar;\n      out += alphabet[mask & buffer >> bits];\n    }\n  }\n  if (bits) {\n    out += alphabet[mask & buffer << bitsPerChar - bits];\n  }\n  if (pad) {\n    while (out.length * bitsPerChar & 7) {\n      out += '=';\n    }\n  }\n  return out;\n};\nexport const rfc4648 = ({name, prefix, bitsPerChar, alphabet}) => {\n  return from({\n    prefix,\n    name,\n    encode(input) {\n      return encode(input, alphabet, bitsPerChar);\n    },\n    decode(input) {\n      return decode(input, alphabet, bitsPerChar, name);\n    }\n  });\n};","import { rfc4648 } from './base.js';\nexport const base64 = rfc4648({\n  prefix: 'm',\n  name: 'base64',\n  alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/',\n  bitsPerChar: 6\n});\nexport const base64pad = rfc4648({\n  prefix: 'M',\n  name: 'base64pad',\n  alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=',\n  bitsPerChar: 6\n});\nexport const base64url = rfc4648({\n  prefix: 'u',\n  name: 'base64url',\n  alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_',\n  bitsPerChar: 6\n});\nexport const base64urlpad = rfc4648({\n  prefix: 'U',\n  name: 'base64urlpad',\n  alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_=',\n  bitsPerChar: 6\n});","import { baseX } from './base.js';\nexport const base58btc = baseX({\n  name: 'base58btc',\n  prefix: 'z',\n  alphabet: '123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz'\n});\nexport const base58flickr = baseX({\n  name: 'base58flickr',\n  prefix: 'Z',\n  alphabet: '123456789abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ'\n});","import { rfc4648 } from './base.js';\nexport const base32 = rfc4648({\n  prefix: 'b',\n  name: 'base32',\n  alphabet: 'abcdefghijklmnopqrstuvwxyz234567',\n  bitsPerChar: 5\n});\nexport const base32upper = rfc4648({\n  prefix: 'B',\n  name: 'base32upper',\n  alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZ234567',\n  bitsPerChar: 5\n});\nexport const base32pad = rfc4648({\n  prefix: 'c',\n  name: 'base32pad',\n  alphabet: 'abcdefghijklmnopqrstuvwxyz234567=',\n  bitsPerChar: 5\n});\nexport const base32padupper = rfc4648({\n  prefix: 'C',\n  name: 'base32padupper',\n  alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZ234567=',\n  bitsPerChar: 5\n});\nexport const base32hex = rfc4648({\n  prefix: 'v',\n  name: 'base32hex',\n  alphabet: '0123456789abcdefghijklmnopqrstuv',\n  bitsPerChar: 5\n});\nexport const base32hexupper = rfc4648({\n  prefix: 'V',\n  name: 'base32hexupper',\n  alphabet: '0123456789ABCDEFGHIJKLMNOPQRSTUV',\n  bitsPerChar: 5\n});\nexport const base32hexpad = rfc4648({\n  prefix: 't',\n  name: 'base32hexpad',\n  alphabet: '0123456789abcdefghijklmnopqrstuv=',\n  bitsPerChar: 5\n});\nexport const base32hexpadupper = rfc4648({\n  prefix: 'T',\n  name: 'base32hexpadupper',\n  alphabet: '0123456789ABCDEFGHIJKLMNOPQRSTUV=',\n  bitsPerChar: 5\n});\nexport const base32z = rfc4648({\n  prefix: 'h',\n  name: 'base32z',\n  alphabet: 'ybndrfg8ejkmcpqxot1uwisza345h769',\n  bitsPerChar: 5\n});"],"names":["parse","ms","name","coerce","require$$0","hash","self","format","code","encode_1","encode","MSB","REST","MSBALL","INT","decode","read","N1","N2","N3","N4","N5","N6","N7","N8","N9","length","varint","require$$1","require$$2","defaultEncodeOptions","bytes","writer","roots","writeBytes","CBOR.encode","MSB$1","REST$1","_brrp_varint","encodeTo","encodingLength","equals","create","digest","varint.encodingLength","varint.encodeTo","Digest","varint.decode","equalBytes","base","i","j","string","src","_brrp__multiformats_scope_baseX","Encoder","Decoder","or","ComposedDecoder","decoders","Codec","from","baseX","alphabet","basex","codes","end","rfc4648","base58btc","base32","CID","version","hidden","readonly","DAG_PB_CODE","SHA_256_CODE","Digest.create","Digest.equals","toStringV0","toStringV1","deprecate","IS_CID_DEPRECATION","cidSymbol","encodeCID","Digest.decode","Digest.Digest","parseCIDtoBytes","cache","cid","reader","readHeader","decodeDagCbor","headerValidator","first","multihash","blockLength","off","n","get","fromString","toString","identity","base2","base8","base10","base16","base16upper","base32upper","base32pad","base32padupper","base32hex","base32hexupper","base32hexpad","base32hexpadupper","base32z","base36","base36upper","base58flickr","base64","base64pad","base64url","base64urlpad","alphabetBytesToChars","alphabetCharsToBytes","base256emoji","bases","identityBase","base58","asUint8Array","allocUnsafe","_a","createCodec","ascii","BASES","uint8ArrayFromString","uint8ArrayToString","log","debug","unwrap","keyToMultihash","mhd.decode","raw.code","process","migration","links","textEncoder","size","params","offset","utf8","alloc","LongBits","util","require$$3","require$$4","require$$5","require$$6","require$$7","global","this","Buffer","merge","Writer","BufferWriter","create_array","Reader","BufferReader","buffer","err","rpc","$Reader","$Writer","$root","ipfs","Set","PinTypes","cidToKey","uint8ArrayConcat","node","dagPb.decode","uint8ArrayCompare","bins","dagPb.encode","pinset.loadSet","dagPb.code","cbor.encode","cbor.decode","pinset.storeSet","findLevelJs","hasWithFallback","getWithFallback","batch","MFS_ROOT_KEY","$util","Protocols","Addresses","Peer","Envelope","PeerRecord","baseCache","ip.isIP","ip.toBytes","ip.toString","__classPrivateFieldGet","__classPrivateFieldSet","codec.fromBytes","codec.fromString","codec.bytesToString","codec.sizeForAddr","codec.bytesToTuples","codec.tuplesToStringTuples","codec.tuplesToBytes","tuple","uint8ArrayEquals","migration8","migration9","migration10","migration11","migration12","repoVersion.getVersion","lock","repoVersion.setVersion","bytesModule","bytes_1","map","globalThis","symbol","config","EventEmitter","names","events","emit","on","TimeoutError","AbortError","getDOMException","getAbortedReason","pTimeout","timeoutError","_PQueue_doesIntervalAllowAnother_get","_PQueue_doesConcurrentAllowAnother_get","_PQueue_next","_PQueue_emitEvents","_PQueue_onResumeInterval","_PQueue_isIntervalPaused_get","_PQueue_tryToStartAnother","_PQueue_initializeIntervalIfNeeded","_PQueue_onInterval","_PQueue_processQueue","_PQueue_onEvent","filter","_get","_set","compare","object","spec","FixedFIFO","FIFO","pushable","push","_pushable","drain","cborg.encode","entry","cborg.decode","all","walkDag","options","event","defaultOptions","observer","next","gc","parallelBatch","mortice","CONSTANTS.repoVersion","ERRORS.ERR_REPO_ALREADY_OPEN","ERRORS.InvalidRepoVersionError","ERRORS.ERR_REPO_NOT_INITIALIZED","ERRORS.ERR_REPO_ALREADY_CLOSED","ERRORS.NotFoundError","migrator.revert","migrator.migrate","float","_decode","cborgJson.Tokenizer","cborgJson.encode","cborgJson.decode"],"mappings":"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AA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AA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"}